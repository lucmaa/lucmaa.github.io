{"meta":{"version":1,"warehouse":"3.0.1"},"models":{"Asset":[{"_id":"themes/even/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/even/source/robots.txt","path":"robots.txt","modified":0,"renderable":1},{"_id":"themes/even/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/even/source/js/src/even.js","path":"js/src/even.js","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.eot","path":"fonts/chancery/apple-chancery-webfont.eot","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.ttf","path":"fonts/chancery/apple-chancery-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff","path":"fonts/chancery/apple-chancery-webfont.woff","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff2","path":"fonts/chancery/apple-chancery-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/blank.gif","path":"lib/fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/fancybox_loading.gif","path":"lib/fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/fancybox_loading@2x.gif","path":"lib/fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/fancybox_overlay.png","path":"lib/fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/fancybox_sprite.png","path":"lib/fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/fancybox_sprite@2x.png","path":"lib/fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.css","path":"lib/fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.js","path":"lib/fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.pack.js","path":"lib/fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/slideout/slideout.js","path":"lib/slideout/slideout.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/slideout/slideout.min.js","path":"lib/slideout/slideout.min.js","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.svg","path":"fonts/chancery/apple-chancery-webfont.svg","modified":0,"renderable":1},{"_id":"themes/even/source/lib/jquery/jquery.min.js","path":"lib/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/fancybox_buttons.png","path":"lib/fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-media.js","path":"lib/fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/build-xserver.md","hash":"9309142722141f068c8bf49103c746fa4ca8ff7a","modified":1603110254662},{"_id":"source/_posts/debug-x11-with-tcpdump.md","hash":"6ea0b1bb3e97727114bba7a6324c80f49aed164d","modified":1602208623588},{"_id":"source/_posts/draw-command.md","hash":"0707eb272532e6d4a86a79ed5c3f23d937045952","modified":1600313815173},{"_id":"source/_posts/gcc-attribute.md","hash":"c5483a97585a901fb3319011ccdd901086d48013","modified":1594174865781},{"_id":"source/_posts/glamor.md","hash":"27c9912f43d873e2a9b61a1b9c25fc40253bde79","modified":1604966655334},{"_id":"source/_posts/mesa.md","hash":"0366fcac5a1463bfb921c134535c51aae19280f5","modified":1595478065973},{"_id":"source/_posts/pixmap.md","hash":"5e1acdfc6b164186c91fe3a87748782f7d331842","modified":1603100730272},{"_id":"source/_posts/multithread-synchronization.md","hash":"79950cb237a983c31e612b923a4658203b10b128","modified":1595579905705},{"_id":"source/_posts/point-parameters.md","hash":"5e90c151678e46c19e85e65c97f9bb0bdeb16944","modified":1595579765595},{"_id":"source/_posts/regex-in-vi.md","hash":"18dad9ff697494724ec2ddd58b6f9b5e42cd5485","modified":1594174865806},{"_id":"source/_posts/sfinae.md","hash":"b917f296be8d72bf643578928049b190b0ea7bd7","modified":1599126084108},{"_id":"source/_posts/shader-ballot.md","hash":"6ee6ecba86398efbc6f5d3c53b730f13c617419b","modified":1595579646550},{"_id":"source/_posts/smart-pointer.md","hash":"ab2231ff3c234105f33f1fda875f7cca3cfe3178","modified":1595579859823},{"_id":"source/_posts/sparse-texture.md","hash":"1f89eee366f303853f72de1c3d4b63d81dd432f0","modified":1595579625610},{"_id":"source/_posts/texture-storage.md","hash":"4a2bfaf76f2c359b9e502d0ddb60e2652a1a7810","modified":1595579616830},{"_id":"source/_posts/texture-swizzle.md","hash":"9543945301a765783d3520de7da22f79e3fed833","modified":1595573483896},{"_id":"source/_posts/texture-view.md","hash":"7fb28654f85f7eff7c36062f74141996ec011f99","modified":1595579610438},{"_id":"source/_posts/windows-insider-program.md","hash":"a20b14b2df9a5b54dc89987e42278e84c36514a3","modified":1594174865812},{"_id":"source/_posts/x-hierarchy.md","hash":"949da0d3377018ee62fe021e8e9d2e359bb8d223","modified":1602208623628},{"_id":"source/about/index.md","hash":"5d056a15b0e19e64345ab39f201f8f02cde71883","modified":1595572392093},{"_id":"source/categories/index.md","hash":"2e490f1d193d5318b0c294875949073462e78371","modified":1595499137784},{"_id":"source/tags/index.md","hash":"04959d575e0cb220c8ee255002b5fb98873655a2","modified":1595497816018},{"_id":"source/_posts/mesa/gdb.svg","hash":"db978e382575b43dbcf404fa61264635e93672f8","modified":1594174865794},{"_id":"source/_posts/mesa/glXChooseVisual.png","hash":"ea41d5081584f0b0d11112b4cc4675df8b7fdf5b","modified":1594174865795},{"_id":"source/_posts/mesa/glxgears.png","hash":"4435b498dd5235d936be5e3a1ad1784726648203","modified":1594174865799},{"_id":"source/_posts/mesa/osdemo.jpg","hash":"b8ba59aa45e84f32b188d6ca027b9bbe1b86c48a","modified":1594174865801},{"_id":"source/_posts/smart-pointer/shared_ptr.png","hash":"301818f09258860f2530a51aca0ab0289a3fdd37","modified":1594174865809},{"_id":"source/css/_custom/style.css","hash":"5bfbeccc2d8a38cb59cc541fdc00e31f1c640460","modified":1602547704680},{"_id":"source/_posts/mesa/OSMesaCreateContextExt.png","hash":"77769f7a206b51f772da21dc1deed36573da1b75","modified":1594174865790},{"_id":"source/_posts/sparse-texture/SparseTextureExample.jpg","hash":"904a197dd1db3e6fbac515342dad2f969400dc4d","modified":1595478137777},{"_id":"source/_posts/mesa/PopMatrix.png","hash":"0bbbc07f08e0a518cb3cd43f855958a945257d12","modified":1594174865793},{"_id":"source/_posts/mesa/glXCreateContext.png","hash":"e27e2794cbf443f86d2852a1e7844d98892fe15e","modified":1594174865798},{"_id":"source/_posts/windows-insider-program/windows_update.png","hash":"890f8c06c452a1bdddadbb0cd2f2502f5b8109a8","modified":1594174865818},{"_id":"public/about/index.html","hash":"75cb8583d4074c3b35fb15028c23b26c37118994","modified":1604966840728},{"_id":"public/categories/index.html","hash":"f3f375ce951762b66c2c04b7b069931f7212d01c","modified":1604966840728},{"_id":"public/tags/index.html","hash":"17e787fca2799a27f9a473fc86631d0700c9c11d","modified":1604966840728},{"_id":"public/glamor/index.html","hash":"21f7e4037d71f166ea7be0aa30918659bd4c032c","modified":1604966840728},{"_id":"public/build-xserver/index.html","hash":"650a3d0c67a853ccd2209ce16e93ab9351b904f6","modified":1604966840728},{"_id":"public/pixmap/index.html","hash":"c46d4148973258ebc0be2b74498363d8195865c6","modified":1604966840728},{"_id":"public/draw-command/index.html","hash":"6925e08b0aafe2cc21c5d316bd3825d2caa28e2b","modified":1604966840728},{"_id":"public/x-hierarchy/index.html","hash":"bab6ac7b26748246d09a9fe6f853b16a170b0911","modified":1604966840728},{"_id":"public/sfinae/index.html","hash":"946f4dc5f5d84a2c1c593906a4616038b7498c18","modified":1604966840728},{"_id":"public/sparse-texture/index.html","hash":"fe679a9a807b1110c43ecfef76708ce4fcb9535e","modified":1604966840728},{"_id":"public/smart-pointer/index.html","hash":"60031118f10a9bd2fd0e7fe86bfd360dcef1d78e","modified":1604966840728},{"_id":"public/texture-storage/index.html","hash":"449d28a674da9126c669c5a80b3cee3ea2d442c8","modified":1604966840728},{"_id":"public/texture-swizzle/index.html","hash":"c4339fb4b11458e497a330115e6d1e504090b248","modified":1604966840728},{"_id":"public/texture-view/index.html","hash":"a631fa767dc08df43314bc40abb1aa38afa5d711","modified":1604966840728},{"_id":"public/shader-ballot/index.html","hash":"dcf3811f21dd83568f47caa90e6b709bb8697889","modified":1604966840728},{"_id":"public/point-parameters/index.html","hash":"fcf1e55036c41da96e7de73fff2a2a8d9f2ffd20","modified":1604966840728},{"_id":"public/multithread-synchronization/index.html","hash":"650a9c5077620457f57a693176a9e0079588dfe7","modified":1604966840728},{"_id":"public/regex-in-vi/index.html","hash":"6de7fe0e509a1048080184e0e2e3d41c77213074","modified":1604966840728},{"_id":"public/gcc-attribute/index.html","hash":"3dac0b165fc501a80c473aae9aee51d7a8aba9bb","modified":1604966840728},{"_id":"public/debug-x11-with-tcpdump/index.html","hash":"31b5bdeb636f61914bf9177a73d5d9a903fb82ac","modified":1604966840728},{"_id":"public/windows-insider-program/index.html","hash":"ebe9f35457ac76e5cdeded40522efb23c484ab7c","modified":1604966840728},{"_id":"public/mesa/index.html","hash":"e0deb624fd309c1cf73f721993d307a77d471a55","modified":1604966840728},{"_id":"public/archives/index.html","hash":"b01849294fad1bc499395137d61c6928ae2c9eca","modified":1604966840728},{"_id":"public/categories/Programming/index.html","hash":"2bafbd9b21c6e3a28b59231ead18f7ec6bcb40f9","modified":1604966840728},{"_id":"public/categories/CG/index.html","hash":"f50437d03aadd77c3732310891204e3531ecce1c","modified":1604966840728},{"_id":"public/index.html","hash":"cb153cc32988f8ea64076fb4c00edd3b27f3e97e","modified":1604966840728},{"_id":"public/page/2/index.html","hash":"76101e2de1e6c0c533c1a901b52091235a9ce086","modified":1604966840728},{"_id":"public/tags/X/index.html","hash":"082834404b1bcfe831728d666a7b961ce57cfec4","modified":1604966840728},{"_id":"public/tags/OpenGL/index.html","hash":"aa315eeb88477d68f8c07061b8b64fc7e19e851c","modified":1604966840728},{"_id":"public/tags/gcc/index.html","hash":"b7f287e48346ad74b52862fd59a31920511beb70","modified":1604966840728},{"_id":"public/tags/multi-thread/index.html","hash":"809d3fd14d795f5ccc65b76b359e07658dc414a2","modified":1604966840728},{"_id":"public/tags/OGL-Extension/index.html","hash":"c9402fd11f01ab1fe5c53333ae7bb68de3042241","modified":1604966840728},{"_id":"public/tags/re/index.html","hash":"6af955fcacc7f237e803eb030a94c02c82a68123","modified":1604966840728},{"_id":"public/tags/vi/index.html","hash":"6cfebdd5522d01d218e404d6b571dcb6f7627828","modified":1604966840728},{"_id":"public/tags/cpp/index.html","hash":"5ed0c48cf2d16dcd8d26f1e76327bbfeb00024b3","modified":1604966840728},{"_id":"public/tags/WSL/index.html","hash":"1035ff3e0332188208636f988f1729266b2f2dc2","modified":1604966840728},{"_id":"public/smart-pointer/shared_ptr.png","hash":"301818f09258860f2530a51aca0ab0289a3fdd37","modified":1604966667128},{"_id":"public/mesa/gdb.svg","hash":"db978e382575b43dbcf404fa61264635e93672f8","modified":1604966667128},{"_id":"public/mesa/glxgears.png","hash":"4435b498dd5235d936be5e3a1ad1784726648203","modified":1604966667128},{"_id":"public/mesa/osdemo.jpg","hash":"b8ba59aa45e84f32b188d6ca027b9bbe1b86c48a","modified":1604966667128},{"_id":"public/sparse-texture/SparseTextureExample.jpg","hash":"904a197dd1db3e6fbac515342dad2f969400dc4d","modified":1604966667128},{"_id":"public/mesa/OSMesaCreateContextExt.png","hash":"77769f7a206b51f772da21dc1deed36573da1b75","modified":1604966667128},{"_id":"public/mesa/glXChooseVisual.png","hash":"ea41d5081584f0b0d11112b4cc4675df8b7fdf5b","modified":1604966667128},{"_id":"public/mesa/glXCreateContext.png","hash":"e27e2794cbf443f86d2852a1e7844d98892fe15e","modified":1604966667128},{"_id":"public/mesa/PopMatrix.png","hash":"0bbbc07f08e0a518cb3cd43f855958a945257d12","modified":1604966667128},{"_id":"public/windows-insider-program/windows_update.png","hash":"890f8c06c452a1bdddadbb0cd2f2502f5b8109a8","modified":1604966667128},{"_id":"themes/even/.all-contributorsrc","hash":"5e55677518a2d881c8a27821381da925365a8efa","modified":1604966812774},{"_id":"themes/even/.eslintignore","hash":"de3f06c672357f312d670c9fd9cc58c2b1a0864c","modified":1604966812774},{"_id":"themes/even/.git","hash":"18e689a1c1b1cfb831f5a2ffda85097f773cd51c","modified":1604966812734},{"_id":"themes/even/.gitignore","hash":"32753aa9232f2d5dbf10b3fb8de8f1426f264ac1","modified":1604966812774},{"_id":"themes/even/LICENSE","hash":"187fc7598698ac70c7ab9dffaa08883fd8b91958","modified":1604966812774},{"_id":"themes/even/.eslintrc","hash":"0fcde446104e73d7159f8574f28fe661acdb384e","modified":1604966812774},{"_id":"themes/even/README.md","hash":"b743979740a196f8cab34f80ad3491d1faf0ba5a","modified":1604966812774},{"_id":"themes/even/_config.yml","hash":"7db70314f23b000f9cd6a79fffa579aabf4eef18","modified":1604966812774},{"_id":"themes/even/package.json","hash":"fbd41d067538a26bcb0386367935a5e91da48058","modified":1604966812784},{"_id":"themes/even/yarn.lock","hash":"ff5d63b50f76b4b6f36661c012ffca2af7ba9dff","modified":1604966812794},{"_id":"themes/even/languages/default.yml","hash":"42df6a0f6f21778f20779f6b0336df65a59c890d","modified":1604966812774},{"_id":"themes/even/languages/en.yml","hash":"42df6a0f6f21778f20779f6b0336df65a59c890d","modified":1604966812774},{"_id":"themes/even/languages/zh-cn.yml","hash":"f7da3fc6252df9d19abd1321b3c5a8c2ad13cca7","modified":1604966812774},{"_id":"themes/even/languages/zh-tw.yml","hash":"c275550aded8b4173f9965a627eedf1d727f3da3","modified":1604966812774},{"_id":"themes/even/layout/_layout.swig","hash":"00dc81c1d5751144a59de05db415c51954973230","modified":1604966812774},{"_id":"themes/even/layout/categories.swig","hash":"a14078a46bc45e1e02c1bc450dc894d693975707","modified":1604966812784},{"_id":"themes/even/layout/archive.swig","hash":"fde460d3c38ad132ef5effbdbaf66c48c8296c3b","modified":1604966812784},{"_id":"themes/even/layout/index.swig","hash":"4bc20e7616ace7cf12c17328cb84b8203b763b09","modified":1604966812784},{"_id":"themes/even/layout/page.swig","hash":"a6cf4e5bc3cb9a9ea6a6ed3b074cff6d69073f14","modified":1604966812784},{"_id":"themes/even/layout/post.swig","hash":"88f3f7538c75271133d00f3b1a0d0a40ec953c8d","modified":1604966812784},{"_id":"themes/even/layout/tags.swig","hash":"ce15107017d6e1663f2b0be92d7758622e17861f","modified":1604966812784},{"_id":"themes/even/source/favicon.ico","hash":"0505cec3b99707df7a681de37177b3cf7950cc5d","modified":1604966812784},{"_id":"themes/even/source/robots.txt","hash":"eed1ebad39b24e7942fcaf8f27da7487eb9f956e","modified":1604966812794},{"_id":"themes/even/.github/workflows/deploy.yml","hash":"c3451c1d908b860d071f670cde130ea4d0ba8e83","modified":1604966812774},{"_id":"themes/even/layout/_macro/archive.swig","hash":"641f02ccabc1cc59ecc73f2a40516088495e9ff9","modified":1604966812774},{"_id":"themes/even/layout/_macro/post.swig","hash":"67a086170715a6a4db21bfd1e35bc6582bbf0ce7","modified":1604966812774},{"_id":"themes/even/layout/_partial/comments.swig","hash":"78478e702f131f9b428740a8f84e94f2e9926679","modified":1604966812774},{"_id":"themes/even/layout/_partial/footer.swig","hash":"74ed829c24cff40f50f576fc86b8fa44f272c810","modified":1604966812774},{"_id":"themes/even/layout/_partial/head.swig","hash":"b18d4f4b5ce4ea3c3ba5c3d4a1300f9fc3a5b15e","modified":1604966812774},{"_id":"themes/even/layout/_partial/header.swig","hash":"2c3a0fba88605a98b56528437e1c2160942cdba4","modified":1604966812774},{"_id":"themes/even/layout/_partial/pagination.swig","hash":"caab675c3c1df76d5c047d5c4dc42ffcb79caa9a","modified":1604966812774},{"_id":"themes/even/layout/_partial/slideout.swig","hash":"ecfaa8a922eef7d0c6eb05592d390ae36d6da9e3","modified":1604966812774},{"_id":"themes/even/layout/_script/analytics.swig","hash":"b1fe6eb7e42594383dba5e5a6a9ed655158e1f25","modified":1604966812784},{"_id":"themes/even/layout/_script/counter.swig","hash":"787d956687d4846286b11c68fb2a81a0d981d4b1","modified":1604966812784},{"_id":"themes/even/layout/_script/comments.swig","hash":"24eb48c55d44336b00399e63fdf8081b827e524a","modified":1604966812784},{"_id":"themes/even/layout/_script/libs.swig","hash":"668e0939e5c22bcf5437afdd398a7fd16c0059a0","modified":1604966812784},{"_id":"themes/even/layout/_script/push.swig","hash":"2aacb350e2e4870f175ba4783c710c4c4006274c","modified":1604966812784},{"_id":"themes/even/layout/_script/theme.swig","hash":"ef8207e22d10ba11821749e1dc0041cf0104d7e3","modified":1604966812784},{"_id":"themes/even/source/css/_base.scss","hash":"ffd8c02b4e1dde0433458b0fef02f01a1fd0f1dd","modified":1604966812784},{"_id":"themes/even/source/css/_variables.scss","hash":"a32d1aa88bf6c81af01a0ad87d0cdc9beb17bfa1","modified":1604966812784},{"_id":"themes/even/source/css/style.scss","hash":"814c81baf2d6fe1acdaf5319c3fa796c260a2d3c","modified":1604966812784},{"_id":"themes/even/layout/_partial/_footer/mermaid.swig","hash":"c4b477069cbbe673ac541550e87c13e7d79ef922","modified":1604966812774},{"_id":"themes/even/layout/_partial/_footer/social.swig","hash":"45159378a4abd916367a5a10cf39eabb0d460c70","modified":1604966812774},{"_id":"themes/even/layout/_partial/_head/meta.swig","hash":"067665118c38c2f579f801ff53bab0d32b28109c","modified":1604966812774},{"_id":"themes/even/layout/_partial/_post/copyright.swig","hash":"517533bf6cb5292a55be11036ef72d699acc33ef","modified":1604966812774},{"_id":"themes/even/layout/_partial/_post/reward.swig","hash":"2a026a5252082c5cc9fbbb5aedf29770d1d56e62","modified":1604966812774},{"_id":"themes/even/layout/_partial/_post/toc.swig","hash":"3eb2de1ad24607af9497663149730292227022cf","modified":1604966812774},{"_id":"themes/even/layout/_script/_analytics/baidu-analytics.swig","hash":"707864f34f7750a438817acef927f1e4075c5cf8","modified":1604966812784},{"_id":"themes/even/layout/_script/_analytics/google-analytics.swig","hash":"5143d9e510bfd98723a009780ba23aebade21b29","modified":1604966812784},{"_id":"themes/even/layout/_script/_comments/changyan.swig","hash":"a14f06c0ab2eff5c1039cbf199328a62fdc3def8","modified":1604966812784},{"_id":"themes/even/layout/_script/_comments/disqus.swig","hash":"52009d5092377937af79ea9e391262d34df6d36f","modified":1604966812784},{"_id":"themes/even/layout/_script/_comments/gitalk.swig","hash":"869e4e4bca23ccd9be61fa671dd2b327b5b6e86c","modified":1604966812784},{"_id":"themes/even/layout/_script/_comments/livere.swig","hash":"dfc42123f637b775cf85967476cb8439d19dbe4c","modified":1604966812784},{"_id":"themes/even/layout/_script/_comments/utterances.swig","hash":"5772689ec4c0a772d0e51311535080544fcb2bdd","modified":1604966812784},{"_id":"themes/even/source/css/_common/_animation.scss","hash":"f32d2444f0ab4dcb8b811ae1bccae6073f21a988","modified":1604966812784},{"_id":"themes/even/source/css/_common/_normalize.scss","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1604966812784},{"_id":"themes/even/source/css/_common/_utils.scss","hash":"9ec5b1f6cf47260eba2729ff4931111b808644f0","modified":1604966812784},{"_id":"themes/even/source/css/_custom/_custom.scss","hash":"d0873cd8554d515282a6792fcc3f5bd4a256b7a6","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_archive.scss","hash":"c0cd7dc3462f7726428a30f5852fcf5577df5961","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_back-to-top.scss","hash":"de94a4546dad90f588e902c9641d94b31fd6625b","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_categories.scss","hash":"96f47000d25ef4e0e948f8f43fa4e2983ff0d746","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_footer.scss","hash":"76f3a72440be8aa1e93d8ddc5ea958777d1545ab","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_header.scss","hash":"4a3e92feef33bed0021f1a65a801c24ee7d5946f","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_iconfont.scss","hash":"6effdc886469ee76f3c66451ef4b04baaecd48ef","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_mathjax.scss","hash":"4005390d40cfc457e4d07dbaf78b718e01b651f4","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_mobile.scss","hash":"0d1c60bd92f8e5db01e7843934251152ec4d6d44","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_pagination.scss","hash":"b24db39534e180ebcebba2e81d91d9f1d534eea1","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_post.scss","hash":"655e8f56328a220b64d54c400990165a015fecd9","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_slideout.scss","hash":"e4820a42698f647a824575b234835b9ce4ac4797","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_tags.scss","hash":"fb4bf54b34291d5b72598a7ba4d3e370c8ad9383","modified":1604966812784},{"_id":"themes/even/source/js/src/even.js","hash":"ddf98fcec65db5f53aa97cad7fb3e7a418678763","modified":1604966812784},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.eot","hash":"fef78bd502f74fdbf0316123e176454cb3eb4e50","modified":1604966812784},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.ttf","hash":"5e25c531901d8a9e37ab45a7f4acdbe5324b51b6","modified":1604966812784},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff","hash":"95beafe485d4bdbddfecbcf3b2bc9b2d9cf5f5c5","modified":1604966812784},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff2","hash":"afd0f74128f1c21c5a542b2e100870e74da663b6","modified":1604966812784},{"_id":"themes/even/source/lib/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1604966812784},{"_id":"themes/even/source/lib/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1604966812784},{"_id":"themes/even/source/lib/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1604966812784},{"_id":"themes/even/source/lib/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1604966812784},{"_id":"themes/even/source/lib/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1604966812784},{"_id":"themes/even/source/lib/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1604966812784},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1604966812794},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1604966812794},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1604966812794},{"_id":"themes/even/source/lib/slideout/slideout.js","hash":"81ec76a63f6f4bbdfc801d822182ab8afa9068fe","modified":1604966812794},{"_id":"themes/even/source/lib/slideout/slideout.min.js","hash":"7166ed307b771398a593fc3d4f1c5d93fbbe19bb","modified":1604966812794},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.svg","hash":"a94e508f306a742637653f98c6e8827b11d3c142","modified":1604966812784},{"_id":"themes/even/source/lib/jquery/jquery.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1604966812794},{"_id":"themes/even/source/css/_partial/_footer/_copyright.scss","hash":"afbc0f90c674e5cd5fd7509eb1296d60b999d4e1","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_footer/_social.scss","hash":"bca6a1036951c2475278bfbd3a5ce51ff861e9a3","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_header/_logo.scss","hash":"109073dde15146d835bf06faa2f256d1ac658315","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_header/_menu.scss","hash":"454214ab2b5a0ca17d6872068c52bfd01ac02fdc","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_post/_code.scss","hash":"25d366dc9dc57f1cc9498cd20e46eacb7d55b4c5","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_post/_content.scss","hash":"4954fdf4b73836035c7ed977b27e1af5ce30a42a","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_post/_copyright.scss","hash":"71d949b053b0176621fdba5dc1e2e740f60b467d","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_post/_footer.scss","hash":"9f2ab0ac20b2a8bfd315febd387c399f72f43d10","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_post/_header.scss","hash":"f655fc254804e59d1426471f41127f26d06432b6","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_post/_reward.scss","hash":"66ec9faa27ed879dc9a2ca59c73ed6bfd5e61dcd","modified":1604966812784},{"_id":"themes/even/source/css/_partial/_post/_toc.scss","hash":"5806ce8d5c4e2d70e12e03ab48327bdebc68c67b","modified":1604966812784},{"_id":"themes/even/source/lib/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1604966812794},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1604966812794},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1604966812794},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1604966812794},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1604966812794},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1604966812794},{"_id":"public/favicon.ico","hash":"0505cec3b99707df7a681de37177b3cf7950cc5d","modified":1604966840728},{"_id":"public/robots.txt","hash":"eed1ebad39b24e7942fcaf8f27da7487eb9f956e","modified":1604966840728},{"_id":"public/fonts/chancery/apple-chancery-webfont.eot","hash":"fef78bd502f74fdbf0316123e176454cb3eb4e50","modified":1604966840728},{"_id":"public/fonts/chancery/apple-chancery-webfont.woff","hash":"95beafe485d4bdbddfecbcf3b2bc9b2d9cf5f5c5","modified":1604966840728},{"_id":"public/fonts/chancery/apple-chancery-webfont.ttf","hash":"5e25c531901d8a9e37ab45a7f4acdbe5324b51b6","modified":1604966840728},{"_id":"public/fonts/chancery/apple-chancery-webfont.woff2","hash":"afd0f74128f1c21c5a542b2e100870e74da663b6","modified":1604966840728},{"_id":"public/lib/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1604966840728},{"_id":"public/lib/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1604966840728},{"_id":"public/lib/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1604966840728},{"_id":"public/lib/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1604966840728},{"_id":"public/lib/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1604966840728},{"_id":"public/lib/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1604966840728},{"_id":"public/lib/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1604966840728},{"_id":"public/fonts/chancery/apple-chancery-webfont.svg","hash":"a94e508f306a742637653f98c6e8827b11d3c142","modified":1604966840728},{"_id":"public/js/src/even.js","hash":"ddf98fcec65db5f53aa97cad7fb3e7a418678763","modified":1604966840728},{"_id":"public/lib/fancybox/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1604966840728},{"_id":"public/lib/slideout/slideout.min.js","hash":"7166ed307b771398a593fc3d4f1c5d93fbbe19bb","modified":1604966840728},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1604966840728},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1604966840728},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1604966840728},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1604966840728},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1604966840728},{"_id":"public/lib/fancybox/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1604966840728},{"_id":"public/lib/slideout/slideout.js","hash":"81ec76a63f6f4bbdfc801d822182ab8afa9068fe","modified":1604966840728},{"_id":"public/lib/fancybox/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1604966840728},{"_id":"public/lib/jquery/jquery.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1604966840728},{"_id":"public/css/style.css","hash":"8ea31fbfdda771c05758589db9d0a4832523e810","modified":1604966840728}],"Category":[{"name":"Programming","_id":"ckhb7pqic000fx1tsfxqndb3o"},{"name":"CG","_id":"ckhb7pqie000mx1ts5hdh2vb8"}],"Data":[],"Page":[{"title":"about me","date":"2020-02-05T11:14:44.000Z","layout":"about","_content":"\n# About me\n\n- 图形学和编程爱好者，主要关注的方面有[GPU](https://www.gpuinsight.com/), OpenGL, Vulkan, GLSL等。\n- 感兴趣的开源项目有[Mesa](https://gitlab.freedesktop.org/lucmann/mesa), [LLVM](https://github.com/llvm/llvm-project).\n- 主要使用C++, Python.\n- 个人生活爱好有Logo Design, [Postcrossing](https://www.postcrossing.com/), 围棋等。","source":"about/index.md","raw":"---\ntitle: about me\ndate: 2020-02-05 19:14:44\nlayout: about\n---\n\n# About me\n\n- 图形学和编程爱好者，主要关注的方面有[GPU](https://www.gpuinsight.com/), OpenGL, Vulkan, GLSL等。\n- 感兴趣的开源项目有[Mesa](https://gitlab.freedesktop.org/lucmann/mesa), [LLVM](https://github.com/llvm/llvm-project).\n- 主要使用C++, Python.\n- 个人生活爱好有Logo Design, [Postcrossing](https://www.postcrossing.com/), 围棋等。","updated":"2020-07-24T06:33:12.093Z","path":"about/index.html","comments":1,"_id":"ckhb7pqhs0001x1tsdq8b0fbv","content":"<h1 id=\"About-me\"><a href=\"#About-me\" class=\"headerlink\" title=\"About me\"></a>About me</h1><ul>\n<li>图形学和编程爱好者，主要关注的方面有<a href=\"https://www.gpuinsight.com/\" target=\"_blank\" rel=\"noopener\">GPU</a>, OpenGL, Vulkan, GLSL等。</li>\n<li>感兴趣的开源项目有<a href=\"https://gitlab.freedesktop.org/lucmann/mesa\" target=\"_blank\" rel=\"noopener\">Mesa</a>, <a href=\"https://github.com/llvm/llvm-project\" target=\"_blank\" rel=\"noopener\">LLVM</a>.</li>\n<li>主要使用C++, Python.</li>\n<li>个人生活爱好有Logo Design, <a href=\"https://www.postcrossing.com/\" target=\"_blank\" rel=\"noopener\">Postcrossing</a>, 围棋等。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"About-me\"><a href=\"#About-me\" class=\"headerlink\" title=\"About me\"></a>About me</h1><ul>\n<li>图形学和编程爱好者，主要关注的方面有<a href=\"https://www.gpuinsight.com/\" target=\"_blank\" rel=\"noopener\">GPU</a>, OpenGL, Vulkan, GLSL等。</li>\n<li>感兴趣的开源项目有<a href=\"https://gitlab.freedesktop.org/lucmann/mesa\" target=\"_blank\" rel=\"noopener\">Mesa</a>, <a href=\"https://github.com/llvm/llvm-project\" target=\"_blank\" rel=\"noopener\">LLVM</a>.</li>\n<li>主要使用C++, Python.</li>\n<li>个人生活爱好有Logo Design, <a href=\"https://www.postcrossing.com/\" target=\"_blank\" rel=\"noopener\">Postcrossing</a>, 围棋等。</li>\n</ul>\n"},{"title":"categories","date":"2020-07-23T10:11:05.000Z","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-07-23 18:11:05\nlayout: categories\n---\n","updated":"2020-07-23T10:12:17.784Z","path":"categories/index.html","comments":1,"_id":"ckhb7pqhw0003x1tsetb3f6gd","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2020-06-25T00:19:07.000Z","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-06-25 08:19:07\nlayout: tags\n---\n","updated":"2020-07-23T09:50:16.018Z","path":"tags/index.html","comments":1,"_id":"ckhb7pqiv001tx1ts146tarnx","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Build Xserver from Source","date":"2020-10-19T09:47:39.000Z","_content":"\n# Motivation\nGiven that a difficulty to add a custom X11 device driver or module or extension for Xserver, I try to find out how an Xserver is built and its dependent drivers and modules and extensions are orgnized together by building it from [source](https://gitlab.freedesktop.org/xorg/xserver.git).\n\n# Build\nFortunately the xserver has already an alternative build system support for [Meson](https://mesonbuild.com/) more than autotools before. Build configuration options are listed in the file `meson_options.txt` which makes easy configure the build. On the other hand, Meson does not permit in-source builds, a separate build directory makes it clearer for checking the output.\n\nA few simple commands can get done with building:\n```shell\nmeson build\nninja -C build\n```\n\nIt is easy to find what are built with `find build -type f -perm /a+x -regex '.*[^0-9h]$'`\n<pre>\n./build/meson-private/sanitycheckc.exe\n./build/test/tests\n./build/test/simple-xinit\n./build/hw/xnest/Xnest\n./build/hw/vfb/Xvfb\n./build/hw/xfree86/gtf\n./build/hw/xfree86/vgahw/libvgahw.so\n./build/hw/xfree86/libxorgserver.so\n./build/hw/xfree86/fbdevhw/libfbdevhw.so\n./build/hw/xfree86/drivers/modesetting/modesetting_drv.so\n./build/hw/xfree86/dixmods/libglx.so\n./build/hw/xfree86/dixmods/libwfb.so\n./build/hw/xfree86/dixmods/libshadow.so\n./build/hw/xfree86/shadowfb/libshadowfb.so\n./build/hw/xfree86/cvt\n./build/hw/xfree86/exa/libexa.so\n./build/hw/xfree86/Xorg\n./build/hw/xfree86/int10/libint10.so\n./build/hw/xfree86/loader/xorg_symbol_test\n</pre>\n\nwhere `./build/hw/xfree86/Xorg` is newly built Xserver.\n\n# Replacement\nNow that we have an Xorg out there, we can try it. I have an *xrdp* installed on my WSL as its desktop environment. We can replace `xorgxrdp` with this new one for testing. To do it, we need to modify xrdp's init configuration file `/etc/xrdp/sesman.ini`\n\n<pre>\n[Xorg]\n; Specify the path of non-suid Xorg executable. It might differ depending\n; on your distribution and version. The typical path is shown as follows:\n;\n; Fedora 26 or later    :  param=/usr/libexec/Xorg\n; Debian 9 or later     :  param=/usr/lib/xorg/Xorg\n; Ubuntu 16.04 or later :  param=/usr/lib/xorg/Xorg\n; Arch Linux            :  param=/usr/lib/xorg-server/Xorg\n; CentOS 7              :  param=/usr/bin/Xorg or param=Xorg\n;\n;param=/usr/lib/xorg/Xorg\n;\nparam=/home/luc/github/xserver/build/hw/xfree86/Xorg\n</pre>\n\nBut it failed on restart xrdp.service. We check the log and `/etc/X11/xrdp/xorg.conf`. It turns out some drivers related xrdp do not exist. It is xrdp that customizes Xorg.\n\n```shell\ngrep '(EE) Failed to' ~/.xorgxrdp.25.log\n```\n<pre>\n[ 22862.100] (EE) Failed to load module \"glx\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"int10\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"vbe\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"glamoregl\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"xorgxrdp\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"xrdpdev\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"xrdpmouse\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"xrdpkeyb\" (module does not exist, 0)\n</pre>\n\n```shell\ngrep -E '(Driver | Load)' /etc/X11/xrdp/xorg.conf\n```\n<pre>\n    Load \"dbe\"\n    Load \"ddc\"\n    Load \"extmod\"\n    Load \"glx\"\n    Load \"int10\"\n    Load \"record\"\n    Load \"vbe\"\n    Load \"glamoregl\"\n    Load \"xorgxrdp\"\n    Load \"fb\"\n    Driver \"xrdpkeyb\"\n    Driver \"xrdpmouse\"\n    Driver \"xrdpdev\"\n</pre>\n\n# Conclusion\nXserver/Xorg is built in a flexible and easy way. We can implement our own device-dependent functionality and add it to Xserver as its another driver or module.\n","source":"_posts/build-xserver.md","raw":"---\ntitle: Build Xserver from Source\ndate: 2020-10-19 17:47:39\ntags: [X]\n---\n\n# Motivation\nGiven that a difficulty to add a custom X11 device driver or module or extension for Xserver, I try to find out how an Xserver is built and its dependent drivers and modules and extensions are orgnized together by building it from [source](https://gitlab.freedesktop.org/xorg/xserver.git).\n\n# Build\nFortunately the xserver has already an alternative build system support for [Meson](https://mesonbuild.com/) more than autotools before. Build configuration options are listed in the file `meson_options.txt` which makes easy configure the build. On the other hand, Meson does not permit in-source builds, a separate build directory makes it clearer for checking the output.\n\nA few simple commands can get done with building:\n```shell\nmeson build\nninja -C build\n```\n\nIt is easy to find what are built with `find build -type f -perm /a+x -regex '.*[^0-9h]$'`\n<pre>\n./build/meson-private/sanitycheckc.exe\n./build/test/tests\n./build/test/simple-xinit\n./build/hw/xnest/Xnest\n./build/hw/vfb/Xvfb\n./build/hw/xfree86/gtf\n./build/hw/xfree86/vgahw/libvgahw.so\n./build/hw/xfree86/libxorgserver.so\n./build/hw/xfree86/fbdevhw/libfbdevhw.so\n./build/hw/xfree86/drivers/modesetting/modesetting_drv.so\n./build/hw/xfree86/dixmods/libglx.so\n./build/hw/xfree86/dixmods/libwfb.so\n./build/hw/xfree86/dixmods/libshadow.so\n./build/hw/xfree86/shadowfb/libshadowfb.so\n./build/hw/xfree86/cvt\n./build/hw/xfree86/exa/libexa.so\n./build/hw/xfree86/Xorg\n./build/hw/xfree86/int10/libint10.so\n./build/hw/xfree86/loader/xorg_symbol_test\n</pre>\n\nwhere `./build/hw/xfree86/Xorg` is newly built Xserver.\n\n# Replacement\nNow that we have an Xorg out there, we can try it. I have an *xrdp* installed on my WSL as its desktop environment. We can replace `xorgxrdp` with this new one for testing. To do it, we need to modify xrdp's init configuration file `/etc/xrdp/sesman.ini`\n\n<pre>\n[Xorg]\n; Specify the path of non-suid Xorg executable. It might differ depending\n; on your distribution and version. The typical path is shown as follows:\n;\n; Fedora 26 or later    :  param=/usr/libexec/Xorg\n; Debian 9 or later     :  param=/usr/lib/xorg/Xorg\n; Ubuntu 16.04 or later :  param=/usr/lib/xorg/Xorg\n; Arch Linux            :  param=/usr/lib/xorg-server/Xorg\n; CentOS 7              :  param=/usr/bin/Xorg or param=Xorg\n;\n;param=/usr/lib/xorg/Xorg\n;\nparam=/home/luc/github/xserver/build/hw/xfree86/Xorg\n</pre>\n\nBut it failed on restart xrdp.service. We check the log and `/etc/X11/xrdp/xorg.conf`. It turns out some drivers related xrdp do not exist. It is xrdp that customizes Xorg.\n\n```shell\ngrep '(EE) Failed to' ~/.xorgxrdp.25.log\n```\n<pre>\n[ 22862.100] (EE) Failed to load module \"glx\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"int10\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"vbe\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"glamoregl\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"xorgxrdp\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"xrdpdev\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"xrdpmouse\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"xrdpkeyb\" (module does not exist, 0)\n</pre>\n\n```shell\ngrep -E '(Driver | Load)' /etc/X11/xrdp/xorg.conf\n```\n<pre>\n    Load \"dbe\"\n    Load \"ddc\"\n    Load \"extmod\"\n    Load \"glx\"\n    Load \"int10\"\n    Load \"record\"\n    Load \"vbe\"\n    Load \"glamoregl\"\n    Load \"xorgxrdp\"\n    Load \"fb\"\n    Driver \"xrdpkeyb\"\n    Driver \"xrdpmouse\"\n    Driver \"xrdpdev\"\n</pre>\n\n# Conclusion\nXserver/Xorg is built in a flexible and easy way. We can implement our own device-dependent functionality and add it to Xserver as its another driver or module.\n","slug":"build-xserver","published":1,"updated":"2020-10-19T12:24:14.662Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqhn0000x1ts6l8g4g72","content":"<h1 id=\"Motivation\"><a href=\"#Motivation\" class=\"headerlink\" title=\"Motivation\"></a>Motivation</h1><p>Given that a difficulty to add a custom X11 device driver or module or extension for Xserver, I try to find out how an Xserver is built and its dependent drivers and modules and extensions are orgnized together by building it from <a href=\"https://gitlab.freedesktop.org/xorg/xserver.git\" target=\"_blank\" rel=\"noopener\">source</a>.</p>\n<h1 id=\"Build\"><a href=\"#Build\" class=\"headerlink\" title=\"Build\"></a>Build</h1><p>Fortunately the xserver has already an alternative build system support for <a href=\"https://mesonbuild.com/\" target=\"_blank\" rel=\"noopener\">Meson</a> more than autotools before. Build configuration options are listed in the file <code>meson_options.txt</code> which makes easy configure the build. On the other hand, Meson does not permit in-source builds, a separate build directory makes it clearer for checking the output.</p>\n<p>A few simple commands can get done with building:<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">meson build</span><br><span class=\"line\">ninja -C build</span><br></pre></td></tr></table></figure></p>\n<p>It is easy to find what are built with <code>find build -type f -perm /a+x -regex &#39;.*[^0-9h]$&#39;</code></p>\n<pre>\n./build/meson-private/sanitycheckc.exe\n./build/test/tests\n./build/test/simple-xinit\n./build/hw/xnest/Xnest\n./build/hw/vfb/Xvfb\n./build/hw/xfree86/gtf\n./build/hw/xfree86/vgahw/libvgahw.so\n./build/hw/xfree86/libxorgserver.so\n./build/hw/xfree86/fbdevhw/libfbdevhw.so\n./build/hw/xfree86/drivers/modesetting/modesetting_drv.so\n./build/hw/xfree86/dixmods/libglx.so\n./build/hw/xfree86/dixmods/libwfb.so\n./build/hw/xfree86/dixmods/libshadow.so\n./build/hw/xfree86/shadowfb/libshadowfb.so\n./build/hw/xfree86/cvt\n./build/hw/xfree86/exa/libexa.so\n./build/hw/xfree86/Xorg\n./build/hw/xfree86/int10/libint10.so\n./build/hw/xfree86/loader/xorg_symbol_test\n</pre>\n\n<p>where <code>./build/hw/xfree86/Xorg</code> is newly built Xserver.</p>\n<h1 id=\"Replacement\"><a href=\"#Replacement\" class=\"headerlink\" title=\"Replacement\"></a>Replacement</h1><p>Now that we have an Xorg out there, we can try it. I have an <em>xrdp</em> installed on my WSL as its desktop environment. We can replace <code>xorgxrdp</code> with this new one for testing. To do it, we need to modify xrdp’s init configuration file <code>/etc/xrdp/sesman.ini</code></p>\n<pre>\n[Xorg]\n; Specify the path of non-suid Xorg executable. It might differ depending\n; on your distribution and version. The typical path is shown as follows:\n;\n; Fedora 26 or later    :  param=/usr/libexec/Xorg\n; Debian 9 or later     :  param=/usr/lib/xorg/Xorg\n; Ubuntu 16.04 or later :  param=/usr/lib/xorg/Xorg\n; Arch Linux            :  param=/usr/lib/xorg-server/Xorg\n; CentOS 7              :  param=/usr/bin/Xorg or param=Xorg\n;\n;param=/usr/lib/xorg/Xorg\n;\nparam=/home/luc/github/xserver/build/hw/xfree86/Xorg\n</pre>\n\n<p>But it failed on restart xrdp.service. We check the log and <code>/etc/X11/xrdp/xorg.conf</code>. It turns out some drivers related xrdp do not exist. It is xrdp that customizes Xorg.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep '(EE) Failed to' ~/.xorgxrdp.25.log</span><br></pre></td></tr></table></figure>\n<pre>\n[ 22862.100] (EE) Failed to load module \"glx\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"int10\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"vbe\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"glamoregl\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"xorgxrdp\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"xrdpdev\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"xrdpmouse\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"xrdpkeyb\" (module does not exist, 0)\n</pre>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -E '(Driver | Load)' /etc/X11/xrdp/xorg.conf</span><br></pre></td></tr></table></figure>\n<pre>\n    Load \"dbe\"\n    Load \"ddc\"\n    Load \"extmod\"\n    Load \"glx\"\n    Load \"int10\"\n    Load \"record\"\n    Load \"vbe\"\n    Load \"glamoregl\"\n    Load \"xorgxrdp\"\n    Load \"fb\"\n    Driver \"xrdpkeyb\"\n    Driver \"xrdpmouse\"\n    Driver \"xrdpdev\"\n</pre>\n\n<h1 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h1><p>Xserver/Xorg is built in a flexible and easy way. We can implement our own device-dependent functionality and add it to Xserver as its another driver or module.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Motivation\"><a href=\"#Motivation\" class=\"headerlink\" title=\"Motivation\"></a>Motivation</h1><p>Given that a difficulty to add a custom X11 device driver or module or extension for Xserver, I try to find out how an Xserver is built and its dependent drivers and modules and extensions are orgnized together by building it from <a href=\"https://gitlab.freedesktop.org/xorg/xserver.git\" target=\"_blank\" rel=\"noopener\">source</a>.</p>\n<h1 id=\"Build\"><a href=\"#Build\" class=\"headerlink\" title=\"Build\"></a>Build</h1><p>Fortunately the xserver has already an alternative build system support for <a href=\"https://mesonbuild.com/\" target=\"_blank\" rel=\"noopener\">Meson</a> more than autotools before. Build configuration options are listed in the file <code>meson_options.txt</code> which makes easy configure the build. On the other hand, Meson does not permit in-source builds, a separate build directory makes it clearer for checking the output.</p>\n<p>A few simple commands can get done with building:<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">meson build</span><br><span class=\"line\">ninja -C build</span><br></pre></td></tr></table></figure></p>\n<p>It is easy to find what are built with <code>find build -type f -perm /a+x -regex &#39;.*[^0-9h]$&#39;</code></p>\n<pre>\n./build/meson-private/sanitycheckc.exe\n./build/test/tests\n./build/test/simple-xinit\n./build/hw/xnest/Xnest\n./build/hw/vfb/Xvfb\n./build/hw/xfree86/gtf\n./build/hw/xfree86/vgahw/libvgahw.so\n./build/hw/xfree86/libxorgserver.so\n./build/hw/xfree86/fbdevhw/libfbdevhw.so\n./build/hw/xfree86/drivers/modesetting/modesetting_drv.so\n./build/hw/xfree86/dixmods/libglx.so\n./build/hw/xfree86/dixmods/libwfb.so\n./build/hw/xfree86/dixmods/libshadow.so\n./build/hw/xfree86/shadowfb/libshadowfb.so\n./build/hw/xfree86/cvt\n./build/hw/xfree86/exa/libexa.so\n./build/hw/xfree86/Xorg\n./build/hw/xfree86/int10/libint10.so\n./build/hw/xfree86/loader/xorg_symbol_test\n</pre>\n\n<p>where <code>./build/hw/xfree86/Xorg</code> is newly built Xserver.</p>\n<h1 id=\"Replacement\"><a href=\"#Replacement\" class=\"headerlink\" title=\"Replacement\"></a>Replacement</h1><p>Now that we have an Xorg out there, we can try it. I have an <em>xrdp</em> installed on my WSL as its desktop environment. We can replace <code>xorgxrdp</code> with this new one for testing. To do it, we need to modify xrdp’s init configuration file <code>/etc/xrdp/sesman.ini</code></p>\n<pre>\n[Xorg]\n; Specify the path of non-suid Xorg executable. It might differ depending\n; on your distribution and version. The typical path is shown as follows:\n;\n; Fedora 26 or later    :  param=/usr/libexec/Xorg\n; Debian 9 or later     :  param=/usr/lib/xorg/Xorg\n; Ubuntu 16.04 or later :  param=/usr/lib/xorg/Xorg\n; Arch Linux            :  param=/usr/lib/xorg-server/Xorg\n; CentOS 7              :  param=/usr/bin/Xorg or param=Xorg\n;\n;param=/usr/lib/xorg/Xorg\n;\nparam=/home/luc/github/xserver/build/hw/xfree86/Xorg\n</pre>\n\n<p>But it failed on restart xrdp.service. We check the log and <code>/etc/X11/xrdp/xorg.conf</code>. It turns out some drivers related xrdp do not exist. It is xrdp that customizes Xorg.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep '(EE) Failed to' ~/.xorgxrdp.25.log</span><br></pre></td></tr></table></figure>\n<pre>\n[ 22862.100] (EE) Failed to load module \"glx\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"int10\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"vbe\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"glamoregl\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"xorgxrdp\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"xrdpdev\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"xrdpmouse\" (module does not exist, 0)\n[ 22862.100] (EE) Failed to load module \"xrdpkeyb\" (module does not exist, 0)\n</pre>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -E '(Driver | Load)' /etc/X11/xrdp/xorg.conf</span><br></pre></td></tr></table></figure>\n<pre>\n    Load \"dbe\"\n    Load \"ddc\"\n    Load \"extmod\"\n    Load \"glx\"\n    Load \"int10\"\n    Load \"record\"\n    Load \"vbe\"\n    Load \"glamoregl\"\n    Load \"xorgxrdp\"\n    Load \"fb\"\n    Driver \"xrdpkeyb\"\n    Driver \"xrdpmouse\"\n    Driver \"xrdpdev\"\n</pre>\n\n<h1 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h1><p>Xserver/Xorg is built in a flexible and easy way. We can implement our own device-dependent functionality and add it to Xserver as its another driver or module.</p>\n"},{"title":"Debugging X11 with tcpdump","date":"2020-02-24T01:18:03.000Z","_content":"\nX11 is designed as client-server mode. The communication between the X client and server complies with TCP protocol. Recently I have a Windows X server VcXsrv installed on my Windows 10 and I debug an OpenGL demo glxgears on the WSL2 with tcpdump.\n\n## Environment\nWSL2 is equipped with its own networking interface like a virtual machine. \n\n``` bash\n$ ifconfig\neth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 172.28.233.193  netmask 255.255.240.0  broadcast 172.28.239.255\n        inet6 fe80::215:5dff:fe27:9562  prefixlen 64  scopeid 0x20<link>\n        ether 00:15:5d:27:95:62  txqueuelen 1000  (Ethernet)\n        RX packets 221579  bytes 15160108 (15.1 MB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 306691  bytes 15714800233 (15.7 GB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10<host>\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 392  bytes 43340 (43.3 KB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 392  bytes 43340 (43.3 KB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\n```\n\n``` bash\n$ /mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -C \"ipconfig\"\n\nWindows IP Configuration\n\n\nEthernet adapter vEthernet (WSL):\n\n   Connection-specific DNS Suffix  . : \n   Link-local IPv6 Address . . . . . : fe80::412b:ad3:5548:67ba%38\n   IPv4 Address. . . . . . . . . . . : 172.28.224.1\n   Subnet Mask . . . . . . . . . . . : 255.255.240.0\n   Default Gateway . . . . . . . . . : \n\nWireless LAN adapter ±¾µØÁ¬½Ó* 1:\n\n   Media State . . . . . . . . . . . : Media disconnected\n   Connection-specific DNS Suffix  . : \n\nWireless LAN adapter ±¾µØÁ¬½Ó* 10:\n\n   Media State . . . . . . . . . . . : Media disconnected\n   Connection-specific DNS Suffix  . : \n\nWireless LAN adapter WLAN:\n\n   Connection-specific DNS Suffix  . : DHCP HOST\n   Link-local IPv6 Address . . . . . : fe80::954b:e66f:4065:20af%20\n   IPv4 Address. . . . . . . . . . . : 192.168.2.100\n   Subnet Mask . . . . . . . . . . . : 255.255.255.0\n   Default Gateway . . . . . . . . . : 192.168.2.1\n```\n\nAfter starting up the X server VcXsrv, you need to export the environmnet variable **`DISPLAY`** on the WSL. In case of the vEthernet configuration changed after rebooting you'd better do it like this:\n\n``` bash\nexport DISPLAY=$(grep 'nameserver' /etc/resolv.conf | awk '{print $2}'):0\n```\n\nNOTE: The Firewall between the host and WSL2 must be disabled or your X client can not connect VcXsrv.\n\n## Debugging\n\nI trace the demo glxgears using gdb and tcpdump at the same time.\n\n- gdb\n\n``` shell\ngdb -q -tui glxgears\n```\n- tcpdump\n\n``` shell\nsudo tcpdump -vvX not icmp and not arp and not udp and portrange 37900-37999 -w x110224.pcap\n```\n- vv: verboser than -v\n- X: show the packet's content\n- not icmp: filter out icmp packets\n- not arp: filter out arp packets\n- not udp: filter out udp packets\n- portrange 37900-37999: listening on the ports from 37900 to 37999\n- w x110224.pcap: save the packet captures into the file\n\n``` shell\ntcpdump -X -r x110224.pcap\n```\n\n```\nreading from file /home/luc/github/x110224.pcap, link-type EN10MB (Ethernet)\n09:11:56.659816 IP 172.28.233.193.37950 > 172.28.224.1.x11: Flags [P.], seq 2796598646:2796598658, ack 1053772981, win 259, length 12\n\t0x0000:  4500 0034 1d84 4000 4006 fb43 ac1c e9c1  E..4..@.@..C....\n\t0x0010:  ac1c e001 943e 1770 a6b0 b576 3ecf 4cb5  .....>.p...v>.L.\n\t0x0020:  5018 0103 2223 0000 6200 0300 0400 0000  P...\"#..b.......\n\t0x0030:  4452 4932                                DRI2\n09:11:56.660218 IP 172.28.224.1.x11 > 172.28.233.193.37950: Flags [P.], seq 1:33, ack 12, win 8211, length 32\n\t0x0000:  4500 0048 d9d7 4000 8006 fedb ac1c e001  E..H..@.........\n\t0x0010:  ac1c e9c1 1770 943e 3ecf 4cb5 a6b0 b582  .....p.>>.L.....\n\t0x0020:  5018 2013 cf36 0000 0100 0a00 0000 0000  P....6..........\n\t0x0030:  0000 0000 0000 0000 0000 0000 0000 0000  ................\n\t0x0040:  0000 0000 0000 0000                      ........\n09:11:56.660232 IP 172.28.233.193.37950 > 172.28.224.1.x11: Flags [.], ack 33, win 259, length 0\n\t0x0000:  4500 0028 1d85 4000 4006 fb4e ac1c e9c1  E..(..@.@..N....\n\t0x0010:  ac1c e001 943e 1770 a6b0 b582 3ecf 4cd5  .....>.p....>.L.\n\t0x0020:  5010 0103 2217 0000                      P...\"...\n\n```\n\nwhat codes sends and receives these packets? The first two twenty-byted segments are IP header (20 bytes without option) and TCP header (20 bytes without option) separately in these packets.\n\nThe source code snippet:\n``` c\nBool\nXQueryExtension(\n    register Display *dpy,\n    _Xconst char *name,\n    int *major_opcode,  /* RETURN */\n    int *first_event,   /* RETURN */\n    int *first_error)\t/* RETURN */\n{\n    xQueryExtensionReply rep;\n    register xQueryExtensionReq *req;\n\n    LockDisplay(dpy);\n    GetReq(QueryExtension, req);\n    req->nbytes = name ? strlen(name) : 0;\n    req->length += (req->nbytes+(unsigned)3)>>2;\n    _XSend(dpy, name, (long)req->nbytes);\n    (void) _XReply (dpy, (xReply *)&rep, 0, xTrue);\n    *major_opcode = rep.major_opcode;\n    *first_event = rep.first_event;\n    *first_error = rep.first_error;\n    UnlockDisplay(dpy);\n    SyncHandle();\n    return (rep.present);\n}\n```\n\nThe gdb log:\n```\nStarting program: /mnt/c/Users/lulu/Documents/github/demos/src/xdemos/glxgears \n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n\nBreakpoint 1, XextAddDisplay (extinfo=0x7ffff7e77380 <_dri2Info_data>, dpy=0x55555555d2a0, \n    ext_name=0x7ffff7e76780 <dri2ExtensionName> \"DRI2\", hooks=0x7ffff7e767a0 <dri2ExtensionHooks>, nevents=0, data=0x0)\n    at extutil.c:103\nXInitExtension (dpy=dpy@entry=0x55555555d2a0, name=name@entry=0x7ffff7e76780 <dri2ExtensionName> \"DRI2\")\n    at InitExt.c:44\nXQueryExtension (dpy=dpy@entry=0x55555555d2a0, name=name@entry=0x7ffff7e76780 <dri2ExtensionName> \"DRI2\", \n    major_opcode=major_opcode@entry=0x7fffffffd984, first_event=first_event@entry=0x7fffffffd988, \n    first_error=first_error@entry=0x7fffffffd98c) at QuExt.c:39\n$2 = {\n  reqType = 0x62, \n  pad = 0x0, \n  length = 0x3, \n  nbytes = 0x4, \n  pad1 = 0x0, \n  pad2 = 0x0\n}\n$3 = {\n  type = 0x1, \n  pad1 = 0x0, \n  sequenceNumber = 0xa, \n  length = 0x0, \n  present = 0x0, \n  major_opcode = 0x0, \n  first_event = 0x0, \n  first_error = 0x0, \n  pad3 = 0x0, \n  pad4 = 0x0, \n  pad5 = 0x0, \n  pad6 = 0x0, \n  pad7 = 0x0\n}\n```\n\n`$2` is **Request** packet content to VcXsrv, `$3` is **Reply** packet content from VcXsrv. Even that we can notice the three-way handshake of TCP from the zero-lengthed packet in x110224.pcap. \n","source":"_posts/debug-x11-with-tcpdump.md","raw":"---\ntitle: Debugging X11 with tcpdump\ndate: 2020-02-24 09:18:03\ntags: [X]\n---\n\nX11 is designed as client-server mode. The communication between the X client and server complies with TCP protocol. Recently I have a Windows X server VcXsrv installed on my Windows 10 and I debug an OpenGL demo glxgears on the WSL2 with tcpdump.\n\n## Environment\nWSL2 is equipped with its own networking interface like a virtual machine. \n\n``` bash\n$ ifconfig\neth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 172.28.233.193  netmask 255.255.240.0  broadcast 172.28.239.255\n        inet6 fe80::215:5dff:fe27:9562  prefixlen 64  scopeid 0x20<link>\n        ether 00:15:5d:27:95:62  txqueuelen 1000  (Ethernet)\n        RX packets 221579  bytes 15160108 (15.1 MB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 306691  bytes 15714800233 (15.7 GB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10<host>\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 392  bytes 43340 (43.3 KB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 392  bytes 43340 (43.3 KB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\n```\n\n``` bash\n$ /mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -C \"ipconfig\"\n\nWindows IP Configuration\n\n\nEthernet adapter vEthernet (WSL):\n\n   Connection-specific DNS Suffix  . : \n   Link-local IPv6 Address . . . . . : fe80::412b:ad3:5548:67ba%38\n   IPv4 Address. . . . . . . . . . . : 172.28.224.1\n   Subnet Mask . . . . . . . . . . . : 255.255.240.0\n   Default Gateway . . . . . . . . . : \n\nWireless LAN adapter ±¾µØÁ¬½Ó* 1:\n\n   Media State . . . . . . . . . . . : Media disconnected\n   Connection-specific DNS Suffix  . : \n\nWireless LAN adapter ±¾µØÁ¬½Ó* 10:\n\n   Media State . . . . . . . . . . . : Media disconnected\n   Connection-specific DNS Suffix  . : \n\nWireless LAN adapter WLAN:\n\n   Connection-specific DNS Suffix  . : DHCP HOST\n   Link-local IPv6 Address . . . . . : fe80::954b:e66f:4065:20af%20\n   IPv4 Address. . . . . . . . . . . : 192.168.2.100\n   Subnet Mask . . . . . . . . . . . : 255.255.255.0\n   Default Gateway . . . . . . . . . : 192.168.2.1\n```\n\nAfter starting up the X server VcXsrv, you need to export the environmnet variable **`DISPLAY`** on the WSL. In case of the vEthernet configuration changed after rebooting you'd better do it like this:\n\n``` bash\nexport DISPLAY=$(grep 'nameserver' /etc/resolv.conf | awk '{print $2}'):0\n```\n\nNOTE: The Firewall between the host and WSL2 must be disabled or your X client can not connect VcXsrv.\n\n## Debugging\n\nI trace the demo glxgears using gdb and tcpdump at the same time.\n\n- gdb\n\n``` shell\ngdb -q -tui glxgears\n```\n- tcpdump\n\n``` shell\nsudo tcpdump -vvX not icmp and not arp and not udp and portrange 37900-37999 -w x110224.pcap\n```\n- vv: verboser than -v\n- X: show the packet's content\n- not icmp: filter out icmp packets\n- not arp: filter out arp packets\n- not udp: filter out udp packets\n- portrange 37900-37999: listening on the ports from 37900 to 37999\n- w x110224.pcap: save the packet captures into the file\n\n``` shell\ntcpdump -X -r x110224.pcap\n```\n\n```\nreading from file /home/luc/github/x110224.pcap, link-type EN10MB (Ethernet)\n09:11:56.659816 IP 172.28.233.193.37950 > 172.28.224.1.x11: Flags [P.], seq 2796598646:2796598658, ack 1053772981, win 259, length 12\n\t0x0000:  4500 0034 1d84 4000 4006 fb43 ac1c e9c1  E..4..@.@..C....\n\t0x0010:  ac1c e001 943e 1770 a6b0 b576 3ecf 4cb5  .....>.p...v>.L.\n\t0x0020:  5018 0103 2223 0000 6200 0300 0400 0000  P...\"#..b.......\n\t0x0030:  4452 4932                                DRI2\n09:11:56.660218 IP 172.28.224.1.x11 > 172.28.233.193.37950: Flags [P.], seq 1:33, ack 12, win 8211, length 32\n\t0x0000:  4500 0048 d9d7 4000 8006 fedb ac1c e001  E..H..@.........\n\t0x0010:  ac1c e9c1 1770 943e 3ecf 4cb5 a6b0 b582  .....p.>>.L.....\n\t0x0020:  5018 2013 cf36 0000 0100 0a00 0000 0000  P....6..........\n\t0x0030:  0000 0000 0000 0000 0000 0000 0000 0000  ................\n\t0x0040:  0000 0000 0000 0000                      ........\n09:11:56.660232 IP 172.28.233.193.37950 > 172.28.224.1.x11: Flags [.], ack 33, win 259, length 0\n\t0x0000:  4500 0028 1d85 4000 4006 fb4e ac1c e9c1  E..(..@.@..N....\n\t0x0010:  ac1c e001 943e 1770 a6b0 b582 3ecf 4cd5  .....>.p....>.L.\n\t0x0020:  5010 0103 2217 0000                      P...\"...\n\n```\n\nwhat codes sends and receives these packets? The first two twenty-byted segments are IP header (20 bytes without option) and TCP header (20 bytes without option) separately in these packets.\n\nThe source code snippet:\n``` c\nBool\nXQueryExtension(\n    register Display *dpy,\n    _Xconst char *name,\n    int *major_opcode,  /* RETURN */\n    int *first_event,   /* RETURN */\n    int *first_error)\t/* RETURN */\n{\n    xQueryExtensionReply rep;\n    register xQueryExtensionReq *req;\n\n    LockDisplay(dpy);\n    GetReq(QueryExtension, req);\n    req->nbytes = name ? strlen(name) : 0;\n    req->length += (req->nbytes+(unsigned)3)>>2;\n    _XSend(dpy, name, (long)req->nbytes);\n    (void) _XReply (dpy, (xReply *)&rep, 0, xTrue);\n    *major_opcode = rep.major_opcode;\n    *first_event = rep.first_event;\n    *first_error = rep.first_error;\n    UnlockDisplay(dpy);\n    SyncHandle();\n    return (rep.present);\n}\n```\n\nThe gdb log:\n```\nStarting program: /mnt/c/Users/lulu/Documents/github/demos/src/xdemos/glxgears \n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n\nBreakpoint 1, XextAddDisplay (extinfo=0x7ffff7e77380 <_dri2Info_data>, dpy=0x55555555d2a0, \n    ext_name=0x7ffff7e76780 <dri2ExtensionName> \"DRI2\", hooks=0x7ffff7e767a0 <dri2ExtensionHooks>, nevents=0, data=0x0)\n    at extutil.c:103\nXInitExtension (dpy=dpy@entry=0x55555555d2a0, name=name@entry=0x7ffff7e76780 <dri2ExtensionName> \"DRI2\")\n    at InitExt.c:44\nXQueryExtension (dpy=dpy@entry=0x55555555d2a0, name=name@entry=0x7ffff7e76780 <dri2ExtensionName> \"DRI2\", \n    major_opcode=major_opcode@entry=0x7fffffffd984, first_event=first_event@entry=0x7fffffffd988, \n    first_error=first_error@entry=0x7fffffffd98c) at QuExt.c:39\n$2 = {\n  reqType = 0x62, \n  pad = 0x0, \n  length = 0x3, \n  nbytes = 0x4, \n  pad1 = 0x0, \n  pad2 = 0x0\n}\n$3 = {\n  type = 0x1, \n  pad1 = 0x0, \n  sequenceNumber = 0xa, \n  length = 0x0, \n  present = 0x0, \n  major_opcode = 0x0, \n  first_event = 0x0, \n  first_error = 0x0, \n  pad3 = 0x0, \n  pad4 = 0x0, \n  pad5 = 0x0, \n  pad6 = 0x0, \n  pad7 = 0x0\n}\n```\n\n`$2` is **Request** packet content to VcXsrv, `$3` is **Reply** packet content from VcXsrv. Even that we can notice the three-way handshake of TCP from the zero-lengthed packet in x110224.pcap. \n","slug":"debug-x11-with-tcpdump","published":1,"updated":"2020-10-09T01:57:03.588Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqhs0002x1tsgb3l03lx","content":"<p>X11 is designed as client-server mode. The communication between the X client and server complies with TCP protocol. Recently I have a Windows X server VcXsrv installed on my Windows 10 and I debug an OpenGL demo glxgears on the WSL2 with tcpdump.</p>\n<h2 id=\"Environment\"><a href=\"#Environment\" class=\"headerlink\" title=\"Environment\"></a>Environment</h2><p>WSL2 is equipped with its own networking interface like a virtual machine. </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ifconfig</span><br><span class=\"line\">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class=\"line\">        inet 172.28.233.193  netmask 255.255.240.0  broadcast 172.28.239.255</span><br><span class=\"line\">        inet6 fe80::215:5dff:fe27:9562  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class=\"line\">        ether 00:15:5d:27:95:62  txqueuelen 1000  (Ethernet)</span><br><span class=\"line\">        RX packets 221579  bytes 15160108 (15.1 MB)</span><br><span class=\"line\">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class=\"line\">        TX packets 306691  bytes 15714800233 (15.7 GB)</span><br><span class=\"line\">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class=\"line\"></span><br><span class=\"line\">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class=\"line\">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class=\"line\">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class=\"line\">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class=\"line\">        RX packets 392  bytes 43340 (43.3 KB)</span><br><span class=\"line\">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class=\"line\">        TX packets 392  bytes 43340 (43.3 KB)</span><br><span class=\"line\">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ /mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -C <span class=\"string\">\"ipconfig\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">Windows IP Configuration</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Ethernet adapter vEthernet (WSL):</span><br><span class=\"line\"></span><br><span class=\"line\">   Connection-specific DNS Suffix  . : </span><br><span class=\"line\">   Link-local IPv6 Address . . . . . : fe80::412b:ad3:5548:67ba%38</span><br><span class=\"line\">   IPv4 Address. . . . . . . . . . . : 172.28.224.1</span><br><span class=\"line\">   Subnet Mask . . . . . . . . . . . : 255.255.240.0</span><br><span class=\"line\">   Default Gateway . . . . . . . . . : </span><br><span class=\"line\"></span><br><span class=\"line\">Wireless LAN adapter ±¾µØÁ¬½Ó* 1:</span><br><span class=\"line\"></span><br><span class=\"line\">   Media State . . . . . . . . . . . : Media disconnected</span><br><span class=\"line\">   Connection-specific DNS Suffix  . : </span><br><span class=\"line\"></span><br><span class=\"line\">Wireless LAN adapter ±¾µØÁ¬½Ó* 10:</span><br><span class=\"line\"></span><br><span class=\"line\">   Media State . . . . . . . . . . . : Media disconnected</span><br><span class=\"line\">   Connection-specific DNS Suffix  . : </span><br><span class=\"line\"></span><br><span class=\"line\">Wireless LAN adapter WLAN:</span><br><span class=\"line\"></span><br><span class=\"line\">   Connection-specific DNS Suffix  . : DHCP HOST</span><br><span class=\"line\">   Link-local IPv6 Address . . . . . : fe80::954b:e66f:4065:20af%20</span><br><span class=\"line\">   IPv4 Address. . . . . . . . . . . : 192.168.2.100</span><br><span class=\"line\">   Subnet Mask . . . . . . . . . . . : 255.255.255.0</span><br><span class=\"line\">   Default Gateway . . . . . . . . . : 192.168.2.1</span><br></pre></td></tr></table></figure>\n<p>After starting up the X server VcXsrv, you need to export the environmnet variable <strong><code>DISPLAY</code></strong> on the WSL. In case of the vEthernet configuration changed after rebooting you’d better do it like this:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> DISPLAY=$(grep <span class=\"string\">'nameserver'</span> /etc/resolv.conf | awk <span class=\"string\">'&#123;print $2&#125;'</span>):0</span><br></pre></td></tr></table></figure>\n<p>NOTE: The Firewall between the host and WSL2 must be disabled or your X client can not connect VcXsrv.</p>\n<h2 id=\"Debugging\"><a href=\"#Debugging\" class=\"headerlink\" title=\"Debugging\"></a>Debugging</h2><p>I trace the demo glxgears using gdb and tcpdump at the same time.</p>\n<ul>\n<li>gdb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gdb -q -tui glxgears</span><br></pre></td></tr></table></figure>\n<ul>\n<li>tcpdump</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tcpdump -vvX not icmp and not arp and not udp and portrange 37900-37999 -w x110224.pcap</span><br></pre></td></tr></table></figure>\n<ul>\n<li>vv: verboser than -v</li>\n<li>X: show the packet’s content</li>\n<li>not icmp: filter out icmp packets</li>\n<li>not arp: filter out arp packets</li>\n<li>not udp: filter out udp packets</li>\n<li>portrange 37900-37999: listening on the ports from 37900 to 37999</li>\n<li>w x110224.pcap: save the packet captures into the file</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -X -r x110224.pcap</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reading from file /home/luc/github/x110224.pcap, link-type EN10MB (Ethernet)</span><br><span class=\"line\">09:11:56.659816 IP 172.28.233.193.37950 &gt; 172.28.224.1.x11: Flags [P.], seq 2796598646:2796598658, ack 1053772981, win 259, length 12</span><br><span class=\"line\">\t0x0000:  4500 0034 1d84 4000 4006 fb43 ac1c e9c1  E..4..@.@..C....</span><br><span class=\"line\">\t0x0010:  ac1c e001 943e 1770 a6b0 b576 3ecf 4cb5  .....&gt;.p...v&gt;.L.</span><br><span class=\"line\">\t0x0020:  5018 0103 2223 0000 6200 0300 0400 0000  P...&quot;#..b.......</span><br><span class=\"line\">\t0x0030:  4452 4932                                DRI2</span><br><span class=\"line\">09:11:56.660218 IP 172.28.224.1.x11 &gt; 172.28.233.193.37950: Flags [P.], seq 1:33, ack 12, win 8211, length 32</span><br><span class=\"line\">\t0x0000:  4500 0048 d9d7 4000 8006 fedb ac1c e001  E..H..@.........</span><br><span class=\"line\">\t0x0010:  ac1c e9c1 1770 943e 3ecf 4cb5 a6b0 b582  .....p.&gt;&gt;.L.....</span><br><span class=\"line\">\t0x0020:  5018 2013 cf36 0000 0100 0a00 0000 0000  P....6..........</span><br><span class=\"line\">\t0x0030:  0000 0000 0000 0000 0000 0000 0000 0000  ................</span><br><span class=\"line\">\t0x0040:  0000 0000 0000 0000                      ........</span><br><span class=\"line\">09:11:56.660232 IP 172.28.233.193.37950 &gt; 172.28.224.1.x11: Flags [.], ack 33, win 259, length 0</span><br><span class=\"line\">\t0x0000:  4500 0028 1d85 4000 4006 fb4e ac1c e9c1  E..(..@.@..N....</span><br><span class=\"line\">\t0x0010:  ac1c e001 943e 1770 a6b0 b582 3ecf 4cd5  .....&gt;.p....&gt;.L.</span><br><span class=\"line\">\t0x0020:  5010 0103 2217 0000                      P...&quot;...</span><br></pre></td></tr></table></figure>\n<p>what codes sends and receives these packets? The first two twenty-byted segments are IP header (20 bytes without option) and TCP header (20 bytes without option) separately in these packets.</p>\n<p>The source code snippet:<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Bool</span><br><span class=\"line\">XQueryExtension(</span><br><span class=\"line\">    <span class=\"keyword\">register</span> Display *dpy,</span><br><span class=\"line\">    _Xconst <span class=\"keyword\">char</span> *name,</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *major_opcode,  <span class=\"comment\">/* RETURN */</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> *first_event,   <span class=\"comment\">/* RETURN */</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> *first_error)\t<span class=\"comment\">/* RETURN */</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    xQueryExtensionReply rep;</span><br><span class=\"line\">    <span class=\"keyword\">register</span> xQueryExtensionReq *req;</span><br><span class=\"line\"></span><br><span class=\"line\">    LockDisplay(dpy);</span><br><span class=\"line\">    GetReq(QueryExtension, req);</span><br><span class=\"line\">    req-&gt;nbytes = name ? <span class=\"built_in\">strlen</span>(name) : <span class=\"number\">0</span>;</span><br><span class=\"line\">    req-&gt;length += (req-&gt;nbytes+(<span class=\"keyword\">unsigned</span>)<span class=\"number\">3</span>)&gt;&gt;<span class=\"number\">2</span>;</span><br><span class=\"line\">    _XSend(dpy, name, (<span class=\"keyword\">long</span>)req-&gt;nbytes);</span><br><span class=\"line\">    (<span class=\"keyword\">void</span>) _XReply (dpy, (xReply *)&amp;rep, <span class=\"number\">0</span>, xTrue);</span><br><span class=\"line\">    *major_opcode = rep.major_opcode;</span><br><span class=\"line\">    *first_event = rep.first_event;</span><br><span class=\"line\">    *first_error = rep.first_error;</span><br><span class=\"line\">    UnlockDisplay(dpy);</span><br><span class=\"line\">    SyncHandle();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (rep.present);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>The gdb log:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Starting program: /mnt/c/Users/lulu/Documents/github/demos/src/xdemos/glxgears </span><br><span class=\"line\">[Thread debugging using libthread_db enabled]</span><br><span class=\"line\">Using host libthread_db library &quot;/lib/x86_64-linux-gnu/libthread_db.so.1&quot;.</span><br><span class=\"line\"></span><br><span class=\"line\">Breakpoint 1, XextAddDisplay (extinfo=0x7ffff7e77380 &lt;_dri2Info_data&gt;, dpy=0x55555555d2a0, </span><br><span class=\"line\">    ext_name=0x7ffff7e76780 &lt;dri2ExtensionName&gt; &quot;DRI2&quot;, hooks=0x7ffff7e767a0 &lt;dri2ExtensionHooks&gt;, nevents=0, data=0x0)</span><br><span class=\"line\">    at extutil.c:103</span><br><span class=\"line\">XInitExtension (dpy=dpy@entry=0x55555555d2a0, name=name@entry=0x7ffff7e76780 &lt;dri2ExtensionName&gt; &quot;DRI2&quot;)</span><br><span class=\"line\">    at InitExt.c:44</span><br><span class=\"line\">XQueryExtension (dpy=dpy@entry=0x55555555d2a0, name=name@entry=0x7ffff7e76780 &lt;dri2ExtensionName&gt; &quot;DRI2&quot;, </span><br><span class=\"line\">    major_opcode=major_opcode@entry=0x7fffffffd984, first_event=first_event@entry=0x7fffffffd988, </span><br><span class=\"line\">    first_error=first_error@entry=0x7fffffffd98c) at QuExt.c:39</span><br><span class=\"line\">$2 = &#123;</span><br><span class=\"line\">  reqType = 0x62, </span><br><span class=\"line\">  pad = 0x0, </span><br><span class=\"line\">  length = 0x3, </span><br><span class=\"line\">  nbytes = 0x4, </span><br><span class=\"line\">  pad1 = 0x0, </span><br><span class=\"line\">  pad2 = 0x0</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$3 = &#123;</span><br><span class=\"line\">  type = 0x1, </span><br><span class=\"line\">  pad1 = 0x0, </span><br><span class=\"line\">  sequenceNumber = 0xa, </span><br><span class=\"line\">  length = 0x0, </span><br><span class=\"line\">  present = 0x0, </span><br><span class=\"line\">  major_opcode = 0x0, </span><br><span class=\"line\">  first_event = 0x0, </span><br><span class=\"line\">  first_error = 0x0, </span><br><span class=\"line\">  pad3 = 0x0, </span><br><span class=\"line\">  pad4 = 0x0, </span><br><span class=\"line\">  pad5 = 0x0, </span><br><span class=\"line\">  pad6 = 0x0, </span><br><span class=\"line\">  pad7 = 0x0</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>$2</code> is <strong>Request</strong> packet content to VcXsrv, <code>$3</code> is <strong>Reply</strong> packet content from VcXsrv. Even that we can notice the three-way handshake of TCP from the zero-lengthed packet in x110224.pcap. </p>\n","site":{"data":{}},"excerpt":"","more":"<p>X11 is designed as client-server mode. The communication between the X client and server complies with TCP protocol. Recently I have a Windows X server VcXsrv installed on my Windows 10 and I debug an OpenGL demo glxgears on the WSL2 with tcpdump.</p>\n<h2 id=\"Environment\"><a href=\"#Environment\" class=\"headerlink\" title=\"Environment\"></a>Environment</h2><p>WSL2 is equipped with its own networking interface like a virtual machine. </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ifconfig</span><br><span class=\"line\">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class=\"line\">        inet 172.28.233.193  netmask 255.255.240.0  broadcast 172.28.239.255</span><br><span class=\"line\">        inet6 fe80::215:5dff:fe27:9562  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class=\"line\">        ether 00:15:5d:27:95:62  txqueuelen 1000  (Ethernet)</span><br><span class=\"line\">        RX packets 221579  bytes 15160108 (15.1 MB)</span><br><span class=\"line\">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class=\"line\">        TX packets 306691  bytes 15714800233 (15.7 GB)</span><br><span class=\"line\">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class=\"line\"></span><br><span class=\"line\">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class=\"line\">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class=\"line\">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class=\"line\">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class=\"line\">        RX packets 392  bytes 43340 (43.3 KB)</span><br><span class=\"line\">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class=\"line\">        TX packets 392  bytes 43340 (43.3 KB)</span><br><span class=\"line\">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ /mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -C <span class=\"string\">\"ipconfig\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">Windows IP Configuration</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Ethernet adapter vEthernet (WSL):</span><br><span class=\"line\"></span><br><span class=\"line\">   Connection-specific DNS Suffix  . : </span><br><span class=\"line\">   Link-local IPv6 Address . . . . . : fe80::412b:ad3:5548:67ba%38</span><br><span class=\"line\">   IPv4 Address. . . . . . . . . . . : 172.28.224.1</span><br><span class=\"line\">   Subnet Mask . . . . . . . . . . . : 255.255.240.0</span><br><span class=\"line\">   Default Gateway . . . . . . . . . : </span><br><span class=\"line\"></span><br><span class=\"line\">Wireless LAN adapter ±¾µØÁ¬½Ó* 1:</span><br><span class=\"line\"></span><br><span class=\"line\">   Media State . . . . . . . . . . . : Media disconnected</span><br><span class=\"line\">   Connection-specific DNS Suffix  . : </span><br><span class=\"line\"></span><br><span class=\"line\">Wireless LAN adapter ±¾µØÁ¬½Ó* 10:</span><br><span class=\"line\"></span><br><span class=\"line\">   Media State . . . . . . . . . . . : Media disconnected</span><br><span class=\"line\">   Connection-specific DNS Suffix  . : </span><br><span class=\"line\"></span><br><span class=\"line\">Wireless LAN adapter WLAN:</span><br><span class=\"line\"></span><br><span class=\"line\">   Connection-specific DNS Suffix  . : DHCP HOST</span><br><span class=\"line\">   Link-local IPv6 Address . . . . . : fe80::954b:e66f:4065:20af%20</span><br><span class=\"line\">   IPv4 Address. . . . . . . . . . . : 192.168.2.100</span><br><span class=\"line\">   Subnet Mask . . . . . . . . . . . : 255.255.255.0</span><br><span class=\"line\">   Default Gateway . . . . . . . . . : 192.168.2.1</span><br></pre></td></tr></table></figure>\n<p>After starting up the X server VcXsrv, you need to export the environmnet variable <strong><code>DISPLAY</code></strong> on the WSL. In case of the vEthernet configuration changed after rebooting you’d better do it like this:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> DISPLAY=$(grep <span class=\"string\">'nameserver'</span> /etc/resolv.conf | awk <span class=\"string\">'&#123;print $2&#125;'</span>):0</span><br></pre></td></tr></table></figure>\n<p>NOTE: The Firewall between the host and WSL2 must be disabled or your X client can not connect VcXsrv.</p>\n<h2 id=\"Debugging\"><a href=\"#Debugging\" class=\"headerlink\" title=\"Debugging\"></a>Debugging</h2><p>I trace the demo glxgears using gdb and tcpdump at the same time.</p>\n<ul>\n<li>gdb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gdb -q -tui glxgears</span><br></pre></td></tr></table></figure>\n<ul>\n<li>tcpdump</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tcpdump -vvX not icmp and not arp and not udp and portrange 37900-37999 -w x110224.pcap</span><br></pre></td></tr></table></figure>\n<ul>\n<li>vv: verboser than -v</li>\n<li>X: show the packet’s content</li>\n<li>not icmp: filter out icmp packets</li>\n<li>not arp: filter out arp packets</li>\n<li>not udp: filter out udp packets</li>\n<li>portrange 37900-37999: listening on the ports from 37900 to 37999</li>\n<li>w x110224.pcap: save the packet captures into the file</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -X -r x110224.pcap</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reading from file /home/luc/github/x110224.pcap, link-type EN10MB (Ethernet)</span><br><span class=\"line\">09:11:56.659816 IP 172.28.233.193.37950 &gt; 172.28.224.1.x11: Flags [P.], seq 2796598646:2796598658, ack 1053772981, win 259, length 12</span><br><span class=\"line\">\t0x0000:  4500 0034 1d84 4000 4006 fb43 ac1c e9c1  E..4..@.@..C....</span><br><span class=\"line\">\t0x0010:  ac1c e001 943e 1770 a6b0 b576 3ecf 4cb5  .....&gt;.p...v&gt;.L.</span><br><span class=\"line\">\t0x0020:  5018 0103 2223 0000 6200 0300 0400 0000  P...&quot;#..b.......</span><br><span class=\"line\">\t0x0030:  4452 4932                                DRI2</span><br><span class=\"line\">09:11:56.660218 IP 172.28.224.1.x11 &gt; 172.28.233.193.37950: Flags [P.], seq 1:33, ack 12, win 8211, length 32</span><br><span class=\"line\">\t0x0000:  4500 0048 d9d7 4000 8006 fedb ac1c e001  E..H..@.........</span><br><span class=\"line\">\t0x0010:  ac1c e9c1 1770 943e 3ecf 4cb5 a6b0 b582  .....p.&gt;&gt;.L.....</span><br><span class=\"line\">\t0x0020:  5018 2013 cf36 0000 0100 0a00 0000 0000  P....6..........</span><br><span class=\"line\">\t0x0030:  0000 0000 0000 0000 0000 0000 0000 0000  ................</span><br><span class=\"line\">\t0x0040:  0000 0000 0000 0000                      ........</span><br><span class=\"line\">09:11:56.660232 IP 172.28.233.193.37950 &gt; 172.28.224.1.x11: Flags [.], ack 33, win 259, length 0</span><br><span class=\"line\">\t0x0000:  4500 0028 1d85 4000 4006 fb4e ac1c e9c1  E..(..@.@..N....</span><br><span class=\"line\">\t0x0010:  ac1c e001 943e 1770 a6b0 b582 3ecf 4cd5  .....&gt;.p....&gt;.L.</span><br><span class=\"line\">\t0x0020:  5010 0103 2217 0000                      P...&quot;...</span><br></pre></td></tr></table></figure>\n<p>what codes sends and receives these packets? The first two twenty-byted segments are IP header (20 bytes without option) and TCP header (20 bytes without option) separately in these packets.</p>\n<p>The source code snippet:<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Bool</span><br><span class=\"line\">XQueryExtension(</span><br><span class=\"line\">    <span class=\"keyword\">register</span> Display *dpy,</span><br><span class=\"line\">    _Xconst <span class=\"keyword\">char</span> *name,</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *major_opcode,  <span class=\"comment\">/* RETURN */</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> *first_event,   <span class=\"comment\">/* RETURN */</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> *first_error)\t<span class=\"comment\">/* RETURN */</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    xQueryExtensionReply rep;</span><br><span class=\"line\">    <span class=\"keyword\">register</span> xQueryExtensionReq *req;</span><br><span class=\"line\"></span><br><span class=\"line\">    LockDisplay(dpy);</span><br><span class=\"line\">    GetReq(QueryExtension, req);</span><br><span class=\"line\">    req-&gt;nbytes = name ? <span class=\"built_in\">strlen</span>(name) : <span class=\"number\">0</span>;</span><br><span class=\"line\">    req-&gt;length += (req-&gt;nbytes+(<span class=\"keyword\">unsigned</span>)<span class=\"number\">3</span>)&gt;&gt;<span class=\"number\">2</span>;</span><br><span class=\"line\">    _XSend(dpy, name, (<span class=\"keyword\">long</span>)req-&gt;nbytes);</span><br><span class=\"line\">    (<span class=\"keyword\">void</span>) _XReply (dpy, (xReply *)&amp;rep, <span class=\"number\">0</span>, xTrue);</span><br><span class=\"line\">    *major_opcode = rep.major_opcode;</span><br><span class=\"line\">    *first_event = rep.first_event;</span><br><span class=\"line\">    *first_error = rep.first_error;</span><br><span class=\"line\">    UnlockDisplay(dpy);</span><br><span class=\"line\">    SyncHandle();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (rep.present);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>The gdb log:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Starting program: /mnt/c/Users/lulu/Documents/github/demos/src/xdemos/glxgears </span><br><span class=\"line\">[Thread debugging using libthread_db enabled]</span><br><span class=\"line\">Using host libthread_db library &quot;/lib/x86_64-linux-gnu/libthread_db.so.1&quot;.</span><br><span class=\"line\"></span><br><span class=\"line\">Breakpoint 1, XextAddDisplay (extinfo=0x7ffff7e77380 &lt;_dri2Info_data&gt;, dpy=0x55555555d2a0, </span><br><span class=\"line\">    ext_name=0x7ffff7e76780 &lt;dri2ExtensionName&gt; &quot;DRI2&quot;, hooks=0x7ffff7e767a0 &lt;dri2ExtensionHooks&gt;, nevents=0, data=0x0)</span><br><span class=\"line\">    at extutil.c:103</span><br><span class=\"line\">XInitExtension (dpy=dpy@entry=0x55555555d2a0, name=name@entry=0x7ffff7e76780 &lt;dri2ExtensionName&gt; &quot;DRI2&quot;)</span><br><span class=\"line\">    at InitExt.c:44</span><br><span class=\"line\">XQueryExtension (dpy=dpy@entry=0x55555555d2a0, name=name@entry=0x7ffff7e76780 &lt;dri2ExtensionName&gt; &quot;DRI2&quot;, </span><br><span class=\"line\">    major_opcode=major_opcode@entry=0x7fffffffd984, first_event=first_event@entry=0x7fffffffd988, </span><br><span class=\"line\">    first_error=first_error@entry=0x7fffffffd98c) at QuExt.c:39</span><br><span class=\"line\">$2 = &#123;</span><br><span class=\"line\">  reqType = 0x62, </span><br><span class=\"line\">  pad = 0x0, </span><br><span class=\"line\">  length = 0x3, </span><br><span class=\"line\">  nbytes = 0x4, </span><br><span class=\"line\">  pad1 = 0x0, </span><br><span class=\"line\">  pad2 = 0x0</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$3 = &#123;</span><br><span class=\"line\">  type = 0x1, </span><br><span class=\"line\">  pad1 = 0x0, </span><br><span class=\"line\">  sequenceNumber = 0xa, </span><br><span class=\"line\">  length = 0x0, </span><br><span class=\"line\">  present = 0x0, </span><br><span class=\"line\">  major_opcode = 0x0, </span><br><span class=\"line\">  first_event = 0x0, </span><br><span class=\"line\">  first_error = 0x0, </span><br><span class=\"line\">  pad3 = 0x0, </span><br><span class=\"line\">  pad4 = 0x0, </span><br><span class=\"line\">  pad5 = 0x0, </span><br><span class=\"line\">  pad6 = 0x0, </span><br><span class=\"line\">  pad7 = 0x0</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>$2</code> is <strong>Request</strong> packet content to VcXsrv, <code>$3</code> is <strong>Reply</strong> packet content from VcXsrv. Even that we can notice the three-way handshake of TCP from the zero-lengthed packet in x110224.pcap. </p>\n"},{"title":"Draw Commands","date":"2020-09-15T08:44:37.000Z","_content":"\n# Category\nOpenGL中的Draw Commands是一组生成GPU渲染Command Stream的API，我们可以将它们简单分为4类:\n- Basic Draw\n- Indexed Draw\n- Instanced Draw\n- Indirect Draw\n\n<!--more-->\n\nBasic Draw是最基本的Draw命令，其它3类都是从它衍生来的，为了某种绘制便利或顶点复用对Basic Draw API进行扩展，从而得到相应的索引绘制、实例绘制、间接绘制。\n\n## Basic Draw\n```c\nvoid glDrawArrays(GLenum mode,\n                  GLint first,\n                  GLsizei count);\n```\n\n`glDrawArrays`是OpenGL中最基本的绘制命令，它的第一个参数可接受的图元类型有:\n- GL_POINTS\n- GL_LINE_STRIP\n- GL_LINE_LOOP\n- GL_LINES\n- GL_LINE_STRIP_ADJACENCY\n- GL_LINES_ADJACENCY\n- GL_TRIANGLE_STRIP\n- GL_TRIANGLE_FAN\n- GL_TRIANGLES\n- GL_TRIANGLE_STRIP_ADJACENCY\n- GL_TRIANGLES_ADJACENCY\n- GL_PATCHES\n\n例如顶点数组如下\n```c\n    vertices\n   ----------\n0 | (-1,  1) |\n1 | (-1, -1) |\n2 | ( 1, -1) |\n3 | ( 1,  1) |\n   ----------\n```\n用3个顶点绘制一个三角形，调用命令如下\n```c\nglDrawArrays(GL_TRIANGLES, 0, 3);\n```\n\n## Indexed Draw\n```c\nvoid glDrawElements(GLenum mode,\n                    GLsizei count,\n                    GLenum type,\n                    const void* indices);\n\n\nvoid glDrawElementsBaseVertex(GLenum mode,\n                              GLsizei count,\n                              GLenum type,\n                              void* indices\n                              GLint basevertex);\n```\n\n`glDrawElements`不是直接用顶点数组去绘制，而是用顶点数组的索引去绘制，例如还是用3个顶点绘制一个三角形\n```c\n    vertices\n   ----------\n0 | (-1,  1) |\n1 | (-1, -1) |\n2 | ( 1, -1) |\n3 | ( 1,  1) |\n   ----------\n```\n\n这次除了顶点数组外，我们还要上传一个顶点索引数组\n```c\n  indices\n   -----\n0 |  0  |\n1 |  1  |\n2 |  2  |\n   -----\n```\n调用命令如下\n```c\nglDrawElements(GL_TRIANGLES, 3, GL_UNSIGNED_BYTE, &indices);\n```\n当然上面这个只有3个顶点的例子体现不出来`glDrawElements`的复用顶点的好处，但是在三角形很多且这些三角形的顶点有很多重复的情形下就不同了，它的优势就体现出来了:\n- 虽然我们额外增加了一个索引数组indices去存储所绘制顶点的索引，但相比一个顶点最多4个float类型的数据量来说，用一个unsigned byte来表示一个顶点还是划算的。\n- 在顶点坐标一样，只需改变顶点顺序的图元绘制中，将大大减少数据量。\n\n`glDrawElementsBaseVertex`的行为和`glDrawElements`一样，除了在所取到的索引数组相应元素值上加basevertex. 考虑如下情况:\n\n```c\n    vertices                indices\n   ----------                -----\n0 | (-1,  1) |            0 |  0  |\n1 | (-1, -1) |            1 |  1  |\n2 | ( 1, -1) |            2 |  2  |\n3 | ( 1,  1) |            3 |  3  |\n   ----------             4 |  0  |\n                          5 |  2  |\n                             -----\n```\n\n这种情况下，我们一般会调用\n```c\nglDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_BYTE, &indices);\n```\n\n但是如果所索引的顶点不在顶点数组的开始，而是从第100个顶点开始\n```c\n      vertices                indices2\n     ----------                -----\n        ....                0 | 100 |\n100 | (-1,  1) |            1 | 101 |\n101 | (-1, -1) |            2 | 102 |\n102 | ( 1, -1) |            3 | 103 |\n103 | ( 1,  1) |            4 | 100 |\n        ....                5 | 102 |\n     ----------                -----\n```\n\n这种情况下原来的indices不能用了，只能再创建并绑定一个新的VBO `indices2`, 而创建绑定VBO是内存操作开销很大，`glDrawElementsBaseVertex`就是解决这个问题的。我们只需要在原来的索引值上加一个offset\n```c\nglDrawElementsBaseVertex(GL_TRIANGLES, 6, GL_UNSIGNED_BYTE, &indices, 100);\n```\n\n## Instanced Draw\n```c\nvoid glDrawArraysInstanced(GLenum mode,\n                           GLint first,\n                           GLsizei count,\n                           GLsizei instancecount);\n\nvoid glDrawArraysInstancedBaseInstance(GLenum mode,\n                                       GLint first,\n                                       GLsizei count,\n                                       GLsizei instancecount,\n                                       GLuint baseinstance);\n\nvoid glDrawElementsInstanced(GLenum mode,\n                             GLsizei count,\n                             GLenum type,\n                             const void* indices,\n                             GLsizei instancecount);\n\nvoid glDrawElementsInstancedBaseInstance(GLenum mode,\n                                         GLsizei count,\n                                         GLenum type,\n                                         const void* indices,\n                                         GLsizei instancecount,\n                                         GLuint baseinstance);\n\nvoid glDrawElementsInstancedBaseVertex(GLenum mode,\n                                       GLsizei count,\n                                       GLenum type,\n                                       void* indices,\n                                       GLsizei instancecount,\n                                       GLint basevertex);\n```\n## Indirect Draw\n","source":"_posts/draw-command.md","raw":"---\ntitle: Draw Commands\ndate: 2020-09-15 16:44:37\ntags: [OpenGL]\n---\n\n# Category\nOpenGL中的Draw Commands是一组生成GPU渲染Command Stream的API，我们可以将它们简单分为4类:\n- Basic Draw\n- Indexed Draw\n- Instanced Draw\n- Indirect Draw\n\n<!--more-->\n\nBasic Draw是最基本的Draw命令，其它3类都是从它衍生来的，为了某种绘制便利或顶点复用对Basic Draw API进行扩展，从而得到相应的索引绘制、实例绘制、间接绘制。\n\n## Basic Draw\n```c\nvoid glDrawArrays(GLenum mode,\n                  GLint first,\n                  GLsizei count);\n```\n\n`glDrawArrays`是OpenGL中最基本的绘制命令，它的第一个参数可接受的图元类型有:\n- GL_POINTS\n- GL_LINE_STRIP\n- GL_LINE_LOOP\n- GL_LINES\n- GL_LINE_STRIP_ADJACENCY\n- GL_LINES_ADJACENCY\n- GL_TRIANGLE_STRIP\n- GL_TRIANGLE_FAN\n- GL_TRIANGLES\n- GL_TRIANGLE_STRIP_ADJACENCY\n- GL_TRIANGLES_ADJACENCY\n- GL_PATCHES\n\n例如顶点数组如下\n```c\n    vertices\n   ----------\n0 | (-1,  1) |\n1 | (-1, -1) |\n2 | ( 1, -1) |\n3 | ( 1,  1) |\n   ----------\n```\n用3个顶点绘制一个三角形，调用命令如下\n```c\nglDrawArrays(GL_TRIANGLES, 0, 3);\n```\n\n## Indexed Draw\n```c\nvoid glDrawElements(GLenum mode,\n                    GLsizei count,\n                    GLenum type,\n                    const void* indices);\n\n\nvoid glDrawElementsBaseVertex(GLenum mode,\n                              GLsizei count,\n                              GLenum type,\n                              void* indices\n                              GLint basevertex);\n```\n\n`glDrawElements`不是直接用顶点数组去绘制，而是用顶点数组的索引去绘制，例如还是用3个顶点绘制一个三角形\n```c\n    vertices\n   ----------\n0 | (-1,  1) |\n1 | (-1, -1) |\n2 | ( 1, -1) |\n3 | ( 1,  1) |\n   ----------\n```\n\n这次除了顶点数组外，我们还要上传一个顶点索引数组\n```c\n  indices\n   -----\n0 |  0  |\n1 |  1  |\n2 |  2  |\n   -----\n```\n调用命令如下\n```c\nglDrawElements(GL_TRIANGLES, 3, GL_UNSIGNED_BYTE, &indices);\n```\n当然上面这个只有3个顶点的例子体现不出来`glDrawElements`的复用顶点的好处，但是在三角形很多且这些三角形的顶点有很多重复的情形下就不同了，它的优势就体现出来了:\n- 虽然我们额外增加了一个索引数组indices去存储所绘制顶点的索引，但相比一个顶点最多4个float类型的数据量来说，用一个unsigned byte来表示一个顶点还是划算的。\n- 在顶点坐标一样，只需改变顶点顺序的图元绘制中，将大大减少数据量。\n\n`glDrawElementsBaseVertex`的行为和`glDrawElements`一样，除了在所取到的索引数组相应元素值上加basevertex. 考虑如下情况:\n\n```c\n    vertices                indices\n   ----------                -----\n0 | (-1,  1) |            0 |  0  |\n1 | (-1, -1) |            1 |  1  |\n2 | ( 1, -1) |            2 |  2  |\n3 | ( 1,  1) |            3 |  3  |\n   ----------             4 |  0  |\n                          5 |  2  |\n                             -----\n```\n\n这种情况下，我们一般会调用\n```c\nglDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_BYTE, &indices);\n```\n\n但是如果所索引的顶点不在顶点数组的开始，而是从第100个顶点开始\n```c\n      vertices                indices2\n     ----------                -----\n        ....                0 | 100 |\n100 | (-1,  1) |            1 | 101 |\n101 | (-1, -1) |            2 | 102 |\n102 | ( 1, -1) |            3 | 103 |\n103 | ( 1,  1) |            4 | 100 |\n        ....                5 | 102 |\n     ----------                -----\n```\n\n这种情况下原来的indices不能用了，只能再创建并绑定一个新的VBO `indices2`, 而创建绑定VBO是内存操作开销很大，`glDrawElementsBaseVertex`就是解决这个问题的。我们只需要在原来的索引值上加一个offset\n```c\nglDrawElementsBaseVertex(GL_TRIANGLES, 6, GL_UNSIGNED_BYTE, &indices, 100);\n```\n\n## Instanced Draw\n```c\nvoid glDrawArraysInstanced(GLenum mode,\n                           GLint first,\n                           GLsizei count,\n                           GLsizei instancecount);\n\nvoid glDrawArraysInstancedBaseInstance(GLenum mode,\n                                       GLint first,\n                                       GLsizei count,\n                                       GLsizei instancecount,\n                                       GLuint baseinstance);\n\nvoid glDrawElementsInstanced(GLenum mode,\n                             GLsizei count,\n                             GLenum type,\n                             const void* indices,\n                             GLsizei instancecount);\n\nvoid glDrawElementsInstancedBaseInstance(GLenum mode,\n                                         GLsizei count,\n                                         GLenum type,\n                                         const void* indices,\n                                         GLsizei instancecount,\n                                         GLuint baseinstance);\n\nvoid glDrawElementsInstancedBaseVertex(GLenum mode,\n                                       GLsizei count,\n                                       GLenum type,\n                                       void* indices,\n                                       GLsizei instancecount,\n                                       GLint basevertex);\n```\n## Indirect Draw\n","slug":"draw-command","published":1,"updated":"2020-09-17T03:36:55.173Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqhy0005x1ts3n4x5o5k","content":"<h1 id=\"Category\"><a href=\"#Category\" class=\"headerlink\" title=\"Category\"></a>Category</h1><p>OpenGL中的Draw Commands是一组生成GPU渲染Command Stream的API，我们可以将它们简单分为4类:</p>\n<ul>\n<li>Basic Draw</li>\n<li>Indexed Draw</li>\n<li>Instanced Draw</li>\n<li>Indirect Draw</li>\n</ul>\n<a id=\"more\"></a>\n<p>Basic Draw是最基本的Draw命令，其它3类都是从它衍生来的，为了某种绘制便利或顶点复用对Basic Draw API进行扩展，从而得到相应的索引绘制、实例绘制、间接绘制。</p>\n<h2 id=\"Basic-Draw\"><a href=\"#Basic-Draw\" class=\"headerlink\" title=\"Basic Draw\"></a>Basic Draw</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDrawArrays</span><span class=\"params\">(GLenum mode,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                  GLint first,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                  GLsizei count)</span></span>;</span><br></pre></td></tr></table></figure>\n<p><code>glDrawArrays</code>是OpenGL中最基本的绘制命令，它的第一个参数可接受的图元类型有:</p>\n<ul>\n<li>GL_POINTS</li>\n<li>GL_LINE_STRIP</li>\n<li>GL_LINE_LOOP</li>\n<li>GL_LINES</li>\n<li>GL_LINE_STRIP_ADJACENCY</li>\n<li>GL_LINES_ADJACENCY</li>\n<li>GL_TRIANGLE_STRIP</li>\n<li>GL_TRIANGLE_FAN</li>\n<li>GL_TRIANGLES</li>\n<li>GL_TRIANGLE_STRIP_ADJACENCY</li>\n<li>GL_TRIANGLES_ADJACENCY</li>\n<li>GL_PATCHES</li>\n</ul>\n<p>例如顶点数组如下<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    vertices</span><br><span class=\"line\">   ----------</span><br><span class=\"line\"><span class=\"number\">0</span> | (<span class=\"number\">-1</span>,  <span class=\"number\">1</span>) |</span><br><span class=\"line\"><span class=\"number\">1</span> | (<span class=\"number\">-1</span>, <span class=\"number\">-1</span>) |</span><br><span class=\"line\"><span class=\"number\">2</span> | ( <span class=\"number\">1</span>, <span class=\"number\">-1</span>) |</span><br><span class=\"line\"><span class=\"number\">3</span> | ( <span class=\"number\">1</span>,  <span class=\"number\">1</span>) |</span><br><span class=\"line\">   ----------</span><br></pre></td></tr></table></figure><br>用3个顶点绘制一个三角形，调用命令如下<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glDrawArrays(GL_TRIANGLES, <span class=\"number\">0</span>, <span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Indexed-Draw\"><a href=\"#Indexed-Draw\" class=\"headerlink\" title=\"Indexed Draw\"></a>Indexed Draw</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDrawElements</span><span class=\"params\">(GLenum mode,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                    GLsizei count,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                    GLenum type,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                    <span class=\"keyword\">const</span> <span class=\"keyword\">void</span>* indices)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDrawElementsBaseVertex</span><span class=\"params\">(GLenum mode,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                              GLsizei count,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                              GLenum type,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                              <span class=\"keyword\">void</span>* indices</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                              GLint basevertex)</span></span>;</span><br></pre></td></tr></table></figure>\n<p><code>glDrawElements</code>不是直接用顶点数组去绘制，而是用顶点数组的索引去绘制，例如还是用3个顶点绘制一个三角形<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    vertices</span><br><span class=\"line\">   ----------</span><br><span class=\"line\"><span class=\"number\">0</span> | (<span class=\"number\">-1</span>,  <span class=\"number\">1</span>) |</span><br><span class=\"line\"><span class=\"number\">1</span> | (<span class=\"number\">-1</span>, <span class=\"number\">-1</span>) |</span><br><span class=\"line\"><span class=\"number\">2</span> | ( <span class=\"number\">1</span>, <span class=\"number\">-1</span>) |</span><br><span class=\"line\"><span class=\"number\">3</span> | ( <span class=\"number\">1</span>,  <span class=\"number\">1</span>) |</span><br><span class=\"line\">   ----------</span><br></pre></td></tr></table></figure></p>\n<p>这次除了顶点数组外，我们还要上传一个顶点索引数组<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  indices</span><br><span class=\"line\">   -----</span><br><span class=\"line\"><span class=\"number\">0</span> |  <span class=\"number\">0</span>  |</span><br><span class=\"line\"><span class=\"number\">1</span> |  <span class=\"number\">1</span>  |</span><br><span class=\"line\"><span class=\"number\">2</span> |  <span class=\"number\">2</span>  |</span><br><span class=\"line\">   -----</span><br></pre></td></tr></table></figure><br>调用命令如下<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glDrawElements(GL_TRIANGLES, <span class=\"number\">3</span>, GL_UNSIGNED_BYTE, &amp;indices);</span><br></pre></td></tr></table></figure><br>当然上面这个只有3个顶点的例子体现不出来<code>glDrawElements</code>的复用顶点的好处，但是在三角形很多且这些三角形的顶点有很多重复的情形下就不同了，它的优势就体现出来了:</p>\n<ul>\n<li>虽然我们额外增加了一个索引数组indices去存储所绘制顶点的索引，但相比一个顶点最多4个float类型的数据量来说，用一个unsigned byte来表示一个顶点还是划算的。</li>\n<li>在顶点坐标一样，只需改变顶点顺序的图元绘制中，将大大减少数据量。</li>\n</ul>\n<p><code>glDrawElementsBaseVertex</code>的行为和<code>glDrawElements</code>一样，除了在所取到的索引数组相应元素值上加basevertex. 考虑如下情况:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    vertices                indices</span><br><span class=\"line\">   ----------                -----</span><br><span class=\"line\"><span class=\"number\">0</span> | (<span class=\"number\">-1</span>,  <span class=\"number\">1</span>) |            <span class=\"number\">0</span> |  <span class=\"number\">0</span>  |</span><br><span class=\"line\"><span class=\"number\">1</span> | (<span class=\"number\">-1</span>, <span class=\"number\">-1</span>) |            <span class=\"number\">1</span> |  <span class=\"number\">1</span>  |</span><br><span class=\"line\"><span class=\"number\">2</span> | ( <span class=\"number\">1</span>, <span class=\"number\">-1</span>) |            <span class=\"number\">2</span> |  <span class=\"number\">2</span>  |</span><br><span class=\"line\"><span class=\"number\">3</span> | ( <span class=\"number\">1</span>,  <span class=\"number\">1</span>) |            <span class=\"number\">3</span> |  <span class=\"number\">3</span>  |</span><br><span class=\"line\">   ----------             <span class=\"number\">4</span> |  <span class=\"number\">0</span>  |</span><br><span class=\"line\">                          <span class=\"number\">5</span> |  <span class=\"number\">2</span>  |</span><br><span class=\"line\">                             -----</span><br></pre></td></tr></table></figure>\n<p>这种情况下，我们一般会调用<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glDrawElements(GL_TRIANGLES, <span class=\"number\">6</span>, GL_UNSIGNED_BYTE, &amp;indices);</span><br></pre></td></tr></table></figure></p>\n<p>但是如果所索引的顶点不在顶点数组的开始，而是从第100个顶点开始<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      vertices                indices2</span><br><span class=\"line\">     ----------                -----</span><br><span class=\"line\">        ....                <span class=\"number\">0</span> | <span class=\"number\">100</span> |</span><br><span class=\"line\"><span class=\"number\">100</span> | (<span class=\"number\">-1</span>,  <span class=\"number\">1</span>) |            <span class=\"number\">1</span> | <span class=\"number\">101</span> |</span><br><span class=\"line\"><span class=\"number\">101</span> | (<span class=\"number\">-1</span>, <span class=\"number\">-1</span>) |            <span class=\"number\">2</span> | <span class=\"number\">102</span> |</span><br><span class=\"line\"><span class=\"number\">102</span> | ( <span class=\"number\">1</span>, <span class=\"number\">-1</span>) |            <span class=\"number\">3</span> | <span class=\"number\">103</span> |</span><br><span class=\"line\"><span class=\"number\">103</span> | ( <span class=\"number\">1</span>,  <span class=\"number\">1</span>) |            <span class=\"number\">4</span> | <span class=\"number\">100</span> |</span><br><span class=\"line\">        ....                <span class=\"number\">5</span> | <span class=\"number\">102</span> |</span><br><span class=\"line\">     ----------                -----</span><br></pre></td></tr></table></figure></p>\n<p>这种情况下原来的indices不能用了，只能再创建并绑定一个新的VBO <code>indices2</code>, 而创建绑定VBO是内存操作开销很大，<code>glDrawElementsBaseVertex</code>就是解决这个问题的。我们只需要在原来的索引值上加一个offset<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glDrawElementsBaseVertex(GL_TRIANGLES, <span class=\"number\">6</span>, GL_UNSIGNED_BYTE, &amp;indices, <span class=\"number\">100</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Instanced-Draw\"><a href=\"#Instanced-Draw\" class=\"headerlink\" title=\"Instanced Draw\"></a>Instanced Draw</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDrawArraysInstanced</span><span class=\"params\">(GLenum mode,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                           GLint first,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                           GLsizei count,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                           GLsizei instancecount)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDrawArraysInstancedBaseInstance</span><span class=\"params\">(GLenum mode,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       GLint first,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       GLsizei count,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       GLsizei instancecount,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       GLuint baseinstance)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDrawElementsInstanced</span><span class=\"params\">(GLenum mode,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                             GLsizei count,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                             GLenum type,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                             <span class=\"keyword\">const</span> <span class=\"keyword\">void</span>* indices,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                             GLsizei instancecount)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDrawElementsInstancedBaseInstance</span><span class=\"params\">(GLenum mode,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                         GLsizei count,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                         GLenum type,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                         <span class=\"keyword\">const</span> <span class=\"keyword\">void</span>* indices,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                         GLsizei instancecount,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                         GLuint baseinstance)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDrawElementsInstancedBaseVertex</span><span class=\"params\">(GLenum mode,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       GLsizei count,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       GLenum type,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       <span class=\"keyword\">void</span>* indices,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       GLsizei instancecount,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       GLint basevertex)</span></span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Indirect-Draw\"><a href=\"#Indirect-Draw\" class=\"headerlink\" title=\"Indirect Draw\"></a>Indirect Draw</h2>","site":{"data":{}},"excerpt":"<h1 id=\"Category\"><a href=\"#Category\" class=\"headerlink\" title=\"Category\"></a>Category</h1><p>OpenGL中的Draw Commands是一组生成GPU渲染Command Stream的API，我们可以将它们简单分为4类:</p>\n<ul>\n<li>Basic Draw</li>\n<li>Indexed Draw</li>\n<li>Instanced Draw</li>\n<li>Indirect Draw</li>\n</ul>","more":"<p>Basic Draw是最基本的Draw命令，其它3类都是从它衍生来的，为了某种绘制便利或顶点复用对Basic Draw API进行扩展，从而得到相应的索引绘制、实例绘制、间接绘制。</p>\n<h2 id=\"Basic-Draw\"><a href=\"#Basic-Draw\" class=\"headerlink\" title=\"Basic Draw\"></a>Basic Draw</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDrawArrays</span><span class=\"params\">(GLenum mode,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                  GLint first,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                  GLsizei count)</span></span>;</span><br></pre></td></tr></table></figure>\n<p><code>glDrawArrays</code>是OpenGL中最基本的绘制命令，它的第一个参数可接受的图元类型有:</p>\n<ul>\n<li>GL_POINTS</li>\n<li>GL_LINE_STRIP</li>\n<li>GL_LINE_LOOP</li>\n<li>GL_LINES</li>\n<li>GL_LINE_STRIP_ADJACENCY</li>\n<li>GL_LINES_ADJACENCY</li>\n<li>GL_TRIANGLE_STRIP</li>\n<li>GL_TRIANGLE_FAN</li>\n<li>GL_TRIANGLES</li>\n<li>GL_TRIANGLE_STRIP_ADJACENCY</li>\n<li>GL_TRIANGLES_ADJACENCY</li>\n<li>GL_PATCHES</li>\n</ul>\n<p>例如顶点数组如下<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    vertices</span><br><span class=\"line\">   ----------</span><br><span class=\"line\"><span class=\"number\">0</span> | (<span class=\"number\">-1</span>,  <span class=\"number\">1</span>) |</span><br><span class=\"line\"><span class=\"number\">1</span> | (<span class=\"number\">-1</span>, <span class=\"number\">-1</span>) |</span><br><span class=\"line\"><span class=\"number\">2</span> | ( <span class=\"number\">1</span>, <span class=\"number\">-1</span>) |</span><br><span class=\"line\"><span class=\"number\">3</span> | ( <span class=\"number\">1</span>,  <span class=\"number\">1</span>) |</span><br><span class=\"line\">   ----------</span><br></pre></td></tr></table></figure><br>用3个顶点绘制一个三角形，调用命令如下<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glDrawArrays(GL_TRIANGLES, <span class=\"number\">0</span>, <span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Indexed-Draw\"><a href=\"#Indexed-Draw\" class=\"headerlink\" title=\"Indexed Draw\"></a>Indexed Draw</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDrawElements</span><span class=\"params\">(GLenum mode,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                    GLsizei count,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                    GLenum type,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                    <span class=\"keyword\">const</span> <span class=\"keyword\">void</span>* indices)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDrawElementsBaseVertex</span><span class=\"params\">(GLenum mode,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                              GLsizei count,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                              GLenum type,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                              <span class=\"keyword\">void</span>* indices</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                              GLint basevertex)</span></span>;</span><br></pre></td></tr></table></figure>\n<p><code>glDrawElements</code>不是直接用顶点数组去绘制，而是用顶点数组的索引去绘制，例如还是用3个顶点绘制一个三角形<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    vertices</span><br><span class=\"line\">   ----------</span><br><span class=\"line\"><span class=\"number\">0</span> | (<span class=\"number\">-1</span>,  <span class=\"number\">1</span>) |</span><br><span class=\"line\"><span class=\"number\">1</span> | (<span class=\"number\">-1</span>, <span class=\"number\">-1</span>) |</span><br><span class=\"line\"><span class=\"number\">2</span> | ( <span class=\"number\">1</span>, <span class=\"number\">-1</span>) |</span><br><span class=\"line\"><span class=\"number\">3</span> | ( <span class=\"number\">1</span>,  <span class=\"number\">1</span>) |</span><br><span class=\"line\">   ----------</span><br></pre></td></tr></table></figure></p>\n<p>这次除了顶点数组外，我们还要上传一个顶点索引数组<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  indices</span><br><span class=\"line\">   -----</span><br><span class=\"line\"><span class=\"number\">0</span> |  <span class=\"number\">0</span>  |</span><br><span class=\"line\"><span class=\"number\">1</span> |  <span class=\"number\">1</span>  |</span><br><span class=\"line\"><span class=\"number\">2</span> |  <span class=\"number\">2</span>  |</span><br><span class=\"line\">   -----</span><br></pre></td></tr></table></figure><br>调用命令如下<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glDrawElements(GL_TRIANGLES, <span class=\"number\">3</span>, GL_UNSIGNED_BYTE, &amp;indices);</span><br></pre></td></tr></table></figure><br>当然上面这个只有3个顶点的例子体现不出来<code>glDrawElements</code>的复用顶点的好处，但是在三角形很多且这些三角形的顶点有很多重复的情形下就不同了，它的优势就体现出来了:</p>\n<ul>\n<li>虽然我们额外增加了一个索引数组indices去存储所绘制顶点的索引，但相比一个顶点最多4个float类型的数据量来说，用一个unsigned byte来表示一个顶点还是划算的。</li>\n<li>在顶点坐标一样，只需改变顶点顺序的图元绘制中，将大大减少数据量。</li>\n</ul>\n<p><code>glDrawElementsBaseVertex</code>的行为和<code>glDrawElements</code>一样，除了在所取到的索引数组相应元素值上加basevertex. 考虑如下情况:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    vertices                indices</span><br><span class=\"line\">   ----------                -----</span><br><span class=\"line\"><span class=\"number\">0</span> | (<span class=\"number\">-1</span>,  <span class=\"number\">1</span>) |            <span class=\"number\">0</span> |  <span class=\"number\">0</span>  |</span><br><span class=\"line\"><span class=\"number\">1</span> | (<span class=\"number\">-1</span>, <span class=\"number\">-1</span>) |            <span class=\"number\">1</span> |  <span class=\"number\">1</span>  |</span><br><span class=\"line\"><span class=\"number\">2</span> | ( <span class=\"number\">1</span>, <span class=\"number\">-1</span>) |            <span class=\"number\">2</span> |  <span class=\"number\">2</span>  |</span><br><span class=\"line\"><span class=\"number\">3</span> | ( <span class=\"number\">1</span>,  <span class=\"number\">1</span>) |            <span class=\"number\">3</span> |  <span class=\"number\">3</span>  |</span><br><span class=\"line\">   ----------             <span class=\"number\">4</span> |  <span class=\"number\">0</span>  |</span><br><span class=\"line\">                          <span class=\"number\">5</span> |  <span class=\"number\">2</span>  |</span><br><span class=\"line\">                             -----</span><br></pre></td></tr></table></figure>\n<p>这种情况下，我们一般会调用<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glDrawElements(GL_TRIANGLES, <span class=\"number\">6</span>, GL_UNSIGNED_BYTE, &amp;indices);</span><br></pre></td></tr></table></figure></p>\n<p>但是如果所索引的顶点不在顶点数组的开始，而是从第100个顶点开始<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      vertices                indices2</span><br><span class=\"line\">     ----------                -----</span><br><span class=\"line\">        ....                <span class=\"number\">0</span> | <span class=\"number\">100</span> |</span><br><span class=\"line\"><span class=\"number\">100</span> | (<span class=\"number\">-1</span>,  <span class=\"number\">1</span>) |            <span class=\"number\">1</span> | <span class=\"number\">101</span> |</span><br><span class=\"line\"><span class=\"number\">101</span> | (<span class=\"number\">-1</span>, <span class=\"number\">-1</span>) |            <span class=\"number\">2</span> | <span class=\"number\">102</span> |</span><br><span class=\"line\"><span class=\"number\">102</span> | ( <span class=\"number\">1</span>, <span class=\"number\">-1</span>) |            <span class=\"number\">3</span> | <span class=\"number\">103</span> |</span><br><span class=\"line\"><span class=\"number\">103</span> | ( <span class=\"number\">1</span>,  <span class=\"number\">1</span>) |            <span class=\"number\">4</span> | <span class=\"number\">100</span> |</span><br><span class=\"line\">        ....                <span class=\"number\">5</span> | <span class=\"number\">102</span> |</span><br><span class=\"line\">     ----------                -----</span><br></pre></td></tr></table></figure></p>\n<p>这种情况下原来的indices不能用了，只能再创建并绑定一个新的VBO <code>indices2</code>, 而创建绑定VBO是内存操作开销很大，<code>glDrawElementsBaseVertex</code>就是解决这个问题的。我们只需要在原来的索引值上加一个offset<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glDrawElementsBaseVertex(GL_TRIANGLES, <span class=\"number\">6</span>, GL_UNSIGNED_BYTE, &amp;indices, <span class=\"number\">100</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Instanced-Draw\"><a href=\"#Instanced-Draw\" class=\"headerlink\" title=\"Instanced Draw\"></a>Instanced Draw</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDrawArraysInstanced</span><span class=\"params\">(GLenum mode,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                           GLint first,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                           GLsizei count,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                           GLsizei instancecount)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDrawArraysInstancedBaseInstance</span><span class=\"params\">(GLenum mode,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       GLint first,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       GLsizei count,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       GLsizei instancecount,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       GLuint baseinstance)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDrawElementsInstanced</span><span class=\"params\">(GLenum mode,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                             GLsizei count,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                             GLenum type,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                             <span class=\"keyword\">const</span> <span class=\"keyword\">void</span>* indices,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                             GLsizei instancecount)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDrawElementsInstancedBaseInstance</span><span class=\"params\">(GLenum mode,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                         GLsizei count,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                         GLenum type,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                         <span class=\"keyword\">const</span> <span class=\"keyword\">void</span>* indices,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                         GLsizei instancecount,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                         GLuint baseinstance)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDrawElementsInstancedBaseVertex</span><span class=\"params\">(GLenum mode,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       GLsizei count,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       GLenum type,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       <span class=\"keyword\">void</span>* indices,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       GLsizei instancecount,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                       GLint basevertex)</span></span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Indirect-Draw\"><a href=\"#Indirect-Draw\" class=\"headerlink\" title=\"Indirect Draw\"></a>Indirect Draw</h2>"},{"title":"GCC __attribute__","date":"2020-02-26T02:49:57.000Z","_content":"\n`__attribute__` is a keyword introduced by GCC. It is regarded as an extension of a language. It helps the compiler optimize calls, check code more carefully for correctness, control memory placement and code generation options.\n\n## Syntax\n```\n__attribute__ ((attribute-list))\n```\n\nwhere an attribute-list is a possibly empty comma-separated sequence of attributes. Say:\n\n```\nstatic void _init( void ) __attribute__((constructor));\n```\n\n## Categories\n- [Function Attributes](https://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html#Function-Attributes)\n- [Variable Attribute](https://gcc.gnu.org/onlinedocs/gcc/Variable-Attributes.html#Variable-Attributes)\n- [Type Attributes](https://gcc.gnu.org/onlinedocs/gcc/Type-Attributes.html#Type-Attributes)\n- [Label Attributes](https://gcc.gnu.org/onlinedocs/gcc/Label-Attributes.html#Label-Attributes)\n- [Enumerator Attributes](https://gcc.gnu.org/onlinedocs/gcc/Enumerator-Attributes.html#Enumerator-Attributes)\n- [Statement Attributes](https://gcc.gnu.org/onlinedocs/gcc/Statement-Attributes.html#Statement-Attributes)\n\nLet's say to specify an attribute of variables.\n\n```\nextern __thread struct _glapi_table * _glapi_tls_Dispatch\n    __attribute__((tls_model(\"initial-exec\")));\n```\n\nwhere the `tls_model` attribute sets thread-local storage model of a particular thread variable, overriding `-ftls-model=` command-line switch on a per-variable basis. The [`tls_model`](https://docs.oracle.com/cd/E53394_01/html/E54813/man-tlsam.html#scrolltoc) argument should be one of `global-dynamic`, `local-dynamic`, `initial-exec`, or `local-exec`.\n\n### [Visibility](http://anadoxin.org/blog/control-over-symbol-exports-in-gcc.html)\n\n```\n__attribute__((visibility(\"default\")));\n```\n\nthis attribute involves with the visibility of exported symbols in a shared object, overriding `-fvisibility=hidden` command-line option during the compilation. The visibility argument should be one of `default`, `hidden`, `internal`, or `protected`.\n","source":"_posts/gcc-attribute.md","raw":"---\ntitle: GCC __attribute__\ndate: 2020-02-26 10:49:57\ntags: [gcc]\n---\n\n`__attribute__` is a keyword introduced by GCC. It is regarded as an extension of a language. It helps the compiler optimize calls, check code more carefully for correctness, control memory placement and code generation options.\n\n## Syntax\n```\n__attribute__ ((attribute-list))\n```\n\nwhere an attribute-list is a possibly empty comma-separated sequence of attributes. Say:\n\n```\nstatic void _init( void ) __attribute__((constructor));\n```\n\n## Categories\n- [Function Attributes](https://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html#Function-Attributes)\n- [Variable Attribute](https://gcc.gnu.org/onlinedocs/gcc/Variable-Attributes.html#Variable-Attributes)\n- [Type Attributes](https://gcc.gnu.org/onlinedocs/gcc/Type-Attributes.html#Type-Attributes)\n- [Label Attributes](https://gcc.gnu.org/onlinedocs/gcc/Label-Attributes.html#Label-Attributes)\n- [Enumerator Attributes](https://gcc.gnu.org/onlinedocs/gcc/Enumerator-Attributes.html#Enumerator-Attributes)\n- [Statement Attributes](https://gcc.gnu.org/onlinedocs/gcc/Statement-Attributes.html#Statement-Attributes)\n\nLet's say to specify an attribute of variables.\n\n```\nextern __thread struct _glapi_table * _glapi_tls_Dispatch\n    __attribute__((tls_model(\"initial-exec\")));\n```\n\nwhere the `tls_model` attribute sets thread-local storage model of a particular thread variable, overriding `-ftls-model=` command-line switch on a per-variable basis. The [`tls_model`](https://docs.oracle.com/cd/E53394_01/html/E54813/man-tlsam.html#scrolltoc) argument should be one of `global-dynamic`, `local-dynamic`, `initial-exec`, or `local-exec`.\n\n### [Visibility](http://anadoxin.org/blog/control-over-symbol-exports-in-gcc.html)\n\n```\n__attribute__((visibility(\"default\")));\n```\n\nthis attribute involves with the visibility of exported symbols in a shared object, overriding `-fvisibility=hidden` command-line option during the compilation. The visibility argument should be one of `default`, `hidden`, `internal`, or `protected`.\n","slug":"gcc-attribute","published":1,"updated":"2020-07-08T02:21:05.781Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqi00006x1ts1j2y1l76","content":"<p><code>__attribute__</code> is a keyword introduced by GCC. It is regarded as an extension of a language. It helps the compiler optimize calls, check code more carefully for correctness, control memory placement and code generation options.</p>\n<h2 id=\"Syntax\"><a href=\"#Syntax\" class=\"headerlink\" title=\"Syntax\"></a>Syntax</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__attribute__ ((attribute-list))</span><br></pre></td></tr></table></figure>\n<p>where an attribute-list is a possibly empty comma-separated sequence of attributes. Say:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static void _init( void ) __attribute__((constructor));</span><br></pre></td></tr></table></figure>\n<h2 id=\"Categories\"><a href=\"#Categories\" class=\"headerlink\" title=\"Categories\"></a>Categories</h2><ul>\n<li><a href=\"https://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html#Function-Attributes\" target=\"_blank\" rel=\"noopener\">Function Attributes</a></li>\n<li><a href=\"https://gcc.gnu.org/onlinedocs/gcc/Variable-Attributes.html#Variable-Attributes\" target=\"_blank\" rel=\"noopener\">Variable Attribute</a></li>\n<li><a href=\"https://gcc.gnu.org/onlinedocs/gcc/Type-Attributes.html#Type-Attributes\" target=\"_blank\" rel=\"noopener\">Type Attributes</a></li>\n<li><a href=\"https://gcc.gnu.org/onlinedocs/gcc/Label-Attributes.html#Label-Attributes\" target=\"_blank\" rel=\"noopener\">Label Attributes</a></li>\n<li><a href=\"https://gcc.gnu.org/onlinedocs/gcc/Enumerator-Attributes.html#Enumerator-Attributes\" target=\"_blank\" rel=\"noopener\">Enumerator Attributes</a></li>\n<li><a href=\"https://gcc.gnu.org/onlinedocs/gcc/Statement-Attributes.html#Statement-Attributes\" target=\"_blank\" rel=\"noopener\">Statement Attributes</a></li>\n</ul>\n<p>Let’s say to specify an attribute of variables.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extern __thread struct _glapi_table * _glapi_tls_Dispatch</span><br><span class=\"line\">    __attribute__((tls_model(&quot;initial-exec&quot;)));</span><br></pre></td></tr></table></figure>\n<p>where the <code>tls_model</code> attribute sets thread-local storage model of a particular thread variable, overriding <code>-ftls-model=</code> command-line switch on a per-variable basis. The <a href=\"https://docs.oracle.com/cd/E53394_01/html/E54813/man-tlsam.html#scrolltoc\" target=\"_blank\" rel=\"noopener\"><code>tls_model</code></a> argument should be one of <code>global-dynamic</code>, <code>local-dynamic</code>, <code>initial-exec</code>, or <code>local-exec</code>.</p>\n<h3 id=\"Visibility\"><a href=\"#Visibility\" class=\"headerlink\" title=\"Visibility\"></a><a href=\"http://anadoxin.org/blog/control-over-symbol-exports-in-gcc.html\" target=\"_blank\" rel=\"noopener\">Visibility</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__attribute__((visibility(&quot;default&quot;)));</span><br></pre></td></tr></table></figure>\n<p>this attribute involves with the visibility of exported symbols in a shared object, overriding <code>-fvisibility=hidden</code> command-line option during the compilation. The visibility argument should be one of <code>default</code>, <code>hidden</code>, <code>internal</code>, or <code>protected</code>.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><code>__attribute__</code> is a keyword introduced by GCC. It is regarded as an extension of a language. It helps the compiler optimize calls, check code more carefully for correctness, control memory placement and code generation options.</p>\n<h2 id=\"Syntax\"><a href=\"#Syntax\" class=\"headerlink\" title=\"Syntax\"></a>Syntax</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__attribute__ ((attribute-list))</span><br></pre></td></tr></table></figure>\n<p>where an attribute-list is a possibly empty comma-separated sequence of attributes. Say:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static void _init( void ) __attribute__((constructor));</span><br></pre></td></tr></table></figure>\n<h2 id=\"Categories\"><a href=\"#Categories\" class=\"headerlink\" title=\"Categories\"></a>Categories</h2><ul>\n<li><a href=\"https://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html#Function-Attributes\" target=\"_blank\" rel=\"noopener\">Function Attributes</a></li>\n<li><a href=\"https://gcc.gnu.org/onlinedocs/gcc/Variable-Attributes.html#Variable-Attributes\" target=\"_blank\" rel=\"noopener\">Variable Attribute</a></li>\n<li><a href=\"https://gcc.gnu.org/onlinedocs/gcc/Type-Attributes.html#Type-Attributes\" target=\"_blank\" rel=\"noopener\">Type Attributes</a></li>\n<li><a href=\"https://gcc.gnu.org/onlinedocs/gcc/Label-Attributes.html#Label-Attributes\" target=\"_blank\" rel=\"noopener\">Label Attributes</a></li>\n<li><a href=\"https://gcc.gnu.org/onlinedocs/gcc/Enumerator-Attributes.html#Enumerator-Attributes\" target=\"_blank\" rel=\"noopener\">Enumerator Attributes</a></li>\n<li><a href=\"https://gcc.gnu.org/onlinedocs/gcc/Statement-Attributes.html#Statement-Attributes\" target=\"_blank\" rel=\"noopener\">Statement Attributes</a></li>\n</ul>\n<p>Let’s say to specify an attribute of variables.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extern __thread struct _glapi_table * _glapi_tls_Dispatch</span><br><span class=\"line\">    __attribute__((tls_model(&quot;initial-exec&quot;)));</span><br></pre></td></tr></table></figure>\n<p>where the <code>tls_model</code> attribute sets thread-local storage model of a particular thread variable, overriding <code>-ftls-model=</code> command-line switch on a per-variable basis. The <a href=\"https://docs.oracle.com/cd/E53394_01/html/E54813/man-tlsam.html#scrolltoc\" target=\"_blank\" rel=\"noopener\"><code>tls_model</code></a> argument should be one of <code>global-dynamic</code>, <code>local-dynamic</code>, <code>initial-exec</code>, or <code>local-exec</code>.</p>\n<h3 id=\"Visibility\"><a href=\"#Visibility\" class=\"headerlink\" title=\"Visibility\"></a><a href=\"http://anadoxin.org/blog/control-over-symbol-exports-in-gcc.html\" target=\"_blank\" rel=\"noopener\">Visibility</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__attribute__((visibility(&quot;default&quot;)));</span><br></pre></td></tr></table></figure>\n<p>this attribute involves with the visibility of exported symbols in a shared object, overriding <code>-fvisibility=hidden</code> command-line option during the compilation. The visibility argument should be one of <code>default</code>, <code>hidden</code>, <code>internal</code>, or <code>protected</code>.</p>\n"},{"title":"glamor","date":"2020-11-10T00:04:15.000Z","_content":"","source":"_posts/glamor.md","raw":"---\ntitle: glamor\ndate: 2020-11-10 08:04:15\ntags:\n---\n","slug":"glamor","published":1,"updated":"2020-11-10T00:04:15.334Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqi20007x1tsd1ak5f8j","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Pixmap in X","date":"2020-09-27T14:13:07.000Z","_content":"\n# XYPixmap\nThe data for a XYPixmap is organized as a set of bitmaps representing individual bit planes, with the planes appearing from MSB to LSB in bit order just as demonstrated below. Every pixel value is 0x55 (b'01010101) in this example. \n\n<!--more-->\n\n<pre>\n                              ┌────────────────────────────┐\n                              │1111111111111111111111111111│        \n                            ┌─┴──────────────────────────┐1│\n                            │0000000000000000000000000000│1│        \n                          ┌─┴──────────────────────────┐0│1│\n                          │1111111111111111111111111111│0│1│        \n                        ┌─┴──────────────────────────┐1│0│1│\n                        │0000000000000000000000000000│1│0│1│        \n                      ┌─┴──────────────────────────┐0│1│0│1│\n                      │1111111111111111111111111111│0│1│0│1│        \n                    ┌─┴──────────────────────────┐1│0│1│0│1│◀────────────────── plane_7 \n                    │0000000000000000000000000000│1│0│1│0│─┘        \n                  ┌─┴──────────────────────────┐0│1│0│1│0│◀────────────────── plane_6 \n                  │1111111111111111111111111111│0│1│0│1│─┘       \n                ┌─┴──────────────────────────┐1│0│1│0│1│◀────────────────── plane_5 \n                │0000000000000000000000000000│1│0│1│0│─┘      \n                │0000000000000000000000000000│1│0│1│0│◀────────────────── plane_4       \n                │0000000000000000000000000000│1│0│1│─┘      \n                │0000000000000000000000000000│1│0│1│◀────────────────── plane_3       \n                │0000000000000000000000000000│1│0│─┘      \n                │0000000000000000000000000000│1│0│◀────────────────── plane_2  \n                │0000000000000000000000000000│1│─┘       \n                │0000000000000000000000000000│1│◀────────────────── plane_1        \n                │0000000000000000000000000000│─┘       \n                │0000000000000000000000000000│◀────────────────── plane_0       \n                └────────────────────────────┘\n</pre>\n\n# Pixel buffer\nAs a core feature of GLX & EGL, pixel buffer or pBuffer is allowed for off-screen rendering. Pixel buffer is essentially a renderable area allocated by OpenGL itself (most likely a framebuffer) and is bound to an OpenGL rendering context.</b>\nWith respect to GLX, `glXCreatePbuffer` creates a pixel buffer and return its `XID`. In the implementation of Mesa, it calls `XCreatPixmap` to get an `XID` which is bound to the pixel buffer.\n","source":"_posts/pixmap.md","raw":"---\ntitle: Pixmap in X\ndate: 2020-09-27 22:13:07\ntags: [X]\n---\n\n# XYPixmap\nThe data for a XYPixmap is organized as a set of bitmaps representing individual bit planes, with the planes appearing from MSB to LSB in bit order just as demonstrated below. Every pixel value is 0x55 (b'01010101) in this example. \n\n<!--more-->\n\n<pre>\n                              ┌────────────────────────────┐\n                              │1111111111111111111111111111│        \n                            ┌─┴──────────────────────────┐1│\n                            │0000000000000000000000000000│1│        \n                          ┌─┴──────────────────────────┐0│1│\n                          │1111111111111111111111111111│0│1│        \n                        ┌─┴──────────────────────────┐1│0│1│\n                        │0000000000000000000000000000│1│0│1│        \n                      ┌─┴──────────────────────────┐0│1│0│1│\n                      │1111111111111111111111111111│0│1│0│1│        \n                    ┌─┴──────────────────────────┐1│0│1│0│1│◀────────────────── plane_7 \n                    │0000000000000000000000000000│1│0│1│0│─┘        \n                  ┌─┴──────────────────────────┐0│1│0│1│0│◀────────────────── plane_6 \n                  │1111111111111111111111111111│0│1│0│1│─┘       \n                ┌─┴──────────────────────────┐1│0│1│0│1│◀────────────────── plane_5 \n                │0000000000000000000000000000│1│0│1│0│─┘      \n                │0000000000000000000000000000│1│0│1│0│◀────────────────── plane_4       \n                │0000000000000000000000000000│1│0│1│─┘      \n                │0000000000000000000000000000│1│0│1│◀────────────────── plane_3       \n                │0000000000000000000000000000│1│0│─┘      \n                │0000000000000000000000000000│1│0│◀────────────────── plane_2  \n                │0000000000000000000000000000│1│─┘       \n                │0000000000000000000000000000│1│◀────────────────── plane_1        \n                │0000000000000000000000000000│─┘       \n                │0000000000000000000000000000│◀────────────────── plane_0       \n                └────────────────────────────┘\n</pre>\n\n# Pixel buffer\nAs a core feature of GLX & EGL, pixel buffer or pBuffer is allowed for off-screen rendering. Pixel buffer is essentially a renderable area allocated by OpenGL itself (most likely a framebuffer) and is bound to an OpenGL rendering context.</b>\nWith respect to GLX, `glXCreatePbuffer` creates a pixel buffer and return its `XID`. In the implementation of Mesa, it calls `XCreatPixmap` to get an `XID` which is bound to the pixel buffer.\n","slug":"pixmap","published":1,"updated":"2020-10-19T09:45:30.272Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqi6000ax1tshn2o7xue","content":"<h1 id=\"XYPixmap\"><a href=\"#XYPixmap\" class=\"headerlink\" title=\"XYPixmap\"></a>XYPixmap</h1><p>The data for a XYPixmap is organized as a set of bitmaps representing individual bit planes, with the planes appearing from MSB to LSB in bit order just as demonstrated below. Every pixel value is 0x55 (b’01010101) in this example. </p>\n<a id=\"more\"></a>\n<pre>\n                              ┌────────────────────────────┐\n                              │1111111111111111111111111111│        \n                            ┌─┴──────────────────────────┐1│\n                            │0000000000000000000000000000│1│        \n                          ┌─┴──────────────────────────┐0│1│\n                          │1111111111111111111111111111│0│1│        \n                        ┌─┴──────────────────────────┐1│0│1│\n                        │0000000000000000000000000000│1│0│1│        \n                      ┌─┴──────────────────────────┐0│1│0│1│\n                      │1111111111111111111111111111│0│1│0│1│        \n                    ┌─┴──────────────────────────┐1│0│1│0│1│◀────────────────── plane_7 \n                    │0000000000000000000000000000│1│0│1│0│─┘        \n                  ┌─┴──────────────────────────┐0│1│0│1│0│◀────────────────── plane_6 \n                  │1111111111111111111111111111│0│1│0│1│─┘       \n                ┌─┴──────────────────────────┐1│0│1│0│1│◀────────────────── plane_5 \n                │0000000000000000000000000000│1│0│1│0│─┘      \n                │0000000000000000000000000000│1│0│1│0│◀────────────────── plane_4       \n                │0000000000000000000000000000│1│0│1│─┘      \n                │0000000000000000000000000000│1│0│1│◀────────────────── plane_3       \n                │0000000000000000000000000000│1│0│─┘      \n                │0000000000000000000000000000│1│0│◀────────────────── plane_2  \n                │0000000000000000000000000000│1│─┘       \n                │0000000000000000000000000000│1│◀────────────────── plane_1        \n                │0000000000000000000000000000│─┘       \n                │0000000000000000000000000000│◀────────────────── plane_0       \n                └────────────────────────────┘\n</pre>\n\n<h1 id=\"Pixel-buffer\"><a href=\"#Pixel-buffer\" class=\"headerlink\" title=\"Pixel buffer\"></a>Pixel buffer</h1><p>As a core feature of GLX &amp; EGL, pixel buffer or pBuffer is allowed for off-screen rendering. Pixel buffer is essentially a renderable area allocated by OpenGL itself (most likely a framebuffer) and is bound to an OpenGL rendering context.&lt;/b&gt;<br>With respect to GLX, <code>glXCreatePbuffer</code> creates a pixel buffer and return its <code>XID</code>. In the implementation of Mesa, it calls <code>XCreatPixmap</code> to get an <code>XID</code> which is bound to the pixel buffer.</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"XYPixmap\"><a href=\"#XYPixmap\" class=\"headerlink\" title=\"XYPixmap\"></a>XYPixmap</h1><p>The data for a XYPixmap is organized as a set of bitmaps representing individual bit planes, with the planes appearing from MSB to LSB in bit order just as demonstrated below. Every pixel value is 0x55 (b’01010101) in this example. </p>","more":"<pre>\n                              ┌────────────────────────────┐\n                              │1111111111111111111111111111│        \n                            ┌─┴──────────────────────────┐1│\n                            │0000000000000000000000000000│1│        \n                          ┌─┴──────────────────────────┐0│1│\n                          │1111111111111111111111111111│0│1│        \n                        ┌─┴──────────────────────────┐1│0│1│\n                        │0000000000000000000000000000│1│0│1│        \n                      ┌─┴──────────────────────────┐0│1│0│1│\n                      │1111111111111111111111111111│0│1│0│1│        \n                    ┌─┴──────────────────────────┐1│0│1│0│1│◀────────────────── plane_7 \n                    │0000000000000000000000000000│1│0│1│0│─┘        \n                  ┌─┴──────────────────────────┐0│1│0│1│0│◀────────────────── plane_6 \n                  │1111111111111111111111111111│0│1│0│1│─┘       \n                ┌─┴──────────────────────────┐1│0│1│0│1│◀────────────────── plane_5 \n                │0000000000000000000000000000│1│0│1│0│─┘      \n                │0000000000000000000000000000│1│0│1│0│◀────────────────── plane_4       \n                │0000000000000000000000000000│1│0│1│─┘      \n                │0000000000000000000000000000│1│0│1│◀────────────────── plane_3       \n                │0000000000000000000000000000│1│0│─┘      \n                │0000000000000000000000000000│1│0│◀────────────────── plane_2  \n                │0000000000000000000000000000│1│─┘       \n                │0000000000000000000000000000│1│◀────────────────── plane_1        \n                │0000000000000000000000000000│─┘       \n                │0000000000000000000000000000│◀────────────────── plane_0       \n                └────────────────────────────┘\n</pre>\n\n<h1 id=\"Pixel-buffer\"><a href=\"#Pixel-buffer\" class=\"headerlink\" title=\"Pixel buffer\"></a>Pixel buffer</h1><p>As a core feature of GLX &amp; EGL, pixel buffer or pBuffer is allowed for off-screen rendering. Pixel buffer is essentially a renderable area allocated by OpenGL itself (most likely a framebuffer) and is bound to an OpenGL rendering context.&lt;/b&gt;<br>With respect to GLX, <code>glXCreatePbuffer</code> creates a pixel buffer and return its <code>XID</code>. In the implementation of Mesa, it calls <code>XCreatPixmap</code> to get an <code>XID</code> which is bound to the pixel buffer.</p>"},{"title":"POSIX Threads Synchronization - Spinlock vs. Mutex","date":"2020-06-03T03:03:49.000Z","_content":"\n## Spinlock\n自旋锁是解决多处理器共享内存使用的一种底层同步机制。当一个线程试图获取一个已经被另一个线程占有的自旋锁时，这个线程将以循环检查自旋锁是否被释放的方式(自旋)阻塞。一个线程不应该长时间占有一个自旋锁，因为被阻塞的线程仍然消耗CPU资源 (CPU cycles)\n\n### POSIX interfaces\n#### Initializing a Spinlock\n```c\nint pthread_spin_init(pthread_spinlock_t *lock, int pshared); \n```\n\n`pshared`属性可以取以下值的其中之一:\n\nPTHREAD_PROCESS_SHARED - 这个自旋锁可以被任何线程操作，即使这些线程属于不同的进程，只要申请这个自旋锁的内存是被这些进程共享的。\n\nPTHREAD_PROCESS_PRIVATE - 这个自旋锁只能被那些与初始化它的线程同属一个进程的线程操作。\n\n#### Acquiring a Spinlock\n```c\nint pthread_spin_lock(pthread_spinlock_t *lock);\n```\n\n如果被请求的自旋锁没有被其它线程占有，则请求它的线程成功获取这个锁，否则这个线程不从`pthread_spin_lock`中返回(阻塞)，直到这个锁被释放。一个线程尝试获取被它自己占有的自旋锁是未定义的行为。\n\n#### Acquiring a Non-Blocking Spinlock\n```c\nint pthread_spin_trylock(pthread_spinlock_t *lock);\n```\n\n尝试获取一个自旋锁，与`pthread_spin_lock`不同的是，如果所请求的锁被另一个线程占有，不阻塞，而是立即返回失败(Non-Blocking).\n\n#### Unlocking a Spinlock\n```c\nint pthread_spin_unlock(pthread_spinlock_t *lock);\n```\n\n释放被锁的自旋锁。成功返回0，否则返回以下错误码之一:\n\nEPERM - 调用线程不持有这个锁\n\nEINVAL - lock指向的不是一个已初始化的自旋锁对象\n\n#### Destroying a Spinlock\n```c\nint pthread_spin_destroy(pthread_spinlock_t *lock);\n```\n\n","source":"_posts/multithread-synchronization.md","raw":"---\ntitle: POSIX Threads Synchronization - Spinlock vs. Mutex \ndate: 2020-06-03 11:03:49\ntags: [multi-thread]\ncategories: [Programming]\n---\n\n## Spinlock\n自旋锁是解决多处理器共享内存使用的一种底层同步机制。当一个线程试图获取一个已经被另一个线程占有的自旋锁时，这个线程将以循环检查自旋锁是否被释放的方式(自旋)阻塞。一个线程不应该长时间占有一个自旋锁，因为被阻塞的线程仍然消耗CPU资源 (CPU cycles)\n\n### POSIX interfaces\n#### Initializing a Spinlock\n```c\nint pthread_spin_init(pthread_spinlock_t *lock, int pshared); \n```\n\n`pshared`属性可以取以下值的其中之一:\n\nPTHREAD_PROCESS_SHARED - 这个自旋锁可以被任何线程操作，即使这些线程属于不同的进程，只要申请这个自旋锁的内存是被这些进程共享的。\n\nPTHREAD_PROCESS_PRIVATE - 这个自旋锁只能被那些与初始化它的线程同属一个进程的线程操作。\n\n#### Acquiring a Spinlock\n```c\nint pthread_spin_lock(pthread_spinlock_t *lock);\n```\n\n如果被请求的自旋锁没有被其它线程占有，则请求它的线程成功获取这个锁，否则这个线程不从`pthread_spin_lock`中返回(阻塞)，直到这个锁被释放。一个线程尝试获取被它自己占有的自旋锁是未定义的行为。\n\n#### Acquiring a Non-Blocking Spinlock\n```c\nint pthread_spin_trylock(pthread_spinlock_t *lock);\n```\n\n尝试获取一个自旋锁，与`pthread_spin_lock`不同的是，如果所请求的锁被另一个线程占有，不阻塞，而是立即返回失败(Non-Blocking).\n\n#### Unlocking a Spinlock\n```c\nint pthread_spin_unlock(pthread_spinlock_t *lock);\n```\n\n释放被锁的自旋锁。成功返回0，否则返回以下错误码之一:\n\nEPERM - 调用线程不持有这个锁\n\nEINVAL - lock指向的不是一个已初始化的自旋锁对象\n\n#### Destroying a Spinlock\n```c\nint pthread_spin_destroy(pthread_spinlock_t *lock);\n```\n\n","slug":"multithread-synchronization","published":1,"updated":"2020-07-24T08:38:25.705Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqi7000bx1tsagar9ux6","content":"<h2 id=\"Spinlock\"><a href=\"#Spinlock\" class=\"headerlink\" title=\"Spinlock\"></a>Spinlock</h2><p>自旋锁是解决多处理器共享内存使用的一种底层同步机制。当一个线程试图获取一个已经被另一个线程占有的自旋锁时，这个线程将以循环检查自旋锁是否被释放的方式(自旋)阻塞。一个线程不应该长时间占有一个自旋锁，因为被阻塞的线程仍然消耗CPU资源 (CPU cycles)</p>\n<h3 id=\"POSIX-interfaces\"><a href=\"#POSIX-interfaces\" class=\"headerlink\" title=\"POSIX interfaces\"></a>POSIX interfaces</h3><h4 id=\"Initializing-a-Spinlock\"><a href=\"#Initializing-a-Spinlock\" class=\"headerlink\" title=\"Initializing a Spinlock\"></a>Initializing a Spinlock</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">pthread_spin_init</span><span class=\"params\">(<span class=\"keyword\">pthread_spinlock_t</span> *lock, <span class=\"keyword\">int</span> pshared)</span></span>;</span><br></pre></td></tr></table></figure>\n<p><code>pshared</code>属性可以取以下值的其中之一:</p>\n<p>PTHREAD_PROCESS_SHARED - 这个自旋锁可以被任何线程操作，即使这些线程属于不同的进程，只要申请这个自旋锁的内存是被这些进程共享的。</p>\n<p>PTHREAD_PROCESS_PRIVATE - 这个自旋锁只能被那些与初始化它的线程同属一个进程的线程操作。</p>\n<h4 id=\"Acquiring-a-Spinlock\"><a href=\"#Acquiring-a-Spinlock\" class=\"headerlink\" title=\"Acquiring a Spinlock\"></a>Acquiring a Spinlock</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">pthread_spin_lock</span><span class=\"params\">(<span class=\"keyword\">pthread_spinlock_t</span> *lock)</span></span>;</span><br></pre></td></tr></table></figure>\n<p>如果被请求的自旋锁没有被其它线程占有，则请求它的线程成功获取这个锁，否则这个线程不从<code>pthread_spin_lock</code>中返回(阻塞)，直到这个锁被释放。一个线程尝试获取被它自己占有的自旋锁是未定义的行为。</p>\n<h4 id=\"Acquiring-a-Non-Blocking-Spinlock\"><a href=\"#Acquiring-a-Non-Blocking-Spinlock\" class=\"headerlink\" title=\"Acquiring a Non-Blocking Spinlock\"></a>Acquiring a Non-Blocking Spinlock</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">pthread_spin_trylock</span><span class=\"params\">(<span class=\"keyword\">pthread_spinlock_t</span> *lock)</span></span>;</span><br></pre></td></tr></table></figure>\n<p>尝试获取一个自旋锁，与<code>pthread_spin_lock</code>不同的是，如果所请求的锁被另一个线程占有，不阻塞，而是立即返回失败(Non-Blocking).</p>\n<h4 id=\"Unlocking-a-Spinlock\"><a href=\"#Unlocking-a-Spinlock\" class=\"headerlink\" title=\"Unlocking a Spinlock\"></a>Unlocking a Spinlock</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">pthread_spin_unlock</span><span class=\"params\">(<span class=\"keyword\">pthread_spinlock_t</span> *lock)</span></span>;</span><br></pre></td></tr></table></figure>\n<p>释放被锁的自旋锁。成功返回0，否则返回以下错误码之一:</p>\n<p>EPERM - 调用线程不持有这个锁</p>\n<p>EINVAL - lock指向的不是一个已初始化的自旋锁对象</p>\n<h4 id=\"Destroying-a-Spinlock\"><a href=\"#Destroying-a-Spinlock\" class=\"headerlink\" title=\"Destroying a Spinlock\"></a>Destroying a Spinlock</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">pthread_spin_destroy</span><span class=\"params\">(<span class=\"keyword\">pthread_spinlock_t</span> *lock)</span></span>;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Spinlock\"><a href=\"#Spinlock\" class=\"headerlink\" title=\"Spinlock\"></a>Spinlock</h2><p>自旋锁是解决多处理器共享内存使用的一种底层同步机制。当一个线程试图获取一个已经被另一个线程占有的自旋锁时，这个线程将以循环检查自旋锁是否被释放的方式(自旋)阻塞。一个线程不应该长时间占有一个自旋锁，因为被阻塞的线程仍然消耗CPU资源 (CPU cycles)</p>\n<h3 id=\"POSIX-interfaces\"><a href=\"#POSIX-interfaces\" class=\"headerlink\" title=\"POSIX interfaces\"></a>POSIX interfaces</h3><h4 id=\"Initializing-a-Spinlock\"><a href=\"#Initializing-a-Spinlock\" class=\"headerlink\" title=\"Initializing a Spinlock\"></a>Initializing a Spinlock</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">pthread_spin_init</span><span class=\"params\">(<span class=\"keyword\">pthread_spinlock_t</span> *lock, <span class=\"keyword\">int</span> pshared)</span></span>;</span><br></pre></td></tr></table></figure>\n<p><code>pshared</code>属性可以取以下值的其中之一:</p>\n<p>PTHREAD_PROCESS_SHARED - 这个自旋锁可以被任何线程操作，即使这些线程属于不同的进程，只要申请这个自旋锁的内存是被这些进程共享的。</p>\n<p>PTHREAD_PROCESS_PRIVATE - 这个自旋锁只能被那些与初始化它的线程同属一个进程的线程操作。</p>\n<h4 id=\"Acquiring-a-Spinlock\"><a href=\"#Acquiring-a-Spinlock\" class=\"headerlink\" title=\"Acquiring a Spinlock\"></a>Acquiring a Spinlock</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">pthread_spin_lock</span><span class=\"params\">(<span class=\"keyword\">pthread_spinlock_t</span> *lock)</span></span>;</span><br></pre></td></tr></table></figure>\n<p>如果被请求的自旋锁没有被其它线程占有，则请求它的线程成功获取这个锁，否则这个线程不从<code>pthread_spin_lock</code>中返回(阻塞)，直到这个锁被释放。一个线程尝试获取被它自己占有的自旋锁是未定义的行为。</p>\n<h4 id=\"Acquiring-a-Non-Blocking-Spinlock\"><a href=\"#Acquiring-a-Non-Blocking-Spinlock\" class=\"headerlink\" title=\"Acquiring a Non-Blocking Spinlock\"></a>Acquiring a Non-Blocking Spinlock</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">pthread_spin_trylock</span><span class=\"params\">(<span class=\"keyword\">pthread_spinlock_t</span> *lock)</span></span>;</span><br></pre></td></tr></table></figure>\n<p>尝试获取一个自旋锁，与<code>pthread_spin_lock</code>不同的是，如果所请求的锁被另一个线程占有，不阻塞，而是立即返回失败(Non-Blocking).</p>\n<h4 id=\"Unlocking-a-Spinlock\"><a href=\"#Unlocking-a-Spinlock\" class=\"headerlink\" title=\"Unlocking a Spinlock\"></a>Unlocking a Spinlock</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">pthread_spin_unlock</span><span class=\"params\">(<span class=\"keyword\">pthread_spinlock_t</span> *lock)</span></span>;</span><br></pre></td></tr></table></figure>\n<p>释放被锁的自旋锁。成功返回0，否则返回以下错误码之一:</p>\n<p>EPERM - 调用线程不持有这个锁</p>\n<p>EINVAL - lock指向的不是一个已初始化的自旋锁对象</p>\n<h4 id=\"Destroying-a-Spinlock\"><a href=\"#Destroying-a-Spinlock\" class=\"headerlink\" title=\"Destroying a Spinlock\"></a>Destroying a Spinlock</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">pthread_spin_destroy</span><span class=\"params\">(<span class=\"keyword\">pthread_spinlock_t</span> *lock)</span></span>;</span><br></pre></td></tr></table></figure>\n"},{"title":"ARB_point_parameters","date":"2020-06-05T05:06:50.000Z","_content":"\n# 概述(#14)\n\nARB_point_parameters允许用户设置点的扩展几何特征。这些点的几何特征主要用来渲染粒子或微小光源，通常被称为光点(Light Points).\n\n<!--more-->\n\n光栅化后的点的明亮度由多个因素决定: 点的面积(Area), 点的颜色(Color), 点的透明度(Transparency), 以及电子枪和磷光粉之间的反应。而点的面积和点的透明度由点的大小(Size)推导而来，在ARB_point_parameters之前，点的大小`size`这个参数由 `glPointSize`指定。\n\nARB_point_parameters扩展主要实现两个目的:\n\n1. 点的大小(Size)要受距离衰减的影响，就是点的大小要随着点离观察点的距离的增大而减小。\n\n这个扩展定义的点的明亮度的距离衰减公式是:\n\n\n$$Attenuation(d) = \\frac{1}{a + b \\times d + c \\times d^2}$$\n\n$$Brightness(Pe) = Brightness \\times Attenuation(\\lvert Pe \\rvert)$$\n\n\n这里，\n- **Pe** 指在眼睛坐标系里的一个点(Point in eye coordinates)\n- **Brightness** 是与点的大小成正比的一个初始值\n- **a**, **b**, **c** 是由`glPointParameterfv()`通过参数`GL_POINT_DISTANCE_ATTENUATION`传入的衰减因子\n\n2. 点的大小(Size)到点的面积和透明度的映射要受一个门限的控制，就是点的面积小于一个门限后，点的Alpha分量(一般是Color的第4个分量，它决定透明度，Alpha等于0，表示完全透明)要随面积的减小而减小。\n\n这个扩展定义的点的最终的Alpha(Pe)分量的计算公式是:\n\n$$\nArea(Pe) = \\begin{cases}\n  Brightness(Pe), & \\text{if } Brightness(Pe) \\geq ThresholdArea \\\\\n  ThresholdArea,  & \\text{otherwise }\n\\end{cases}\n$$\n\n$$Factor(Pe) = Brightness(Pe) / ThresholdArea$$\n\n$$Alpha(Pe) = \\alpha * Factor(Pe)$$\n\n这里，\n- $\\alpha$ 是点的Color(RGBA)的第4个分量\n- **ThresholdArea** 是与`glPointParameterf()`通过参数`GL_POINT_FADE_THRESHOLD_SIZE`传入的值的平方成正比的一个门限值\n\n","source":"_posts/point-parameters.md","raw":"---\ntitle: ARB_point_parameters\ndate: 2020-06-05 13:06:50\ntags: [OGL Extension]\ncategories: [CG]\n---\n\n# 概述(#14)\n\nARB_point_parameters允许用户设置点的扩展几何特征。这些点的几何特征主要用来渲染粒子或微小光源，通常被称为光点(Light Points).\n\n<!--more-->\n\n光栅化后的点的明亮度由多个因素决定: 点的面积(Area), 点的颜色(Color), 点的透明度(Transparency), 以及电子枪和磷光粉之间的反应。而点的面积和点的透明度由点的大小(Size)推导而来，在ARB_point_parameters之前，点的大小`size`这个参数由 `glPointSize`指定。\n\nARB_point_parameters扩展主要实现两个目的:\n\n1. 点的大小(Size)要受距离衰减的影响，就是点的大小要随着点离观察点的距离的增大而减小。\n\n这个扩展定义的点的明亮度的距离衰减公式是:\n\n\n$$Attenuation(d) = \\frac{1}{a + b \\times d + c \\times d^2}$$\n\n$$Brightness(Pe) = Brightness \\times Attenuation(\\lvert Pe \\rvert)$$\n\n\n这里，\n- **Pe** 指在眼睛坐标系里的一个点(Point in eye coordinates)\n- **Brightness** 是与点的大小成正比的一个初始值\n- **a**, **b**, **c** 是由`glPointParameterfv()`通过参数`GL_POINT_DISTANCE_ATTENUATION`传入的衰减因子\n\n2. 点的大小(Size)到点的面积和透明度的映射要受一个门限的控制，就是点的面积小于一个门限后，点的Alpha分量(一般是Color的第4个分量，它决定透明度，Alpha等于0，表示完全透明)要随面积的减小而减小。\n\n这个扩展定义的点的最终的Alpha(Pe)分量的计算公式是:\n\n$$\nArea(Pe) = \\begin{cases}\n  Brightness(Pe), & \\text{if } Brightness(Pe) \\geq ThresholdArea \\\\\n  ThresholdArea,  & \\text{otherwise }\n\\end{cases}\n$$\n\n$$Factor(Pe) = Brightness(Pe) / ThresholdArea$$\n\n$$Alpha(Pe) = \\alpha * Factor(Pe)$$\n\n这里，\n- $\\alpha$ 是点的Color(RGBA)的第4个分量\n- **ThresholdArea** 是与`glPointParameterf()`通过参数`GL_POINT_FADE_THRESHOLD_SIZE`传入的值的平方成正比的一个门限值\n\n","slug":"point-parameters","published":1,"updated":"2020-07-24T08:36:05.595Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqia000ex1ts0i8mh9dp","content":"<h1 id=\"概述-14\"><a href=\"#概述-14\" class=\"headerlink\" title=\"概述(#14)\"></a>概述(#14)</h1><p>ARB_point_parameters允许用户设置点的扩展几何特征。这些点的几何特征主要用来渲染粒子或微小光源，通常被称为光点(Light Points).</p>\n<a id=\"more\"></a>\n<p>光栅化后的点的明亮度由多个因素决定: 点的面积(Area), 点的颜色(Color), 点的透明度(Transparency), 以及电子枪和磷光粉之间的反应。而点的面积和点的透明度由点的大小(Size)推导而来，在ARB_point_parameters之前，点的大小<code>size</code>这个参数由 <code>glPointSize</code>指定。</p>\n<p>ARB_point_parameters扩展主要实现两个目的:</p>\n<ol>\n<li>点的大小(Size)要受距离衰减的影响，就是点的大小要随着点离观察点的距离的增大而减小。</li>\n</ol>\n<p>这个扩展定义的点的明亮度的距离衰减公式是:</p>\n<script type=\"math/tex; mode=display\">Attenuation(d) = \\frac{1}{a + b \\times d + c \\times d^2}</script><script type=\"math/tex; mode=display\">Brightness(Pe) = Brightness \\times Attenuation(\\lvert Pe \\rvert)</script><p>这里，</p>\n<ul>\n<li><strong>Pe</strong> 指在眼睛坐标系里的一个点(Point in eye coordinates)</li>\n<li><strong>Brightness</strong> 是与点的大小成正比的一个初始值</li>\n<li><strong>a</strong>, <strong>b</strong>, <strong>c</strong> 是由<code>glPointParameterfv()</code>通过参数<code>GL_POINT_DISTANCE_ATTENUATION</code>传入的衰减因子</li>\n</ul>\n<ol>\n<li>点的大小(Size)到点的面积和透明度的映射要受一个门限的控制，就是点的面积小于一个门限后，点的Alpha分量(一般是Color的第4个分量，它决定透明度，Alpha等于0，表示完全透明)要随面积的减小而减小。</li>\n</ol>\n<p>这个扩展定义的点的最终的Alpha(Pe)分量的计算公式是:</p>\n<script type=\"math/tex; mode=display\">\nArea(Pe) = \\begin{cases}\n  Brightness(Pe), & \\text{if } Brightness(Pe) \\geq ThresholdArea \\\\\n  ThresholdArea,  & \\text{otherwise }\n\\end{cases}</script><script type=\"math/tex; mode=display\">Factor(Pe) = Brightness(Pe) / ThresholdArea</script><script type=\"math/tex; mode=display\">Alpha(Pe) = \\alpha * Factor(Pe)</script><p>这里，</p>\n<ul>\n<li>$\\alpha$ 是点的Color(RGBA)的第4个分量</li>\n<li><strong>ThresholdArea</strong> 是与<code>glPointParameterf()</code>通过参数<code>GL_POINT_FADE_THRESHOLD_SIZE</code>传入的值的平方成正比的一个门限值</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"概述-14\"><a href=\"#概述-14\" class=\"headerlink\" title=\"概述(#14)\"></a>概述(#14)</h1><p>ARB_point_parameters允许用户设置点的扩展几何特征。这些点的几何特征主要用来渲染粒子或微小光源，通常被称为光点(Light Points).</p>","more":"<p>光栅化后的点的明亮度由多个因素决定: 点的面积(Area), 点的颜色(Color), 点的透明度(Transparency), 以及电子枪和磷光粉之间的反应。而点的面积和点的透明度由点的大小(Size)推导而来，在ARB_point_parameters之前，点的大小<code>size</code>这个参数由 <code>glPointSize</code>指定。</p>\n<p>ARB_point_parameters扩展主要实现两个目的:</p>\n<ol>\n<li>点的大小(Size)要受距离衰减的影响，就是点的大小要随着点离观察点的距离的增大而减小。</li>\n</ol>\n<p>这个扩展定义的点的明亮度的距离衰减公式是:</p>\n<script type=\"math/tex; mode=display\">Attenuation(d) = \\frac{1}{a + b \\times d + c \\times d^2}</script><script type=\"math/tex; mode=display\">Brightness(Pe) = Brightness \\times Attenuation(\\lvert Pe \\rvert)</script><p>这里，</p>\n<ul>\n<li><strong>Pe</strong> 指在眼睛坐标系里的一个点(Point in eye coordinates)</li>\n<li><strong>Brightness</strong> 是与点的大小成正比的一个初始值</li>\n<li><strong>a</strong>, <strong>b</strong>, <strong>c</strong> 是由<code>glPointParameterfv()</code>通过参数<code>GL_POINT_DISTANCE_ATTENUATION</code>传入的衰减因子</li>\n</ul>\n<ol>\n<li>点的大小(Size)到点的面积和透明度的映射要受一个门限的控制，就是点的面积小于一个门限后，点的Alpha分量(一般是Color的第4个分量，它决定透明度，Alpha等于0，表示完全透明)要随面积的减小而减小。</li>\n</ol>\n<p>这个扩展定义的点的最终的Alpha(Pe)分量的计算公式是:</p>\n<script type=\"math/tex; mode=display\">\nArea(Pe) = \\begin{cases}\n  Brightness(Pe), & \\text{if } Brightness(Pe) \\geq ThresholdArea \\\\\n  ThresholdArea,  & \\text{otherwise }\n\\end{cases}</script><script type=\"math/tex; mode=display\">Factor(Pe) = Brightness(Pe) / ThresholdArea</script><script type=\"math/tex; mode=display\">Alpha(Pe) = \\alpha * Factor(Pe)</script><p>这里，</p>\n<ul>\n<li>$\\alpha$ 是点的Color(RGBA)的第4个分量</li>\n<li><strong>ThresholdArea</strong> 是与<code>glPointParameterf()</code>通过参数<code>GL_POINT_FADE_THRESHOLD_SIZE</code>传入的值的平方成正比的一个门限值</li>\n</ul>"},{"title":"regex in vi","date":"2020-02-29T13:58:03.000Z","_content":"## Multiline\nRemove the multilined comment in the separated paragraphs\n\n```c\nstruct gl_vertex_array_object\n{\n   GLuint Name;\n   GLint RefCount;\n   GLchar *Label;       \n   /**\n    * Has this array object been bound?\n    */\n   GLboolean EverBound;\n   /**\n    * Marked to true if the object is shared between contexts and immutable.\n    * Then reference counting is done using atomics and thread safe.\n    * Is used for dlist VAOs.\n    */\n   bool SharedAndImmutable;\n   struct gl_array_attributes VertexAttrib[VERT_ATTRIB_MAX];\n   struct gl_vertex_buffer_binding BufferBinding[VERT_ATTRIB_MAX];\n   GLbitfield VertexAttribBufferMask;\n   GLbitfield Enabled;\n   /**\n    * Mask of VERT_BIT_* enabled arrays past position/generic0 mapping\n    *\n    * The value is valid past calling _mesa_update_vao_derived_arrays.\n    * Note that _mesa_update_vao_derived_arrays is called when binding\n    * the VAO to Array._DrawVAO.\n    */\n   GLbitfield _EffEnabledVBO;\n   gl_attribute_map_mode _AttributeMapMode;\n   GLbitfield NewArrays;\n   struct gl_buffer_object *IndexBufferObj;\n};\n```\n\nEx mode:\n\n```\n:%s;/\\*\\*\\_.\\{-}\\*/;;\n```\n\nwhere `\\{-}` means non-greedy match. See `:help non-greedy`.\n\nA regular expression in vim often includes the following patterns to search text in a single line:\n\n- `.` any character, except a newline\n- `^` the beginning of the line\n- `$` the end of the line\n- `\\s` a space or tab\n\nThe above patterns can be replaced with other patterns that also match the newline character, as follows:\n\n- `\\_.` any character, including a newline\n- `\\_^` the beginning of a line\n- `\\_$` the end of a line\n- `\\_s` a space, tab or newline character\n- `\\n` a newline character\n\n## Empty Lines\nRemove empty lines or lines which only contain whitespaces.\n\n```\n:g/^\\s*$/d\n```\n\n## Case Transform\n\nTo lowercase\n\n```\n:s/^##\\s\\(.\\)/## \\L\\1/\n```\n\nTo uppercase\n\n```\n:s/^##\\s\\(.\\)/## \\U\\1/\n```\n","source":"_posts/regex-in-vi.md","raw":"---\ntitle: regex in vi\ndate: 2020-02-29 21:58:03\ntags: [re, vi]\n---\n## Multiline\nRemove the multilined comment in the separated paragraphs\n\n```c\nstruct gl_vertex_array_object\n{\n   GLuint Name;\n   GLint RefCount;\n   GLchar *Label;       \n   /**\n    * Has this array object been bound?\n    */\n   GLboolean EverBound;\n   /**\n    * Marked to true if the object is shared between contexts and immutable.\n    * Then reference counting is done using atomics and thread safe.\n    * Is used for dlist VAOs.\n    */\n   bool SharedAndImmutable;\n   struct gl_array_attributes VertexAttrib[VERT_ATTRIB_MAX];\n   struct gl_vertex_buffer_binding BufferBinding[VERT_ATTRIB_MAX];\n   GLbitfield VertexAttribBufferMask;\n   GLbitfield Enabled;\n   /**\n    * Mask of VERT_BIT_* enabled arrays past position/generic0 mapping\n    *\n    * The value is valid past calling _mesa_update_vao_derived_arrays.\n    * Note that _mesa_update_vao_derived_arrays is called when binding\n    * the VAO to Array._DrawVAO.\n    */\n   GLbitfield _EffEnabledVBO;\n   gl_attribute_map_mode _AttributeMapMode;\n   GLbitfield NewArrays;\n   struct gl_buffer_object *IndexBufferObj;\n};\n```\n\nEx mode:\n\n```\n:%s;/\\*\\*\\_.\\{-}\\*/;;\n```\n\nwhere `\\{-}` means non-greedy match. See `:help non-greedy`.\n\nA regular expression in vim often includes the following patterns to search text in a single line:\n\n- `.` any character, except a newline\n- `^` the beginning of the line\n- `$` the end of the line\n- `\\s` a space or tab\n\nThe above patterns can be replaced with other patterns that also match the newline character, as follows:\n\n- `\\_.` any character, including a newline\n- `\\_^` the beginning of a line\n- `\\_$` the end of a line\n- `\\_s` a space, tab or newline character\n- `\\n` a newline character\n\n## Empty Lines\nRemove empty lines or lines which only contain whitespaces.\n\n```\n:g/^\\s*$/d\n```\n\n## Case Transform\n\nTo lowercase\n\n```\n:s/^##\\s\\(.\\)/## \\L\\1/\n```\n\nTo uppercase\n\n```\n:s/^##\\s\\(.\\)/## \\U\\1/\n```\n","slug":"regex-in-vi","published":1,"updated":"2020-07-08T02:21:05.806Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqic000hx1tsgtq71a13","content":"<h2 id=\"Multiline\"><a href=\"#Multiline\" class=\"headerlink\" title=\"Multiline\"></a>Multiline</h2><p>Remove the multilined comment in the separated paragraphs</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_vertex_array_object</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">   GLuint Name;</span><br><span class=\"line\">   GLint RefCount;</span><br><span class=\"line\">   GLchar *Label;       </span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * Has this array object been bound?</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   GLboolean EverBound;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * Marked to true if the object is shared between contexts and immutable.</span></span><br><span class=\"line\"><span class=\"comment\">    * Then reference counting is done using atomics and thread safe.</span></span><br><span class=\"line\"><span class=\"comment\">    * Is used for dlist VAOs.</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"keyword\">bool</span> SharedAndImmutable;</span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_array_attributes</span> <span class=\"title\">VertexAttrib</span>[<span class=\"title\">VERT_ATTRIB_MAX</span>];</span></span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_vertex_buffer_binding</span> <span class=\"title\">BufferBinding</span>[<span class=\"title\">VERT_ATTRIB_MAX</span>];</span></span><br><span class=\"line\">   GLbitfield VertexAttribBufferMask;</span><br><span class=\"line\">   GLbitfield Enabled;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * Mask of VERT_BIT_* enabled arrays past position/generic0 mapping</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    * The value is valid past calling _mesa_update_vao_derived_arrays.</span></span><br><span class=\"line\"><span class=\"comment\">    * Note that _mesa_update_vao_derived_arrays is called when binding</span></span><br><span class=\"line\"><span class=\"comment\">    * the VAO to Array._DrawVAO.</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   GLbitfield _EffEnabledVBO;</span><br><span class=\"line\">   gl_attribute_map_mode _AttributeMapMode;</span><br><span class=\"line\">   GLbitfield NewArrays;</span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_buffer_object</span> *<span class=\"title\">IndexBufferObj</span>;</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>Ex mode:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:%s;/\\*\\*\\_.\\&#123;-&#125;\\*/;;</span><br></pre></td></tr></table></figure>\n<p>where <code>\\{-}</code> means non-greedy match. See <code>:help non-greedy</code>.</p>\n<p>A regular expression in vim often includes the following patterns to search text in a single line:</p>\n<ul>\n<li><code>.</code> any character, except a newline</li>\n<li><code>^</code> the beginning of the line</li>\n<li><code>$</code> the end of the line</li>\n<li><code>\\s</code> a space or tab</li>\n</ul>\n<p>The above patterns can be replaced with other patterns that also match the newline character, as follows:</p>\n<ul>\n<li><code>\\_.</code> any character, including a newline</li>\n<li><code>\\_^</code> the beginning of a line</li>\n<li><code>\\_$</code> the end of a line</li>\n<li><code>\\_s</code> a space, tab or newline character</li>\n<li><code>\\n</code> a newline character</li>\n</ul>\n<h2 id=\"Empty-Lines\"><a href=\"#Empty-Lines\" class=\"headerlink\" title=\"Empty Lines\"></a>Empty Lines</h2><p>Remove empty lines or lines which only contain whitespaces.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:g/^\\s*$/d</span><br></pre></td></tr></table></figure>\n<h2 id=\"Case-Transform\"><a href=\"#Case-Transform\" class=\"headerlink\" title=\"Case Transform\"></a>Case Transform</h2><p>To lowercase</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:s/^##\\s\\(.\\)/## \\L\\1/</span><br></pre></td></tr></table></figure>\n<p>To uppercase</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:s/^##\\s\\(.\\)/## \\U\\1/</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Multiline\"><a href=\"#Multiline\" class=\"headerlink\" title=\"Multiline\"></a>Multiline</h2><p>Remove the multilined comment in the separated paragraphs</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_vertex_array_object</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">   GLuint Name;</span><br><span class=\"line\">   GLint RefCount;</span><br><span class=\"line\">   GLchar *Label;       </span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * Has this array object been bound?</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   GLboolean EverBound;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * Marked to true if the object is shared between contexts and immutable.</span></span><br><span class=\"line\"><span class=\"comment\">    * Then reference counting is done using atomics and thread safe.</span></span><br><span class=\"line\"><span class=\"comment\">    * Is used for dlist VAOs.</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"keyword\">bool</span> SharedAndImmutable;</span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_array_attributes</span> <span class=\"title\">VertexAttrib</span>[<span class=\"title\">VERT_ATTRIB_MAX</span>];</span></span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_vertex_buffer_binding</span> <span class=\"title\">BufferBinding</span>[<span class=\"title\">VERT_ATTRIB_MAX</span>];</span></span><br><span class=\"line\">   GLbitfield VertexAttribBufferMask;</span><br><span class=\"line\">   GLbitfield Enabled;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * Mask of VERT_BIT_* enabled arrays past position/generic0 mapping</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    * The value is valid past calling _mesa_update_vao_derived_arrays.</span></span><br><span class=\"line\"><span class=\"comment\">    * Note that _mesa_update_vao_derived_arrays is called when binding</span></span><br><span class=\"line\"><span class=\"comment\">    * the VAO to Array._DrawVAO.</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   GLbitfield _EffEnabledVBO;</span><br><span class=\"line\">   gl_attribute_map_mode _AttributeMapMode;</span><br><span class=\"line\">   GLbitfield NewArrays;</span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_buffer_object</span> *<span class=\"title\">IndexBufferObj</span>;</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>Ex mode:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:%s;/\\*\\*\\_.\\&#123;-&#125;\\*/;;</span><br></pre></td></tr></table></figure>\n<p>where <code>\\{-}</code> means non-greedy match. See <code>:help non-greedy</code>.</p>\n<p>A regular expression in vim often includes the following patterns to search text in a single line:</p>\n<ul>\n<li><code>.</code> any character, except a newline</li>\n<li><code>^</code> the beginning of the line</li>\n<li><code>$</code> the end of the line</li>\n<li><code>\\s</code> a space or tab</li>\n</ul>\n<p>The above patterns can be replaced with other patterns that also match the newline character, as follows:</p>\n<ul>\n<li><code>\\_.</code> any character, including a newline</li>\n<li><code>\\_^</code> the beginning of a line</li>\n<li><code>\\_$</code> the end of a line</li>\n<li><code>\\_s</code> a space, tab or newline character</li>\n<li><code>\\n</code> a newline character</li>\n</ul>\n<h2 id=\"Empty-Lines\"><a href=\"#Empty-Lines\" class=\"headerlink\" title=\"Empty Lines\"></a>Empty Lines</h2><p>Remove empty lines or lines which only contain whitespaces.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:g/^\\s*$/d</span><br></pre></td></tr></table></figure>\n<h2 id=\"Case-Transform\"><a href=\"#Case-Transform\" class=\"headerlink\" title=\"Case Transform\"></a>Case Transform</h2><p>To lowercase</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:s/^##\\s\\(.\\)/## \\L\\1/</span><br></pre></td></tr></table></figure>\n<p>To uppercase</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:s/^##\\s\\(.\\)/## \\U\\1/</span><br></pre></td></tr></table></figure>\n"},{"title":"SFINAE","date":"2020-07-24T09:02:49.000Z","_content":"\n# What is it\n\nSFINAE是Substitution Failure Is Not An Error的缩写，意思是在函数模板或类模板（包括类模板特化）类型推导时，由于类型或值替换导致的Ill-formed code(Subsititution Failure)不被作为一个编译时错误。\n\n<!--more-->\n\n","source":"_posts/sfinae.md","raw":"---\ntitle: SFINAE\ndate: 2020-07-24 17:02:49\ntags: [cpp]\ncategories: [Programming]\n---\n\n# What is it\n\nSFINAE是Substitution Failure Is Not An Error的缩写，意思是在函数模板或类模板（包括类模板特化）类型推导时，由于类型或值替换导致的Ill-formed code(Subsititution Failure)不被作为一个编译时错误。\n\n<!--more-->\n\n","slug":"sfinae","published":1,"updated":"2020-09-03T09:41:24.108Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqid000jx1ts1tiv1dwi","content":"<h1 id=\"What-is-it\"><a href=\"#What-is-it\" class=\"headerlink\" title=\"What is it\"></a>What is it</h1><p>SFINAE是Substitution Failure Is Not An Error的缩写，意思是在函数模板或类模板（包括类模板特化）类型推导时，由于类型或值替换导致的Ill-formed code(Subsititution Failure)不被作为一个编译时错误。</p>\n<a id=\"more\"></a>\n","site":{"data":{}},"excerpt":"<h1 id=\"What-is-it\"><a href=\"#What-is-it\" class=\"headerlink\" title=\"What is it\"></a>What is it</h1><p>SFINAE是Substitution Failure Is Not An Error的缩写，意思是在函数模板或类模板（包括类模板特化）类型推导时，由于类型或值替换导致的Ill-formed code(Subsititution Failure)不被作为一个编译时错误。</p>","more":""},{"title":"ARB_shader_ballot","date":"2020-06-09T04:17:07.000Z","_content":"\n# 概述(#183)\n\nARB_shader_ballot给一组线程(a group of invocations)提供某些形式的线程间(cross-invocation)通信的能力。它要么是通过广播某个线程作用域里的值，要么是通过一个位数组(bitarray)表示一组线程中每个线程作用域里的可能的值。\n\n<!--more-->\n\n","source":"_posts/shader-ballot.md","raw":"---\ntitle: ARB_shader_ballot\ndate: 2020-06-09 12:17:07\ntags: [OGL Extension]\ncategories: [CG]\n---\n\n# 概述(#183)\n\nARB_shader_ballot给一组线程(a group of invocations)提供某些形式的线程间(cross-invocation)通信的能力。它要么是通过广播某个线程作用域里的值，要么是通过一个位数组(bitarray)表示一组线程中每个线程作用域里的可能的值。\n\n<!--more-->\n\n","slug":"shader-ballot","published":1,"updated":"2020-07-24T08:34:06.550Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqie000lx1ts6e6oet6m","content":"<h1 id=\"概述-183\"><a href=\"#概述-183\" class=\"headerlink\" title=\"概述(#183)\"></a>概述(#183)</h1><p>ARB_shader_ballot给一组线程(a group of invocations)提供某些形式的线程间(cross-invocation)通信的能力。它要么是通过广播某个线程作用域里的值，要么是通过一个位数组(bitarray)表示一组线程中每个线程作用域里的可能的值。</p>\n<a id=\"more\"></a>\n","site":{"data":{}},"excerpt":"<h1 id=\"概述-183\"><a href=\"#概述-183\" class=\"headerlink\" title=\"概述(#183)\"></a>概述(#183)</h1><p>ARB_shader_ballot给一组线程(a group of invocations)提供某些形式的线程间(cross-invocation)通信的能力。它要么是通过广播某个线程作用域里的值，要么是通过一个位数组(bitarray)表示一组线程中每个线程作用域里的可能的值。</p>","more":""},{"title":"Smart Pointer","date":"2020-07-04T02:56:25.000Z","_content":"\nsmart pointer是C++11引入的，被包含在C++标准库中。smart pointer是为了管理对象的所属(object ownership)而设计的，smart pointer对象负责自动地销毁所关联对象。常见的smart pointer有:\n\n<!--more-->\n\n- `std::shared_ptr`\n- `std::unique_ptr`\n- `std::weak_ptr`\n\n# `shared_ptr`\n\nshared_ptr主要用在多个对象共享同一个资源的场景(sharing ownership)。它允许当指针指向的对象在任何地方都不再被使用的时候自动销毁所指对象。C++引入它的目的是消除内存泄漏(memory leak)和野指针(dangling pointer). 从实现的角度看，shared_ptr是通过消耗更多的内存来换取程序的健壮性。每个shared_ptr对象的内部都指向两块内存区域:\n\n- Pointer to object\n- Pointer to control data that is used for reference counting\n\n<div align=center>{% asset_img \"shared_ptr.png\" \"shared_ptr memory layout\" %}</div>\n\n通常一个`shared_ptr`对象的内存大小不小于40字节，这是32位平台普通指针变量大小的10倍。`shared_ptr`的destructor和虚成员函数意味着这些成员函数的调用是动态解析的，这就增加了额外的运行时开销。\n\n## creation\n\n- binding a `shared_ptr` object with raw pointer\n\n  `std::shared_ptr<int> p1(new int());`\n\n- using `std::make_shared`\n\n  `std::shared_ptr<int> p1 = std::make_shared<int>();`\n\n## reference counting\n\n`p1.use_count();`\n\n## detachment\n\n- calling `reset()` with no parameter\n\n  `p1.reset();`\n\n  这个调用将`p1`的reference count减1， 如果reference count变成0，则自动删除`p1`关联的raw pointer.\n\n- calling `reset()` with parameter\n\n  `p1.reset(new int(42));`\n\n  这个调用将`p1`关联到一个新的raw pointer, 因此`p1`的reference count还是1.\n\n- using `nullptr`\n\n  `p1 = nullptr;`\n\n## psuedo pointer\n\n  \n\n# `unique_ptr`\n\n`unique_ptr`同样是为了管理对象的所属(unique ownership)，但与`shared_ptr`相反，`unique_ptr`允许在程序的生命周期的任何时候只有一个指针指向对象，所以`unique_ptr`是不可复制的。\n\n# `weak_ptr`\n","source":"_posts/smart-pointer.md","raw":"---\ntitle: Smart Pointer\ndate: 2020-07-04 10:56:25\ntags: [cpp]\ncategories: [Programming]\n---\n\nsmart pointer是C++11引入的，被包含在C++标准库中。smart pointer是为了管理对象的所属(object ownership)而设计的，smart pointer对象负责自动地销毁所关联对象。常见的smart pointer有:\n\n<!--more-->\n\n- `std::shared_ptr`\n- `std::unique_ptr`\n- `std::weak_ptr`\n\n# `shared_ptr`\n\nshared_ptr主要用在多个对象共享同一个资源的场景(sharing ownership)。它允许当指针指向的对象在任何地方都不再被使用的时候自动销毁所指对象。C++引入它的目的是消除内存泄漏(memory leak)和野指针(dangling pointer). 从实现的角度看，shared_ptr是通过消耗更多的内存来换取程序的健壮性。每个shared_ptr对象的内部都指向两块内存区域:\n\n- Pointer to object\n- Pointer to control data that is used for reference counting\n\n<div align=center>{% asset_img \"shared_ptr.png\" \"shared_ptr memory layout\" %}</div>\n\n通常一个`shared_ptr`对象的内存大小不小于40字节，这是32位平台普通指针变量大小的10倍。`shared_ptr`的destructor和虚成员函数意味着这些成员函数的调用是动态解析的，这就增加了额外的运行时开销。\n\n## creation\n\n- binding a `shared_ptr` object with raw pointer\n\n  `std::shared_ptr<int> p1(new int());`\n\n- using `std::make_shared`\n\n  `std::shared_ptr<int> p1 = std::make_shared<int>();`\n\n## reference counting\n\n`p1.use_count();`\n\n## detachment\n\n- calling `reset()` with no parameter\n\n  `p1.reset();`\n\n  这个调用将`p1`的reference count减1， 如果reference count变成0，则自动删除`p1`关联的raw pointer.\n\n- calling `reset()` with parameter\n\n  `p1.reset(new int(42));`\n\n  这个调用将`p1`关联到一个新的raw pointer, 因此`p1`的reference count还是1.\n\n- using `nullptr`\n\n  `p1 = nullptr;`\n\n## psuedo pointer\n\n  \n\n# `unique_ptr`\n\n`unique_ptr`同样是为了管理对象的所属(unique ownership)，但与`shared_ptr`相反，`unique_ptr`允许在程序的生命周期的任何时候只有一个指针指向对象，所以`unique_ptr`是不可复制的。\n\n# `weak_ptr`\n","slug":"smart-pointer","published":1,"updated":"2020-07-24T08:37:39.823Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqif000ox1tsgkgee8ae","content":"<p>smart pointer是C++11引入的，被包含在C++标准库中。smart pointer是为了管理对象的所属(object ownership)而设计的，smart pointer对象负责自动地销毁所关联对象。常见的smart pointer有:</p>\n<a id=\"more\"></a>\n<ul>\n<li><code>std::shared_ptr</code></li>\n<li><code>std::unique_ptr</code></li>\n<li><code>std::weak_ptr</code></li>\n</ul>\n<h1 id=\"shared-ptr\"><a href=\"#shared-ptr\" class=\"headerlink\" title=\"shared_ptr\"></a><code>shared_ptr</code></h1><p>shared_ptr主要用在多个对象共享同一个资源的场景(sharing ownership)。它允许当指针指向的对象在任何地方都不再被使用的时候自动销毁所指对象。C++引入它的目的是消除内存泄漏(memory leak)和野指针(dangling pointer). 从实现的角度看，shared_ptr是通过消耗更多的内存来换取程序的健壮性。每个shared_ptr对象的内部都指向两块内存区域:</p>\n<ul>\n<li>Pointer to object</li>\n<li>Pointer to control data that is used for reference counting</li>\n</ul>\n<div align=center><img src=\"/smart-pointer/shared_ptr.png\" class=\"\" title=\"shared_ptr memory layout\"></div>\n\n<p>通常一个<code>shared_ptr</code>对象的内存大小不小于40字节，这是32位平台普通指针变量大小的10倍。<code>shared_ptr</code>的destructor和虚成员函数意味着这些成员函数的调用是动态解析的，这就增加了额外的运行时开销。</p>\n<h2 id=\"creation\"><a href=\"#creation\" class=\"headerlink\" title=\"creation\"></a>creation</h2><ul>\n<li><p>binding a <code>shared_ptr</code> object with raw pointer</p>\n<p><code>std::shared_ptr&lt;int&gt; p1(new int());</code></p>\n</li>\n<li><p>using <code>std::make_shared</code></p>\n<p><code>std::shared_ptr&lt;int&gt; p1 = std::make_shared&lt;int&gt;();</code></p>\n</li>\n</ul>\n<h2 id=\"reference-counting\"><a href=\"#reference-counting\" class=\"headerlink\" title=\"reference counting\"></a>reference counting</h2><p><code>p1.use_count();</code></p>\n<h2 id=\"detachment\"><a href=\"#detachment\" class=\"headerlink\" title=\"detachment\"></a>detachment</h2><ul>\n<li><p>calling <code>reset()</code> with no parameter</p>\n<p><code>p1.reset();</code></p>\n<p>这个调用将<code>p1</code>的reference count减1， 如果reference count变成0，则自动删除<code>p1</code>关联的raw pointer.</p>\n</li>\n<li><p>calling <code>reset()</code> with parameter</p>\n<p><code>p1.reset(new int(42));</code></p>\n<p>这个调用将<code>p1</code>关联到一个新的raw pointer, 因此<code>p1</code>的reference count还是1.</p>\n</li>\n<li><p>using <code>nullptr</code></p>\n<p><code>p1 = nullptr;</code></p>\n</li>\n</ul>\n<h2 id=\"psuedo-pointer\"><a href=\"#psuedo-pointer\" class=\"headerlink\" title=\"psuedo pointer\"></a>psuedo pointer</h2><h1 id=\"unique-ptr\"><a href=\"#unique-ptr\" class=\"headerlink\" title=\"unique_ptr\"></a><code>unique_ptr</code></h1><p><code>unique_ptr</code>同样是为了管理对象的所属(unique ownership)，但与<code>shared_ptr</code>相反，<code>unique_ptr</code>允许在程序的生命周期的任何时候只有一个指针指向对象，所以<code>unique_ptr</code>是不可复制的。</p>\n<h1 id=\"weak-ptr\"><a href=\"#weak-ptr\" class=\"headerlink\" title=\"weak_ptr\"></a><code>weak_ptr</code></h1>","site":{"data":{}},"excerpt":"<p>smart pointer是C++11引入的，被包含在C++标准库中。smart pointer是为了管理对象的所属(object ownership)而设计的，smart pointer对象负责自动地销毁所关联对象。常见的smart pointer有:</p>","more":"<ul>\n<li><code>std::shared_ptr</code></li>\n<li><code>std::unique_ptr</code></li>\n<li><code>std::weak_ptr</code></li>\n</ul>\n<h1 id=\"shared-ptr\"><a href=\"#shared-ptr\" class=\"headerlink\" title=\"shared_ptr\"></a><code>shared_ptr</code></h1><p>shared_ptr主要用在多个对象共享同一个资源的场景(sharing ownership)。它允许当指针指向的对象在任何地方都不再被使用的时候自动销毁所指对象。C++引入它的目的是消除内存泄漏(memory leak)和野指针(dangling pointer). 从实现的角度看，shared_ptr是通过消耗更多的内存来换取程序的健壮性。每个shared_ptr对象的内部都指向两块内存区域:</p>\n<ul>\n<li>Pointer to object</li>\n<li>Pointer to control data that is used for reference counting</li>\n</ul>\n<div align=center><img src=\"/smart-pointer/shared_ptr.png\" class=\"\" title=\"shared_ptr memory layout\"></div>\n\n<p>通常一个<code>shared_ptr</code>对象的内存大小不小于40字节，这是32位平台普通指针变量大小的10倍。<code>shared_ptr</code>的destructor和虚成员函数意味着这些成员函数的调用是动态解析的，这就增加了额外的运行时开销。</p>\n<h2 id=\"creation\"><a href=\"#creation\" class=\"headerlink\" title=\"creation\"></a>creation</h2><ul>\n<li><p>binding a <code>shared_ptr</code> object with raw pointer</p>\n<p><code>std::shared_ptr&lt;int&gt; p1(new int());</code></p>\n</li>\n<li><p>using <code>std::make_shared</code></p>\n<p><code>std::shared_ptr&lt;int&gt; p1 = std::make_shared&lt;int&gt;();</code></p>\n</li>\n</ul>\n<h2 id=\"reference-counting\"><a href=\"#reference-counting\" class=\"headerlink\" title=\"reference counting\"></a>reference counting</h2><p><code>p1.use_count();</code></p>\n<h2 id=\"detachment\"><a href=\"#detachment\" class=\"headerlink\" title=\"detachment\"></a>detachment</h2><ul>\n<li><p>calling <code>reset()</code> with no parameter</p>\n<p><code>p1.reset();</code></p>\n<p>这个调用将<code>p1</code>的reference count减1， 如果reference count变成0，则自动删除<code>p1</code>关联的raw pointer.</p>\n</li>\n<li><p>calling <code>reset()</code> with parameter</p>\n<p><code>p1.reset(new int(42));</code></p>\n<p>这个调用将<code>p1</code>关联到一个新的raw pointer, 因此<code>p1</code>的reference count还是1.</p>\n</li>\n<li><p>using <code>nullptr</code></p>\n<p><code>p1 = nullptr;</code></p>\n</li>\n</ul>\n<h2 id=\"psuedo-pointer\"><a href=\"#psuedo-pointer\" class=\"headerlink\" title=\"psuedo pointer\"></a>psuedo pointer</h2><h1 id=\"unique-ptr\"><a href=\"#unique-ptr\" class=\"headerlink\" title=\"unique_ptr\"></a><code>unique_ptr</code></h1><p><code>unique_ptr</code>同样是为了管理对象的所属(unique ownership)，但与<code>shared_ptr</code>相反，<code>unique_ptr</code>允许在程序的生命周期的任何时候只有一个指针指向对象，所以<code>unique_ptr</code>是不可复制的。</p>\n<h1 id=\"weak-ptr\"><a href=\"#weak-ptr\" class=\"headerlink\" title=\"weak_ptr\"></a><code>weak_ptr</code></h1>"},{"title":"ARB_sparse_texture","date":"2020-07-23T03:33:59.000Z","_content":"\n# Overview(#158)\n\n复杂的OpenGL应用和对高分辨率的追求使纹理的大小巨增，但是可供一个GPU使用的物理内存是有限的，一旦内存使用殆尽，内存换页就可能发生，性能严重下降，或者更糟，应用直接挂了。但另一方面GPU可访问的地址空间目前已经可以达到GB，甚至TB.\n\n<!--more-->\n\nARB_sparse_texture允许你使用一个比GPU物理内存大得多的纹理(e.g. 16384x16384 32bpp)，它使用一种虚拟页的方法将大的纹理分成多个页， 这些页有的驻留在物理内存，有的没有，只有当需要的时候才加载它们。比方我们根据相机的视角变化，只加载那些在视野范围内可见的pages. 因此sparse texture也叫做tiled texture或mega texture.\n\n{% asset_img \"SparseTextureExample.jpg\" \"sparse texture\" %}\n\n# Restrictions\n\n- 只有Immutable-Format Texture才能作为Sparse Texture\n- 不是所有的internalformat都可以作为Sparse Texture, 具体哪些支持参见[ARB_sparse_texture spec](https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_sparse_texture.txt)\n\n# How to Use\n\n```c\nGLuint page_texture;\n\nglGenTextures(1, &page_texture);\nglBindTexture(GL_TEXTURE_2D, page_texture);\n\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_SPARSE_ARB, GL_TRUE);\nglTexStorage2D(GL_TEXTURE_2D, 15, GL_RGBA32F, 16384, 16384);\n\n// commit a level 0 page.\nglTexPageCommitmentARB(GL_TEXTURE_2D, 0, 0, 0, 0, 64, 64, 0, GL_TRUE);\n// 4KB increase here.\n```\n\n","source":"_posts/sparse-texture.md","raw":"---\ntitle: ARB_sparse_texture\ndate: 2020-07-23 11:33:59\ntags: [OGL Extension]\ncategories: [CG]\n---\n\n# Overview(#158)\n\n复杂的OpenGL应用和对高分辨率的追求使纹理的大小巨增，但是可供一个GPU使用的物理内存是有限的，一旦内存使用殆尽，内存换页就可能发生，性能严重下降，或者更糟，应用直接挂了。但另一方面GPU可访问的地址空间目前已经可以达到GB，甚至TB.\n\n<!--more-->\n\nARB_sparse_texture允许你使用一个比GPU物理内存大得多的纹理(e.g. 16384x16384 32bpp)，它使用一种虚拟页的方法将大的纹理分成多个页， 这些页有的驻留在物理内存，有的没有，只有当需要的时候才加载它们。比方我们根据相机的视角变化，只加载那些在视野范围内可见的pages. 因此sparse texture也叫做tiled texture或mega texture.\n\n{% asset_img \"SparseTextureExample.jpg\" \"sparse texture\" %}\n\n# Restrictions\n\n- 只有Immutable-Format Texture才能作为Sparse Texture\n- 不是所有的internalformat都可以作为Sparse Texture, 具体哪些支持参见[ARB_sparse_texture spec](https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_sparse_texture.txt)\n\n# How to Use\n\n```c\nGLuint page_texture;\n\nglGenTextures(1, &page_texture);\nglBindTexture(GL_TEXTURE_2D, page_texture);\n\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_SPARSE_ARB, GL_TRUE);\nglTexStorage2D(GL_TEXTURE_2D, 15, GL_RGBA32F, 16384, 16384);\n\n// commit a level 0 page.\nglTexPageCommitmentARB(GL_TEXTURE_2D, 0, 0, 0, 0, 64, 64, 0, GL_TRUE);\n// 4KB increase here.\n```\n\n","slug":"sparse-texture","published":1,"updated":"2020-07-24T08:33:45.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqig000qx1ts8o2q9is4","content":"<h1 id=\"Overview-158\"><a href=\"#Overview-158\" class=\"headerlink\" title=\"Overview(#158)\"></a>Overview(#158)</h1><p>复杂的OpenGL应用和对高分辨率的追求使纹理的大小巨增，但是可供一个GPU使用的物理内存是有限的，一旦内存使用殆尽，内存换页就可能发生，性能严重下降，或者更糟，应用直接挂了。但另一方面GPU可访问的地址空间目前已经可以达到GB，甚至TB.</p>\n<a id=\"more\"></a>\n<p>ARB_sparse_texture允许你使用一个比GPU物理内存大得多的纹理(e.g. 16384x16384 32bpp)，它使用一种虚拟页的方法将大的纹理分成多个页， 这些页有的驻留在物理内存，有的没有，只有当需要的时候才加载它们。比方我们根据相机的视角变化，只加载那些在视野范围内可见的pages. 因此sparse texture也叫做tiled texture或mega texture.</p>\n<img src=\"/sparse-texture/SparseTextureExample.jpg\" class=\"\" title=\"sparse texture\">\n<h1 id=\"Restrictions\"><a href=\"#Restrictions\" class=\"headerlink\" title=\"Restrictions\"></a>Restrictions</h1><ul>\n<li>只有Immutable-Format Texture才能作为Sparse Texture</li>\n<li>不是所有的internalformat都可以作为Sparse Texture, 具体哪些支持参见<a href=\"https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_sparse_texture.txt\" target=\"_blank\" rel=\"noopener\">ARB_sparse_texture spec</a></li>\n</ul>\n<h1 id=\"How-to-Use\"><a href=\"#How-to-Use\" class=\"headerlink\" title=\"How to Use\"></a>How to Use</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GLuint page_texture;</span><br><span class=\"line\"></span><br><span class=\"line\">glGenTextures(<span class=\"number\">1</span>, &amp;page_texture);</span><br><span class=\"line\">glBindTexture(GL_TEXTURE_2D, page_texture);</span><br><span class=\"line\"></span><br><span class=\"line\">glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_SPARSE_ARB, GL_TRUE);</span><br><span class=\"line\">glTexStorage2D(GL_TEXTURE_2D, <span class=\"number\">15</span>, GL_RGBA32F, <span class=\"number\">16384</span>, <span class=\"number\">16384</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// commit a level 0 page.</span></span><br><span class=\"line\">glTexPageCommitmentARB(GL_TEXTURE_2D, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">64</span>, <span class=\"number\">64</span>, <span class=\"number\">0</span>, GL_TRUE);</span><br><span class=\"line\"><span class=\"comment\">// 4KB increase here.</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"Overview-158\"><a href=\"#Overview-158\" class=\"headerlink\" title=\"Overview(#158)\"></a>Overview(#158)</h1><p>复杂的OpenGL应用和对高分辨率的追求使纹理的大小巨增，但是可供一个GPU使用的物理内存是有限的，一旦内存使用殆尽，内存换页就可能发生，性能严重下降，或者更糟，应用直接挂了。但另一方面GPU可访问的地址空间目前已经可以达到GB，甚至TB.</p>","more":"<p>ARB_sparse_texture允许你使用一个比GPU物理内存大得多的纹理(e.g. 16384x16384 32bpp)，它使用一种虚拟页的方法将大的纹理分成多个页， 这些页有的驻留在物理内存，有的没有，只有当需要的时候才加载它们。比方我们根据相机的视角变化，只加载那些在视野范围内可见的pages. 因此sparse texture也叫做tiled texture或mega texture.</p>\n<img src=\"/sparse-texture/SparseTextureExample.jpg\" class=\"\" title=\"sparse texture\">\n<h1 id=\"Restrictions\"><a href=\"#Restrictions\" class=\"headerlink\" title=\"Restrictions\"></a>Restrictions</h1><ul>\n<li>只有Immutable-Format Texture才能作为Sparse Texture</li>\n<li>不是所有的internalformat都可以作为Sparse Texture, 具体哪些支持参见<a href=\"https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_sparse_texture.txt\" target=\"_blank\" rel=\"noopener\">ARB_sparse_texture spec</a></li>\n</ul>\n<h1 id=\"How-to-Use\"><a href=\"#How-to-Use\" class=\"headerlink\" title=\"How to Use\"></a>How to Use</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GLuint page_texture;</span><br><span class=\"line\"></span><br><span class=\"line\">glGenTextures(<span class=\"number\">1</span>, &amp;page_texture);</span><br><span class=\"line\">glBindTexture(GL_TEXTURE_2D, page_texture);</span><br><span class=\"line\"></span><br><span class=\"line\">glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_SPARSE_ARB, GL_TRUE);</span><br><span class=\"line\">glTexStorage2D(GL_TEXTURE_2D, <span class=\"number\">15</span>, GL_RGBA32F, <span class=\"number\">16384</span>, <span class=\"number\">16384</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// commit a level 0 page.</span></span><br><span class=\"line\">glTexPageCommitmentARB(GL_TEXTURE_2D, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">64</span>, <span class=\"number\">64</span>, <span class=\"number\">0</span>, GL_TRUE);</span><br><span class=\"line\"><span class=\"comment\">// 4KB increase here.</span></span><br></pre></td></tr></table></figure>"},{"title":"ARB_texture_storage","date":"2020-07-02T07:47:02.000Z","_content":"\n# Overview(#117)\n\nARB_texture_storage的主要目的是简化纹理一致性(consistency)和完整性(completeness)检查，以减小实现的开销。\n\n<!--more-->\n\n在ARB_texture_storage之前，OpenGL允许给每个Mipmap级别分别指定不同的大小，像素格式(format), 数据类型(type)等等，把纹理一致性检查放在draw time阶段，这给实现增加了开销。\n\n而ARB_texture_storage可以一次性(in a single call)指定纹理的整个结构，把一致性检查和内存申请提前。一旦指定，这个纹理的像素格式和维度都不可再变(Immutable)，这样就简化了纹理完整性检查的实现。\n\n使用ARB_texture_storage, 就不能再用`TexImage*`上传纹理数据了(mutable), 而是用`TexSubImage*`(immutable)。或是用其它方式动态生成纹理数据(immutable), 比如*render-to-texture, mipmap generation, rendering to a sibling EGLImage*.\n\n# Immutable-Format Texture Images\n\nImmutable-Format Texture与ARB_texture_storage有直接的关系。所谓Immutable-Format Texture，就是有一组GL命令，他们可以一次性设定纹理所有level的属性，一旦调用成功，所有level的format和dimensions都不能再改变，除非它是一个代理纹理。然而它的内容和纹理parameters仍然可以修改，这样的纹理就是Immutable-Format Texture.\n\n## A set of commands for immutable-format texture\n\n- glTexStorage1D\n- glTexStorage2D\n- glTexStorage3D\n- glTexStorage2DMultisample\n- glTexStorage3DMultisample\n\n","source":"_posts/texture-storage.md","raw":"---\ntitle: ARB_texture_storage\ndate: 2020-07-02 15:47:02\ntags: [OGL Extension]\ncategories: [CG]\n---\n\n# Overview(#117)\n\nARB_texture_storage的主要目的是简化纹理一致性(consistency)和完整性(completeness)检查，以减小实现的开销。\n\n<!--more-->\n\n在ARB_texture_storage之前，OpenGL允许给每个Mipmap级别分别指定不同的大小，像素格式(format), 数据类型(type)等等，把纹理一致性检查放在draw time阶段，这给实现增加了开销。\n\n而ARB_texture_storage可以一次性(in a single call)指定纹理的整个结构，把一致性检查和内存申请提前。一旦指定，这个纹理的像素格式和维度都不可再变(Immutable)，这样就简化了纹理完整性检查的实现。\n\n使用ARB_texture_storage, 就不能再用`TexImage*`上传纹理数据了(mutable), 而是用`TexSubImage*`(immutable)。或是用其它方式动态生成纹理数据(immutable), 比如*render-to-texture, mipmap generation, rendering to a sibling EGLImage*.\n\n# Immutable-Format Texture Images\n\nImmutable-Format Texture与ARB_texture_storage有直接的关系。所谓Immutable-Format Texture，就是有一组GL命令，他们可以一次性设定纹理所有level的属性，一旦调用成功，所有level的format和dimensions都不能再改变，除非它是一个代理纹理。然而它的内容和纹理parameters仍然可以修改，这样的纹理就是Immutable-Format Texture.\n\n## A set of commands for immutable-format texture\n\n- glTexStorage1D\n- glTexStorage2D\n- glTexStorage3D\n- glTexStorage2DMultisample\n- glTexStorage3DMultisample\n\n","slug":"texture-storage","published":1,"updated":"2020-07-24T08:33:36.830Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqii000ux1tsgcm02jpl","content":"<h1 id=\"Overview-117\"><a href=\"#Overview-117\" class=\"headerlink\" title=\"Overview(#117)\"></a>Overview(#117)</h1><p>ARB_texture_storage的主要目的是简化纹理一致性(consistency)和完整性(completeness)检查，以减小实现的开销。</p>\n<a id=\"more\"></a>\n<p>在ARB_texture_storage之前，OpenGL允许给每个Mipmap级别分别指定不同的大小，像素格式(format), 数据类型(type)等等，把纹理一致性检查放在draw time阶段，这给实现增加了开销。</p>\n<p>而ARB_texture_storage可以一次性(in a single call)指定纹理的整个结构，把一致性检查和内存申请提前。一旦指定，这个纹理的像素格式和维度都不可再变(Immutable)，这样就简化了纹理完整性检查的实现。</p>\n<p>使用ARB_texture_storage, 就不能再用<code>TexImage*</code>上传纹理数据了(mutable), 而是用<code>TexSubImage*</code>(immutable)。或是用其它方式动态生成纹理数据(immutable), 比如<em>render-to-texture, mipmap generation, rendering to a sibling EGLImage</em>.</p>\n<h1 id=\"Immutable-Format-Texture-Images\"><a href=\"#Immutable-Format-Texture-Images\" class=\"headerlink\" title=\"Immutable-Format Texture Images\"></a>Immutable-Format Texture Images</h1><p>Immutable-Format Texture与ARB_texture_storage有直接的关系。所谓Immutable-Format Texture，就是有一组GL命令，他们可以一次性设定纹理所有level的属性，一旦调用成功，所有level的format和dimensions都不能再改变，除非它是一个代理纹理。然而它的内容和纹理parameters仍然可以修改，这样的纹理就是Immutable-Format Texture.</p>\n<h2 id=\"A-set-of-commands-for-immutable-format-texture\"><a href=\"#A-set-of-commands-for-immutable-format-texture\" class=\"headerlink\" title=\"A set of commands for immutable-format texture\"></a>A set of commands for immutable-format texture</h2><ul>\n<li>glTexStorage1D</li>\n<li>glTexStorage2D</li>\n<li>glTexStorage3D</li>\n<li>glTexStorage2DMultisample</li>\n<li>glTexStorage3DMultisample</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"Overview-117\"><a href=\"#Overview-117\" class=\"headerlink\" title=\"Overview(#117)\"></a>Overview(#117)</h1><p>ARB_texture_storage的主要目的是简化纹理一致性(consistency)和完整性(completeness)检查，以减小实现的开销。</p>","more":"<p>在ARB_texture_storage之前，OpenGL允许给每个Mipmap级别分别指定不同的大小，像素格式(format), 数据类型(type)等等，把纹理一致性检查放在draw time阶段，这给实现增加了开销。</p>\n<p>而ARB_texture_storage可以一次性(in a single call)指定纹理的整个结构，把一致性检查和内存申请提前。一旦指定，这个纹理的像素格式和维度都不可再变(Immutable)，这样就简化了纹理完整性检查的实现。</p>\n<p>使用ARB_texture_storage, 就不能再用<code>TexImage*</code>上传纹理数据了(mutable), 而是用<code>TexSubImage*</code>(immutable)。或是用其它方式动态生成纹理数据(immutable), 比如<em>render-to-texture, mipmap generation, rendering to a sibling EGLImage</em>.</p>\n<h1 id=\"Immutable-Format-Texture-Images\"><a href=\"#Immutable-Format-Texture-Images\" class=\"headerlink\" title=\"Immutable-Format Texture Images\"></a>Immutable-Format Texture Images</h1><p>Immutable-Format Texture与ARB_texture_storage有直接的关系。所谓Immutable-Format Texture，就是有一组GL命令，他们可以一次性设定纹理所有level的属性，一旦调用成功，所有level的format和dimensions都不能再改变，除非它是一个代理纹理。然而它的内容和纹理parameters仍然可以修改，这样的纹理就是Immutable-Format Texture.</p>\n<h2 id=\"A-set-of-commands-for-immutable-format-texture\"><a href=\"#A-set-of-commands-for-immutable-format-texture\" class=\"headerlink\" title=\"A set of commands for immutable-format texture\"></a>A set of commands for immutable-format texture</h2><ul>\n<li>glTexStorage1D</li>\n<li>glTexStorage2D</li>\n<li>glTexStorage3D</li>\n<li>glTexStorage2DMultisample</li>\n<li>glTexStorage3DMultisample</li>\n</ul>"},{"title":"ARB_texture_swizzle","date":"2020-06-30T07:52:24.000Z","_content":"\n# 概述(#84)\n传统的OpenGL纹理格式(texture format)的纹理数据存储和解释是统一的，纹理就是被解释成颜色。而在现代OpenGL应用中，大多数纹理并不是代表颜色，而是代表像shadow maps, normal maps, page tables, occlusion data等等这样的数据。对于后者，我们将纹理数据称作\"RGBA\"，只是对数据在现有模型上的一种方便的映射，但并不是数据实际上的准确解释。\n\n<!--more-->\n\n已有的纹理格式几乎是纹理数据的类型，分量的个数，分量的位数的集合的正交组合，但是对于着色器或固定管线所读取的数据如何解解并不那么正交。之前的扩展也增加了一些最迫切要求的纹理格式，但问题没有被完全解决。\n\nARB_texture_swizzle提供了一种被使用之前或者被着色器读取之前，重排一个纹理像素的分量的机制。比方说可以设置让shader读取纹理数据时只取Red分量。\n","source":"_posts/texture-swizzle.md","raw":"---\ntitle: ARB_texture_swizzle\ndate: 2020-06-30 15:52:24\ntags: [OGL Extension]\ncategories: [CG]\n---\n\n# 概述(#84)\n传统的OpenGL纹理格式(texture format)的纹理数据存储和解释是统一的，纹理就是被解释成颜色。而在现代OpenGL应用中，大多数纹理并不是代表颜色，而是代表像shadow maps, normal maps, page tables, occlusion data等等这样的数据。对于后者，我们将纹理数据称作\"RGBA\"，只是对数据在现有模型上的一种方便的映射，但并不是数据实际上的准确解释。\n\n<!--more-->\n\n已有的纹理格式几乎是纹理数据的类型，分量的个数，分量的位数的集合的正交组合，但是对于着色器或固定管线所读取的数据如何解解并不那么正交。之前的扩展也增加了一些最迫切要求的纹理格式，但问题没有被完全解决。\n\nARB_texture_swizzle提供了一种被使用之前或者被着色器读取之前，重排一个纹理像素的分量的机制。比方说可以设置让shader读取纹理数据时只取Red分量。\n","slug":"texture-swizzle","published":1,"updated":"2020-07-24T06:51:23.896Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqij000xx1tsgi5r4aln","content":"<h1 id=\"概述-84\"><a href=\"#概述-84\" class=\"headerlink\" title=\"概述(#84)\"></a>概述(#84)</h1><p>传统的OpenGL纹理格式(texture format)的纹理数据存储和解释是统一的，纹理就是被解释成颜色。而在现代OpenGL应用中，大多数纹理并不是代表颜色，而是代表像shadow maps, normal maps, page tables, occlusion data等等这样的数据。对于后者，我们将纹理数据称作”RGBA”，只是对数据在现有模型上的一种方便的映射，但并不是数据实际上的准确解释。</p>\n<a id=\"more\"></a>\n<p>已有的纹理格式几乎是纹理数据的类型，分量的个数，分量的位数的集合的正交组合，但是对于着色器或固定管线所读取的数据如何解解并不那么正交。之前的扩展也增加了一些最迫切要求的纹理格式，但问题没有被完全解决。</p>\n<p>ARB_texture_swizzle提供了一种被使用之前或者被着色器读取之前，重排一个纹理像素的分量的机制。比方说可以设置让shader读取纹理数据时只取Red分量。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"概述-84\"><a href=\"#概述-84\" class=\"headerlink\" title=\"概述(#84)\"></a>概述(#84)</h1><p>传统的OpenGL纹理格式(texture format)的纹理数据存储和解释是统一的，纹理就是被解释成颜色。而在现代OpenGL应用中，大多数纹理并不是代表颜色，而是代表像shadow maps, normal maps, page tables, occlusion data等等这样的数据。对于后者，我们将纹理数据称作”RGBA”，只是对数据在现有模型上的一种方便的映射，但并不是数据实际上的准确解释。</p>","more":"<p>已有的纹理格式几乎是纹理数据的类型，分量的个数，分量的位数的集合的正交组合，但是对于着色器或固定管线所读取的数据如何解解并不那么正交。之前的扩展也增加了一些最迫切要求的纹理格式，但问题没有被完全解决。</p>\n<p>ARB_texture_swizzle提供了一种被使用之前或者被着色器读取之前，重排一个纹理像素的分量的机制。比方说可以设置让shader读取纹理数据时只取Red分量。</p>"},{"title":"ARB_texture_view","date":"2020-06-09T04:17:07.000Z","_content":"\n# 概述(#124)\n\nARB_texture_view的主要目的是通过创建已有纹理对象的视图(view), 来产生新的纹理对象，以达到共享同一纹理存储(data store)的目的。它可以从以下3个方面创建纹理视图：\n\n<!--more-->\n\n- texture type 它可以指定一个新的纹理类型(在约束范围内)来创建新的纹理对象\n- internal format 它可以定义一个新的纹理格式(在约束范围内)来解释已有的data store\n- sub mipmap/array range 它可以从已有纹理的mipmap levels或array slices中截取一个子集作为新的纹理对象\n\nNOTE: 上述最后一种方式只指定新的范围(level/index)，而不进行data store拷贝。\n\n\n\n没有增加新的纹理类型，原来的纹理对象被划分为以下几个部分:\n- 数据存储(Data Store)\n- 状态信息，用来描述Data Store的哪一部分被使用，如何解释所用的数据元素\n- 嵌入的采样器对象(Sampler)\n- 各种其它纹理参数，像Filter, Mipmap等\n\n# 原则\nARB_texture_view规定的关于创建Texture View的几个原则(限制)主要有以下3个:\n- 只能给Immutable纹理创建View,也就是那些由TexStorage创建的纹理\n- 原纹理和新纹理的格式要兼容\n- 原纹理和新纹理的类型要兼容\n\n## 为什么只给Immutable纹理类型创建Texture View\n\nTexture View本质上并没有上传纹理data store, 而是像指针一样，增加了对已有纹理对象的引用。如果是Mutable纹理，那么它的格式，大小等都是可以修改的，这样就无法保证纹理的consistency和completeness. 而Immutable纹理不会存在这样的问题。","source":"_posts/texture-view.md","raw":"---\ntitle: ARB_texture_view\ndate: 2020-06-09 12:17:07\ntags: [OGL Extension]\ncategories: [CG]\n---\n\n# 概述(#124)\n\nARB_texture_view的主要目的是通过创建已有纹理对象的视图(view), 来产生新的纹理对象，以达到共享同一纹理存储(data store)的目的。它可以从以下3个方面创建纹理视图：\n\n<!--more-->\n\n- texture type 它可以指定一个新的纹理类型(在约束范围内)来创建新的纹理对象\n- internal format 它可以定义一个新的纹理格式(在约束范围内)来解释已有的data store\n- sub mipmap/array range 它可以从已有纹理的mipmap levels或array slices中截取一个子集作为新的纹理对象\n\nNOTE: 上述最后一种方式只指定新的范围(level/index)，而不进行data store拷贝。\n\n\n\n没有增加新的纹理类型，原来的纹理对象被划分为以下几个部分:\n- 数据存储(Data Store)\n- 状态信息，用来描述Data Store的哪一部分被使用，如何解释所用的数据元素\n- 嵌入的采样器对象(Sampler)\n- 各种其它纹理参数，像Filter, Mipmap等\n\n# 原则\nARB_texture_view规定的关于创建Texture View的几个原则(限制)主要有以下3个:\n- 只能给Immutable纹理创建View,也就是那些由TexStorage创建的纹理\n- 原纹理和新纹理的格式要兼容\n- 原纹理和新纹理的类型要兼容\n\n## 为什么只给Immutable纹理类型创建Texture View\n\nTexture View本质上并没有上传纹理data store, 而是像指针一样，增加了对已有纹理对象的引用。如果是Mutable纹理，那么它的格式，大小等都是可以修改的，这样就无法保证纹理的consistency和completeness. 而Immutable纹理不会存在这样的问题。","slug":"texture-view","published":1,"updated":"2020-07-24T08:33:30.438Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqik000zx1ts8ez4dnnv","content":"<h1 id=\"概述-124\"><a href=\"#概述-124\" class=\"headerlink\" title=\"概述(#124)\"></a>概述(#124)</h1><p>ARB_texture_view的主要目的是通过创建已有纹理对象的视图(view), 来产生新的纹理对象，以达到共享同一纹理存储(data store)的目的。它可以从以下3个方面创建纹理视图：</p>\n<a id=\"more\"></a>\n<ul>\n<li>texture type 它可以指定一个新的纹理类型(在约束范围内)来创建新的纹理对象</li>\n<li>internal format 它可以定义一个新的纹理格式(在约束范围内)来解释已有的data store</li>\n<li>sub mipmap/array range 它可以从已有纹理的mipmap levels或array slices中截取一个子集作为新的纹理对象</li>\n</ul>\n<p>NOTE: 上述最后一种方式只指定新的范围(level/index)，而不进行data store拷贝。</p>\n<p>没有增加新的纹理类型，原来的纹理对象被划分为以下几个部分:</p>\n<ul>\n<li>数据存储(Data Store)</li>\n<li>状态信息，用来描述Data Store的哪一部分被使用，如何解释所用的数据元素</li>\n<li>嵌入的采样器对象(Sampler)</li>\n<li>各种其它纹理参数，像Filter, Mipmap等</li>\n</ul>\n<h1 id=\"原则\"><a href=\"#原则\" class=\"headerlink\" title=\"原则\"></a>原则</h1><p>ARB_texture_view规定的关于创建Texture View的几个原则(限制)主要有以下3个:</p>\n<ul>\n<li>只能给Immutable纹理创建View,也就是那些由TexStorage创建的纹理</li>\n<li>原纹理和新纹理的格式要兼容</li>\n<li>原纹理和新纹理的类型要兼容</li>\n</ul>\n<h2 id=\"为什么只给Immutable纹理类型创建Texture-View\"><a href=\"#为什么只给Immutable纹理类型创建Texture-View\" class=\"headerlink\" title=\"为什么只给Immutable纹理类型创建Texture View\"></a>为什么只给Immutable纹理类型创建Texture View</h2><p>Texture View本质上并没有上传纹理data store, 而是像指针一样，增加了对已有纹理对象的引用。如果是Mutable纹理，那么它的格式，大小等都是可以修改的，这样就无法保证纹理的consistency和completeness. 而Immutable纹理不会存在这样的问题。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"概述-124\"><a href=\"#概述-124\" class=\"headerlink\" title=\"概述(#124)\"></a>概述(#124)</h1><p>ARB_texture_view的主要目的是通过创建已有纹理对象的视图(view), 来产生新的纹理对象，以达到共享同一纹理存储(data store)的目的。它可以从以下3个方面创建纹理视图：</p>","more":"<ul>\n<li>texture type 它可以指定一个新的纹理类型(在约束范围内)来创建新的纹理对象</li>\n<li>internal format 它可以定义一个新的纹理格式(在约束范围内)来解释已有的data store</li>\n<li>sub mipmap/array range 它可以从已有纹理的mipmap levels或array slices中截取一个子集作为新的纹理对象</li>\n</ul>\n<p>NOTE: 上述最后一种方式只指定新的范围(level/index)，而不进行data store拷贝。</p>\n<p>没有增加新的纹理类型，原来的纹理对象被划分为以下几个部分:</p>\n<ul>\n<li>数据存储(Data Store)</li>\n<li>状态信息，用来描述Data Store的哪一部分被使用，如何解释所用的数据元素</li>\n<li>嵌入的采样器对象(Sampler)</li>\n<li>各种其它纹理参数，像Filter, Mipmap等</li>\n</ul>\n<h1 id=\"原则\"><a href=\"#原则\" class=\"headerlink\" title=\"原则\"></a>原则</h1><p>ARB_texture_view规定的关于创建Texture View的几个原则(限制)主要有以下3个:</p>\n<ul>\n<li>只能给Immutable纹理创建View,也就是那些由TexStorage创建的纹理</li>\n<li>原纹理和新纹理的格式要兼容</li>\n<li>原纹理和新纹理的类型要兼容</li>\n</ul>\n<h2 id=\"为什么只给Immutable纹理类型创建Texture-View\"><a href=\"#为什么只给Immutable纹理类型创建Texture-View\" class=\"headerlink\" title=\"为什么只给Immutable纹理类型创建Texture View\"></a>为什么只给Immutable纹理类型创建Texture View</h2><p>Texture View本质上并没有上传纹理data store, 而是像指针一样，增加了对已有纹理对象的引用。如果是Mutable纹理，那么它的格式，大小等都是可以修改的，这样就无法保证纹理的consistency和completeness. 而Immutable纹理不会存在这样的问题。</p>"},{"title":"Windows Insider Program","date":"2020-02-08T09:57:46.000Z","_content":"\nThe story begins with debugging an OpenGL demo on the WSL with the Mesa libraries compiled by myself. Every time the executable will crash when it stops at the breakpoint and steps into the function. The gdb outputs as follows:\n``` bash\nThread 1 \"osdemo\" hit Breakpoint 1, OSMesaMakeCurrent (osmesa=0x8056bf0, buffer=0x7ffff85f0010, type=5121, width=400, height=400)\n    at ../src/gallium/state_trackers/osmesa/osmesa.c:763\n763     {\n(gdb) n\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\n\nThread 13 \"osdemo\" received signal SIGABRT, Aborted.\n[Switching to Thread 0x7fffe0f90700 (LWP 4073)]\n__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50\n50      ../sysdeps/unix/sysv/linux/raise.c: No such file or directory.\n(gdb) bt\n#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50\n#1  0x00007ffffb485899 in __GI_abort () at abort.c:79\n#2  0x00007ffffb4f009f in __libc_message (action=(do_abort | do_backtrace), fmt=0x7ffffb618fbe \"%s\", fmt=0x7ffffb618fbe \"%s\",\n    action=(do_abort | do_backtrace)) at ../sysdeps/posix/libc_fatal.c:181\n#3  0x00007ffffb4f0440 in __GI___libc_fatal (message=message@entry=0x7ffffb405000 \"The futex facility returned an unexpected error code.\\n\")\n    at ../sysdeps/posix/libc_fatal.c:191\n#4  0x00007ffffb3fd34a in futex_fatal_error () at ../sysdeps/nptl/futex-internal.h:200\n#5  futex_wake (private=<optimized out>, processes_to_wake=<optimized out>, futex_word=<optimized out>) at ../sysdeps/unix/sysv/linux/futex-internal.h:251\n#6  __condvar_confirm_wakeup (private=<optimized out>, cond=<optimized out>) at pthread_cond_wait.c:55\n#7  __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x806fad0, cond=0x806faf8) at pthread_cond_wait.c:425\n#8  __pthread_cond_wait (cond=0x806faf8, mutex=0x806fad0) at pthread_cond_wait.c:638\n#9  0x00007ffffc0be0cb in cnd_wait (mtx=0x806fad0, cond=0x806faf8) at ../include/c11/threads_posix.h:155\n#10 lp_cs_tpool_worker (data=data@entry=0x806fad0) at ../src/gallium/drivers/llvmpipe/lp_cs_tpool.c:48\n#11 0x00007ffffc0bdeab in impl_thrd_routine (p=<optimized out>) at ../include/c11/threads_posix.h:87\n#12 0x00007ffffb3f6669 in start_thread (arg=<optimized out>) at pthread_create.c:479\n#13 0x00007ffffb582323 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\n```\nI did not consider this crash as a WSL bug until I found this [issue](https://github.com/Microsoft/WSL/issues/3618) on the github. Then I realized that I had to update my WSL that is updated as the Windows is updated. The easy way to get the latest Windows build version is to register the [Windows Insider Program](https://insider.windows.com/zh-cn/) that only requires\n\n- Windows 10\n- Microsoft Account\n\nOnce you register successfully, you can check the Windows Updates for the latest Windows build.\n\n{% asset_img windows_update.png windows-updates %}\n","source":"_posts/windows-insider-program.md","raw":"---\ntitle: Windows Insider Program\ndate: 2020-02-08 17:57:46\ntags: [WSL, OpenGL]\n---\n\nThe story begins with debugging an OpenGL demo on the WSL with the Mesa libraries compiled by myself. Every time the executable will crash when it stops at the breakpoint and steps into the function. The gdb outputs as follows:\n``` bash\nThread 1 \"osdemo\" hit Breakpoint 1, OSMesaMakeCurrent (osmesa=0x8056bf0, buffer=0x7ffff85f0010, type=5121, width=400, height=400)\n    at ../src/gallium/state_trackers/osmesa/osmesa.c:763\n763     {\n(gdb) n\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\nThe futex facility returned an unexpected error code.\n\nThread 13 \"osdemo\" received signal SIGABRT, Aborted.\n[Switching to Thread 0x7fffe0f90700 (LWP 4073)]\n__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50\n50      ../sysdeps/unix/sysv/linux/raise.c: No such file or directory.\n(gdb) bt\n#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50\n#1  0x00007ffffb485899 in __GI_abort () at abort.c:79\n#2  0x00007ffffb4f009f in __libc_message (action=(do_abort | do_backtrace), fmt=0x7ffffb618fbe \"%s\", fmt=0x7ffffb618fbe \"%s\",\n    action=(do_abort | do_backtrace)) at ../sysdeps/posix/libc_fatal.c:181\n#3  0x00007ffffb4f0440 in __GI___libc_fatal (message=message@entry=0x7ffffb405000 \"The futex facility returned an unexpected error code.\\n\")\n    at ../sysdeps/posix/libc_fatal.c:191\n#4  0x00007ffffb3fd34a in futex_fatal_error () at ../sysdeps/nptl/futex-internal.h:200\n#5  futex_wake (private=<optimized out>, processes_to_wake=<optimized out>, futex_word=<optimized out>) at ../sysdeps/unix/sysv/linux/futex-internal.h:251\n#6  __condvar_confirm_wakeup (private=<optimized out>, cond=<optimized out>) at pthread_cond_wait.c:55\n#7  __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x806fad0, cond=0x806faf8) at pthread_cond_wait.c:425\n#8  __pthread_cond_wait (cond=0x806faf8, mutex=0x806fad0) at pthread_cond_wait.c:638\n#9  0x00007ffffc0be0cb in cnd_wait (mtx=0x806fad0, cond=0x806faf8) at ../include/c11/threads_posix.h:155\n#10 lp_cs_tpool_worker (data=data@entry=0x806fad0) at ../src/gallium/drivers/llvmpipe/lp_cs_tpool.c:48\n#11 0x00007ffffc0bdeab in impl_thrd_routine (p=<optimized out>) at ../include/c11/threads_posix.h:87\n#12 0x00007ffffb3f6669 in start_thread (arg=<optimized out>) at pthread_create.c:479\n#13 0x00007ffffb582323 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\n```\nI did not consider this crash as a WSL bug until I found this [issue](https://github.com/Microsoft/WSL/issues/3618) on the github. Then I realized that I had to update my WSL that is updated as the Windows is updated. The easy way to get the latest Windows build version is to register the [Windows Insider Program](https://insider.windows.com/zh-cn/) that only requires\n\n- Windows 10\n- Microsoft Account\n\nOnce you register successfully, you can check the Windows Updates for the latest Windows build.\n\n{% asset_img windows_update.png windows-updates %}\n","slug":"windows-insider-program","published":1,"updated":"2020-07-08T02:21:05.812Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqil0013x1tsb7su8nmg","content":"<p>The story begins with debugging an OpenGL demo on the WSL with the Mesa libraries compiled by myself. Every time the executable will crash when it stops at the breakpoint and steps into the function. The gdb outputs as follows:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Thread 1 <span class=\"string\">\"osdemo\"</span> hit Breakpoint 1, OSMesaMakeCurrent (osmesa=0x8056bf0, buffer=0x7ffff85f0010, <span class=\"built_in\">type</span>=5121, width=400, height=400)</span><br><span class=\"line\">    at ../src/gallium/state_trackers/osmesa/osmesa.c:763</span><br><span class=\"line\">763     &#123;</span><br><span class=\"line\">(gdb) n</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\"></span><br><span class=\"line\">Thread 13 <span class=\"string\">\"osdemo\"</span> received signal SIGABRT, Aborted.</span><br><span class=\"line\">[Switching to Thread 0x7fffe0f90700 (LWP 4073)]</span><br><span class=\"line\">__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50</span><br><span class=\"line\">50      ../sysdeps/unix/sysv/linux/raise.c: No such file or directory.</span><br><span class=\"line\">(gdb) bt</span><br><span class=\"line\"><span class=\"comment\">#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50</span></span><br><span class=\"line\"><span class=\"comment\">#1  0x00007ffffb485899 in __GI_abort () at abort.c:79</span></span><br><span class=\"line\"><span class=\"comment\">#2  0x00007ffffb4f009f in __libc_message (action=(do_abort | do_backtrace), fmt=0x7ffffb618fbe \"%s\", fmt=0x7ffffb618fbe \"%s\",</span></span><br><span class=\"line\">    action=(do_abort | do_backtrace)) at ../sysdeps/posix/libc_fatal.c:181</span><br><span class=\"line\"><span class=\"comment\">#3  0x00007ffffb4f0440 in __GI___libc_fatal (message=message@entry=0x7ffffb405000 \"The futex facility returned an unexpected error code.\\n\")</span></span><br><span class=\"line\">    at ../sysdeps/posix/libc_fatal.c:191</span><br><span class=\"line\"><span class=\"comment\">#4  0x00007ffffb3fd34a in futex_fatal_error () at ../sysdeps/nptl/futex-internal.h:200</span></span><br><span class=\"line\"><span class=\"comment\">#5  futex_wake (private=&lt;optimized out&gt;, processes_to_wake=&lt;optimized out&gt;, futex_word=&lt;optimized out&gt;) at ../sysdeps/unix/sysv/linux/futex-internal.h:251</span></span><br><span class=\"line\"><span class=\"comment\">#6  __condvar_confirm_wakeup (private=&lt;optimized out&gt;, cond=&lt;optimized out&gt;) at pthread_cond_wait.c:55</span></span><br><span class=\"line\"><span class=\"comment\">#7  __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x806fad0, cond=0x806faf8) at pthread_cond_wait.c:425</span></span><br><span class=\"line\"><span class=\"comment\">#8  __pthread_cond_wait (cond=0x806faf8, mutex=0x806fad0) at pthread_cond_wait.c:638</span></span><br><span class=\"line\"><span class=\"comment\">#9  0x00007ffffc0be0cb in cnd_wait (mtx=0x806fad0, cond=0x806faf8) at ../include/c11/threads_posix.h:155</span></span><br><span class=\"line\"><span class=\"comment\">#10 lp_cs_tpool_worker (data=data@entry=0x806fad0) at ../src/gallium/drivers/llvmpipe/lp_cs_tpool.c:48</span></span><br><span class=\"line\"><span class=\"comment\">#11 0x00007ffffc0bdeab in impl_thrd_routine (p=&lt;optimized out&gt;) at ../include/c11/threads_posix.h:87</span></span><br><span class=\"line\"><span class=\"comment\">#12 0x00007ffffb3f6669 in start_thread (arg=&lt;optimized out&gt;) at pthread_create.c:479</span></span><br><span class=\"line\"><span class=\"comment\">#13 0x00007ffffb582323 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95</span></span><br></pre></td></tr></table></figure><br>I did not consider this crash as a WSL bug until I found this <a href=\"https://github.com/Microsoft/WSL/issues/3618\" target=\"_blank\" rel=\"noopener\">issue</a> on the github. Then I realized that I had to update my WSL that is updated as the Windows is updated. The easy way to get the latest Windows build version is to register the <a href=\"https://insider.windows.com/zh-cn/\" target=\"_blank\" rel=\"noopener\">Windows Insider Program</a> that only requires</p>\n<ul>\n<li>Windows 10</li>\n<li>Microsoft Account</li>\n</ul>\n<p>Once you register successfully, you can check the Windows Updates for the latest Windows build.</p>\n<img src=\"/windows-insider-program/windows_update.png\" class=\"\" title=\"windows-updates\">\n","site":{"data":{}},"excerpt":"","more":"<p>The story begins with debugging an OpenGL demo on the WSL with the Mesa libraries compiled by myself. Every time the executable will crash when it stops at the breakpoint and steps into the function. The gdb outputs as follows:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Thread 1 <span class=\"string\">\"osdemo\"</span> hit Breakpoint 1, OSMesaMakeCurrent (osmesa=0x8056bf0, buffer=0x7ffff85f0010, <span class=\"built_in\">type</span>=5121, width=400, height=400)</span><br><span class=\"line\">    at ../src/gallium/state_trackers/osmesa/osmesa.c:763</span><br><span class=\"line\">763     &#123;</span><br><span class=\"line\">(gdb) n</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\">The futex facility returned an unexpected error code.</span><br><span class=\"line\"></span><br><span class=\"line\">Thread 13 <span class=\"string\">\"osdemo\"</span> received signal SIGABRT, Aborted.</span><br><span class=\"line\">[Switching to Thread 0x7fffe0f90700 (LWP 4073)]</span><br><span class=\"line\">__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50</span><br><span class=\"line\">50      ../sysdeps/unix/sysv/linux/raise.c: No such file or directory.</span><br><span class=\"line\">(gdb) bt</span><br><span class=\"line\"><span class=\"comment\">#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50</span></span><br><span class=\"line\"><span class=\"comment\">#1  0x00007ffffb485899 in __GI_abort () at abort.c:79</span></span><br><span class=\"line\"><span class=\"comment\">#2  0x00007ffffb4f009f in __libc_message (action=(do_abort | do_backtrace), fmt=0x7ffffb618fbe \"%s\", fmt=0x7ffffb618fbe \"%s\",</span></span><br><span class=\"line\">    action=(do_abort | do_backtrace)) at ../sysdeps/posix/libc_fatal.c:181</span><br><span class=\"line\"><span class=\"comment\">#3  0x00007ffffb4f0440 in __GI___libc_fatal (message=message@entry=0x7ffffb405000 \"The futex facility returned an unexpected error code.\\n\")</span></span><br><span class=\"line\">    at ../sysdeps/posix/libc_fatal.c:191</span><br><span class=\"line\"><span class=\"comment\">#4  0x00007ffffb3fd34a in futex_fatal_error () at ../sysdeps/nptl/futex-internal.h:200</span></span><br><span class=\"line\"><span class=\"comment\">#5  futex_wake (private=&lt;optimized out&gt;, processes_to_wake=&lt;optimized out&gt;, futex_word=&lt;optimized out&gt;) at ../sysdeps/unix/sysv/linux/futex-internal.h:251</span></span><br><span class=\"line\"><span class=\"comment\">#6  __condvar_confirm_wakeup (private=&lt;optimized out&gt;, cond=&lt;optimized out&gt;) at pthread_cond_wait.c:55</span></span><br><span class=\"line\"><span class=\"comment\">#7  __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x806fad0, cond=0x806faf8) at pthread_cond_wait.c:425</span></span><br><span class=\"line\"><span class=\"comment\">#8  __pthread_cond_wait (cond=0x806faf8, mutex=0x806fad0) at pthread_cond_wait.c:638</span></span><br><span class=\"line\"><span class=\"comment\">#9  0x00007ffffc0be0cb in cnd_wait (mtx=0x806fad0, cond=0x806faf8) at ../include/c11/threads_posix.h:155</span></span><br><span class=\"line\"><span class=\"comment\">#10 lp_cs_tpool_worker (data=data@entry=0x806fad0) at ../src/gallium/drivers/llvmpipe/lp_cs_tpool.c:48</span></span><br><span class=\"line\"><span class=\"comment\">#11 0x00007ffffc0bdeab in impl_thrd_routine (p=&lt;optimized out&gt;) at ../include/c11/threads_posix.h:87</span></span><br><span class=\"line\"><span class=\"comment\">#12 0x00007ffffb3f6669 in start_thread (arg=&lt;optimized out&gt;) at pthread_create.c:479</span></span><br><span class=\"line\"><span class=\"comment\">#13 0x00007ffffb582323 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95</span></span><br></pre></td></tr></table></figure><br>I did not consider this crash as a WSL bug until I found this <a href=\"https://github.com/Microsoft/WSL/issues/3618\" target=\"_blank\" rel=\"noopener\">issue</a> on the github. Then I realized that I had to update my WSL that is updated as the Windows is updated. The easy way to get the latest Windows build version is to register the <a href=\"https://insider.windows.com/zh-cn/\" target=\"_blank\" rel=\"noopener\">Windows Insider Program</a> that only requires</p>\n<ul>\n<li>Windows 10</li>\n<li>Microsoft Account</li>\n</ul>\n<p>Once you register successfully, you can check the Windows Updates for the latest Windows build.</p>\n<img src=\"/windows-insider-program/windows_update.png\" class=\"\" title=\"windows-updates\">\n"},{"title":"X11 Data Structure Hierarchy","date":"2020-09-03T08:49:16.000Z","_content":"\n# X Window System\nX Window System是一个基于网络的窗口系统协议，它的一个实现是[Xorg](https://www.x.org/wiki/)。\n\n<!--more-->\n\n# What are data structures in Xorg?\n- Display\n    Display datatype maintaining display specific data. The contents of this structure are implementation dependent. A Display should be treated as oqaque by application code.\n- Screen\n    Information about the screen. The contents of this structure are implementation dependent. A Screen should be treated as opaque by application code.\n- Depth\n    Depth structure; contains information for each possible depth.\n- Visual\n    Visual structure; contains information about colormapping possible.\n\n以上4个结构体都被定义在[Xlib.h](https://gitlab.freedesktop.org/xorg/lib/libx11/-/blob/master/include/X11/Xlib.h),前两个相对大一些，尤其是`Display`,可以说是统领万象者。它们四者之间的关系是前者包含多个后者，依次类推。\n\n# How are they organized?\n```mermaid\ngraph TD\n    D[Display]\n    D --> s0(Screen0)\n    D --> s1(Screen1)\n    D --> sN(ScreenN)\n    subgraph Screen0\n    s0 --> d0(Depth0)\n    s0 --> d1(Depth1)\n    s0 --> d2(Depth2)\n    s0 --> d3(Depth3)\n    s0 --> dN(DepthN)\n    end\n    subgraph Depth0\n    d0 --> v0(Visual0)\n    d0 --> v1(Visual1)\n    d0 --> v2(Visual2)\n    d0 --> v3(Visual3)\n    d0 --> v4(Visual4)\n    d0 --> v5(Visual5)\n    d0 --> vN(VisualN)\n    end\n```\n\n# How do we get their information?\n一般的Linux系统中有一个命令`xdpyinfo`,利用它可以查看到所有的4者的信息，当然和其它的X的工具一样，使用前要确保环境变量`DISPLAY`已经为有效值。下面是在Xorg作为X Server时查看到的系统X11 Window的相关信息。(只截取前面部分)\n```\n\nname of display:    :18.0\nversion number:    11.0\nvendor string:    The X.Org Foundation\nvendor release number:    12008000\nX.Org version: 1.20.8\nmaximum request size:  16777212 bytes\nmotion buffer size:  256\nbitmap unit, bit order, padding:    32, LSBFirst, 32\nimage byte order:    LSBFirst\nnumber of supported pixmap formats:    7\nsupported pixmap formats:\n    depth 1, bits_per_pixel 1, scanline_pad 32\n    depth 4, bits_per_pixel 8, scanline_pad 32\n    depth 8, bits_per_pixel 8, scanline_pad 32\n    depth 15, bits_per_pixel 16, scanline_pad 32\n    depth 16, bits_per_pixel 16, scanline_pad 32\n    depth 24, bits_per_pixel 32, scanline_pad 32\n    depth 32, bits_per_pixel 32, scanline_pad 32\nkeycode range:    minimum 8, maximum 255\nfocus:  window 0x300000f, revert to PointerRoot\nnumber of extensions:    25\n    BIG-REQUESTS\n    DAMAGE\n    DOUBLE-BUFFER\n    DRI2\n    GLX\n    Generic Event Extension\n    MIT-SCREEN-SAVER\n    MIT-SHM\n    Present\n    RANDR\n    RECORD\n    RENDER\n    SECURITY\n    SHAPE\n    SYNC\n    X-Resource\n    XC-MISC\n    XFIXES\n    XFree86-DGA\n    XFree86-VidModeExtension\n    XINERAMA\n    XInputExtension\n    XKEYBOARD\n    XTEST\n    XVideo\ndefault screen number:    0\nnumber of screens:    1\n\nscreen #0:\n  dimensions:    1920x1080 pixels (508x286 millimeters)\n  resolution:    96x96 dots per inch\n  depths (7):    24, 1, 4, 8, 15, 16, 32\n  root window id:    0x34d\n  depth of root window:    24 planes\n  number of colormaps:    minimum 1, maximum 1\n  default colormap:    0x20\n  default number of colormap cells:    256\n  preallocated pixels:    black 0, white 16777215\n  options:    backing-store NO, save-unders NO\n  largest cursor:    1920x1080\n  current input event mask:    0xfa800f\n    KeyPressMask             KeyReleaseMask           ButtonPressMask          \n    ButtonReleaseMask        ExposureMask             StructureNotifyMask      \n    SubstructureNotifyMask   SubstructureRedirectMask FocusChangeMask          \n    PropertyChangeMask       ColormapChangeMask       \n  number of visuals:    240\n  default visual id:  0x21\n  visual:\n    visual id:    0x21\n    class:    TrueColor\n    depth:    24 planes\n    available colormap entries:    256 per subfield\n    red, green, blue masks:    0xff0000, 0xff00, 0xff\n    significant bits in color specification:    8 bits\n  visual:\n    visual id:    0x22\n    class:    DirectColor\n    depth:    24 planes\n    available colormap entries:    256 per subfield\n    red, green, blue masks:    0xff0000, 0xff00, 0xff\n    significant bits in color specification:    8 bits\n  visual:\n    visual id:    0x25e\n    class:    TrueColor\n    depth:    24 planes\n    available colormap entries:    256 per subfield\n    red, green, blue masks:    0xff0000, 0xff00, 0xff\n    significant bits in color specification:    8 bits\n\n```\n\n","source":"_posts/x-hierarchy.md","raw":"---\ntitle: X11 Data Structure Hierarchy\ndate: 2020-09-03 16:49:16\ntags: [X]\n---\n\n# X Window System\nX Window System是一个基于网络的窗口系统协议，它的一个实现是[Xorg](https://www.x.org/wiki/)。\n\n<!--more-->\n\n# What are data structures in Xorg?\n- Display\n    Display datatype maintaining display specific data. The contents of this structure are implementation dependent. A Display should be treated as oqaque by application code.\n- Screen\n    Information about the screen. The contents of this structure are implementation dependent. A Screen should be treated as opaque by application code.\n- Depth\n    Depth structure; contains information for each possible depth.\n- Visual\n    Visual structure; contains information about colormapping possible.\n\n以上4个结构体都被定义在[Xlib.h](https://gitlab.freedesktop.org/xorg/lib/libx11/-/blob/master/include/X11/Xlib.h),前两个相对大一些，尤其是`Display`,可以说是统领万象者。它们四者之间的关系是前者包含多个后者，依次类推。\n\n# How are they organized?\n```mermaid\ngraph TD\n    D[Display]\n    D --> s0(Screen0)\n    D --> s1(Screen1)\n    D --> sN(ScreenN)\n    subgraph Screen0\n    s0 --> d0(Depth0)\n    s0 --> d1(Depth1)\n    s0 --> d2(Depth2)\n    s0 --> d3(Depth3)\n    s0 --> dN(DepthN)\n    end\n    subgraph Depth0\n    d0 --> v0(Visual0)\n    d0 --> v1(Visual1)\n    d0 --> v2(Visual2)\n    d0 --> v3(Visual3)\n    d0 --> v4(Visual4)\n    d0 --> v5(Visual5)\n    d0 --> vN(VisualN)\n    end\n```\n\n# How do we get their information?\n一般的Linux系统中有一个命令`xdpyinfo`,利用它可以查看到所有的4者的信息，当然和其它的X的工具一样，使用前要确保环境变量`DISPLAY`已经为有效值。下面是在Xorg作为X Server时查看到的系统X11 Window的相关信息。(只截取前面部分)\n```\n\nname of display:    :18.0\nversion number:    11.0\nvendor string:    The X.Org Foundation\nvendor release number:    12008000\nX.Org version: 1.20.8\nmaximum request size:  16777212 bytes\nmotion buffer size:  256\nbitmap unit, bit order, padding:    32, LSBFirst, 32\nimage byte order:    LSBFirst\nnumber of supported pixmap formats:    7\nsupported pixmap formats:\n    depth 1, bits_per_pixel 1, scanline_pad 32\n    depth 4, bits_per_pixel 8, scanline_pad 32\n    depth 8, bits_per_pixel 8, scanline_pad 32\n    depth 15, bits_per_pixel 16, scanline_pad 32\n    depth 16, bits_per_pixel 16, scanline_pad 32\n    depth 24, bits_per_pixel 32, scanline_pad 32\n    depth 32, bits_per_pixel 32, scanline_pad 32\nkeycode range:    minimum 8, maximum 255\nfocus:  window 0x300000f, revert to PointerRoot\nnumber of extensions:    25\n    BIG-REQUESTS\n    DAMAGE\n    DOUBLE-BUFFER\n    DRI2\n    GLX\n    Generic Event Extension\n    MIT-SCREEN-SAVER\n    MIT-SHM\n    Present\n    RANDR\n    RECORD\n    RENDER\n    SECURITY\n    SHAPE\n    SYNC\n    X-Resource\n    XC-MISC\n    XFIXES\n    XFree86-DGA\n    XFree86-VidModeExtension\n    XINERAMA\n    XInputExtension\n    XKEYBOARD\n    XTEST\n    XVideo\ndefault screen number:    0\nnumber of screens:    1\n\nscreen #0:\n  dimensions:    1920x1080 pixels (508x286 millimeters)\n  resolution:    96x96 dots per inch\n  depths (7):    24, 1, 4, 8, 15, 16, 32\n  root window id:    0x34d\n  depth of root window:    24 planes\n  number of colormaps:    minimum 1, maximum 1\n  default colormap:    0x20\n  default number of colormap cells:    256\n  preallocated pixels:    black 0, white 16777215\n  options:    backing-store NO, save-unders NO\n  largest cursor:    1920x1080\n  current input event mask:    0xfa800f\n    KeyPressMask             KeyReleaseMask           ButtonPressMask          \n    ButtonReleaseMask        ExposureMask             StructureNotifyMask      \n    SubstructureNotifyMask   SubstructureRedirectMask FocusChangeMask          \n    PropertyChangeMask       ColormapChangeMask       \n  number of visuals:    240\n  default visual id:  0x21\n  visual:\n    visual id:    0x21\n    class:    TrueColor\n    depth:    24 planes\n    available colormap entries:    256 per subfield\n    red, green, blue masks:    0xff0000, 0xff00, 0xff\n    significant bits in color specification:    8 bits\n  visual:\n    visual id:    0x22\n    class:    DirectColor\n    depth:    24 planes\n    available colormap entries:    256 per subfield\n    red, green, blue masks:    0xff0000, 0xff00, 0xff\n    significant bits in color specification:    8 bits\n  visual:\n    visual id:    0x25e\n    class:    TrueColor\n    depth:    24 planes\n    available colormap entries:    256 per subfield\n    red, green, blue masks:    0xff0000, 0xff00, 0xff\n    significant bits in color specification:    8 bits\n\n```\n\n","slug":"x-hierarchy","published":1,"updated":"2020-10-09T01:57:03.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqim0016x1tsf6oc9l9u","content":"<h1 id=\"X-Window-System\"><a href=\"#X-Window-System\" class=\"headerlink\" title=\"X Window System\"></a>X Window System</h1><p>X Window System是一个基于网络的窗口系统协议，它的一个实现是<a href=\"https://www.x.org/wiki/\" target=\"_blank\" rel=\"noopener\">Xorg</a>。</p>\n<a id=\"more\"></a>\n<h1 id=\"What-are-data-structures-in-Xorg\"><a href=\"#What-are-data-structures-in-Xorg\" class=\"headerlink\" title=\"What are data structures in Xorg?\"></a>What are data structures in Xorg?</h1><ul>\n<li>Display<br>  Display datatype maintaining display specific data. The contents of this structure are implementation dependent. A Display should be treated as oqaque by application code.</li>\n<li>Screen<br>  Information about the screen. The contents of this structure are implementation dependent. A Screen should be treated as opaque by application code.</li>\n<li>Depth<br>  Depth structure; contains information for each possible depth.</li>\n<li>Visual<br>  Visual structure; contains information about colormapping possible.</li>\n</ul>\n<p>以上4个结构体都被定义在<a href=\"https://gitlab.freedesktop.org/xorg/lib/libx11/-/blob/master/include/X11/Xlib.h\" target=\"_blank\" rel=\"noopener\">Xlib.h</a>,前两个相对大一些，尤其是<code>Display</code>,可以说是统领万象者。它们四者之间的关系是前者包含多个后者，依次类推。</p>\n<h1 id=\"How-are-they-organized\"><a href=\"#How-are-they-organized\" class=\"headerlink\" title=\"How are they organized?\"></a>How are they organized?</h1><pre class=\"mermaid\">graph TD\n    D[Display]\n    D --> s0(Screen0)\n    D --> s1(Screen1)\n    D --> sN(ScreenN)\n    subgraph Screen0\n    s0 --> d0(Depth0)\n    s0 --> d1(Depth1)\n    s0 --> d2(Depth2)\n    s0 --> d3(Depth3)\n    s0 --> dN(DepthN)\n    end\n    subgraph Depth0\n    d0 --> v0(Visual0)\n    d0 --> v1(Visual1)\n    d0 --> v2(Visual2)\n    d0 --> v3(Visual3)\n    d0 --> v4(Visual4)\n    d0 --> v5(Visual5)\n    d0 --> vN(VisualN)\n    end</pre>\n\n<h1 id=\"How-do-we-get-their-information\"><a href=\"#How-do-we-get-their-information\" class=\"headerlink\" title=\"How do we get their information?\"></a>How do we get their information?</h1><p>一般的Linux系统中有一个命令<code>xdpyinfo</code>,利用它可以查看到所有的4者的信息，当然和其它的X的工具一样，使用前要确保环境变量<code>DISPLAY</code>已经为有效值。下面是在Xorg作为X Server时查看到的系统X11 Window的相关信息。(只截取前面部分)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">name of display:    :18.0</span><br><span class=\"line\">version number:    11.0</span><br><span class=\"line\">vendor string:    The X.Org Foundation</span><br><span class=\"line\">vendor release number:    12008000</span><br><span class=\"line\">X.Org version: 1.20.8</span><br><span class=\"line\">maximum request size:  16777212 bytes</span><br><span class=\"line\">motion buffer size:  256</span><br><span class=\"line\">bitmap unit, bit order, padding:    32, LSBFirst, 32</span><br><span class=\"line\">image byte order:    LSBFirst</span><br><span class=\"line\">number of supported pixmap formats:    7</span><br><span class=\"line\">supported pixmap formats:</span><br><span class=\"line\">    depth 1, bits_per_pixel 1, scanline_pad 32</span><br><span class=\"line\">    depth 4, bits_per_pixel 8, scanline_pad 32</span><br><span class=\"line\">    depth 8, bits_per_pixel 8, scanline_pad 32</span><br><span class=\"line\">    depth 15, bits_per_pixel 16, scanline_pad 32</span><br><span class=\"line\">    depth 16, bits_per_pixel 16, scanline_pad 32</span><br><span class=\"line\">    depth 24, bits_per_pixel 32, scanline_pad 32</span><br><span class=\"line\">    depth 32, bits_per_pixel 32, scanline_pad 32</span><br><span class=\"line\">keycode range:    minimum 8, maximum 255</span><br><span class=\"line\">focus:  window 0x300000f, revert to PointerRoot</span><br><span class=\"line\">number of extensions:    25</span><br><span class=\"line\">    BIG-REQUESTS</span><br><span class=\"line\">    DAMAGE</span><br><span class=\"line\">    DOUBLE-BUFFER</span><br><span class=\"line\">    DRI2</span><br><span class=\"line\">    GLX</span><br><span class=\"line\">    Generic Event Extension</span><br><span class=\"line\">    MIT-SCREEN-SAVER</span><br><span class=\"line\">    MIT-SHM</span><br><span class=\"line\">    Present</span><br><span class=\"line\">    RANDR</span><br><span class=\"line\">    RECORD</span><br><span class=\"line\">    RENDER</span><br><span class=\"line\">    SECURITY</span><br><span class=\"line\">    SHAPE</span><br><span class=\"line\">    SYNC</span><br><span class=\"line\">    X-Resource</span><br><span class=\"line\">    XC-MISC</span><br><span class=\"line\">    XFIXES</span><br><span class=\"line\">    XFree86-DGA</span><br><span class=\"line\">    XFree86-VidModeExtension</span><br><span class=\"line\">    XINERAMA</span><br><span class=\"line\">    XInputExtension</span><br><span class=\"line\">    XKEYBOARD</span><br><span class=\"line\">    XTEST</span><br><span class=\"line\">    XVideo</span><br><span class=\"line\">default screen number:    0</span><br><span class=\"line\">number of screens:    1</span><br><span class=\"line\"></span><br><span class=\"line\">screen #0:</span><br><span class=\"line\">  dimensions:    1920x1080 pixels (508x286 millimeters)</span><br><span class=\"line\">  resolution:    96x96 dots per inch</span><br><span class=\"line\">  depths (7):    24, 1, 4, 8, 15, 16, 32</span><br><span class=\"line\">  root window id:    0x34d</span><br><span class=\"line\">  depth of root window:    24 planes</span><br><span class=\"line\">  number of colormaps:    minimum 1, maximum 1</span><br><span class=\"line\">  default colormap:    0x20</span><br><span class=\"line\">  default number of colormap cells:    256</span><br><span class=\"line\">  preallocated pixels:    black 0, white 16777215</span><br><span class=\"line\">  options:    backing-store NO, save-unders NO</span><br><span class=\"line\">  largest cursor:    1920x1080</span><br><span class=\"line\">  current input event mask:    0xfa800f</span><br><span class=\"line\">    KeyPressMask             KeyReleaseMask           ButtonPressMask          </span><br><span class=\"line\">    ButtonReleaseMask        ExposureMask             StructureNotifyMask      </span><br><span class=\"line\">    SubstructureNotifyMask   SubstructureRedirectMask FocusChangeMask          </span><br><span class=\"line\">    PropertyChangeMask       ColormapChangeMask       </span><br><span class=\"line\">  number of visuals:    240</span><br><span class=\"line\">  default visual id:  0x21</span><br><span class=\"line\">  visual:</span><br><span class=\"line\">    visual id:    0x21</span><br><span class=\"line\">    class:    TrueColor</span><br><span class=\"line\">    depth:    24 planes</span><br><span class=\"line\">    available colormap entries:    256 per subfield</span><br><span class=\"line\">    red, green, blue masks:    0xff0000, 0xff00, 0xff</span><br><span class=\"line\">    significant bits in color specification:    8 bits</span><br><span class=\"line\">  visual:</span><br><span class=\"line\">    visual id:    0x22</span><br><span class=\"line\">    class:    DirectColor</span><br><span class=\"line\">    depth:    24 planes</span><br><span class=\"line\">    available colormap entries:    256 per subfield</span><br><span class=\"line\">    red, green, blue masks:    0xff0000, 0xff00, 0xff</span><br><span class=\"line\">    significant bits in color specification:    8 bits</span><br><span class=\"line\">  visual:</span><br><span class=\"line\">    visual id:    0x25e</span><br><span class=\"line\">    class:    TrueColor</span><br><span class=\"line\">    depth:    24 planes</span><br><span class=\"line\">    available colormap entries:    256 per subfield</span><br><span class=\"line\">    red, green, blue masks:    0xff0000, 0xff00, 0xff</span><br><span class=\"line\">    significant bits in color specification:    8 bits</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"X-Window-System\"><a href=\"#X-Window-System\" class=\"headerlink\" title=\"X Window System\"></a>X Window System</h1><p>X Window System是一个基于网络的窗口系统协议，它的一个实现是<a href=\"https://www.x.org/wiki/\" target=\"_blank\" rel=\"noopener\">Xorg</a>。</p>","more":"<h1 id=\"What-are-data-structures-in-Xorg\"><a href=\"#What-are-data-structures-in-Xorg\" class=\"headerlink\" title=\"What are data structures in Xorg?\"></a>What are data structures in Xorg?</h1><ul>\n<li>Display<br>  Display datatype maintaining display specific data. The contents of this structure are implementation dependent. A Display should be treated as oqaque by application code.</li>\n<li>Screen<br>  Information about the screen. The contents of this structure are implementation dependent. A Screen should be treated as opaque by application code.</li>\n<li>Depth<br>  Depth structure; contains information for each possible depth.</li>\n<li>Visual<br>  Visual structure; contains information about colormapping possible.</li>\n</ul>\n<p>以上4个结构体都被定义在<a href=\"https://gitlab.freedesktop.org/xorg/lib/libx11/-/blob/master/include/X11/Xlib.h\" target=\"_blank\" rel=\"noopener\">Xlib.h</a>,前两个相对大一些，尤其是<code>Display</code>,可以说是统领万象者。它们四者之间的关系是前者包含多个后者，依次类推。</p>\n<h1 id=\"How-are-they-organized\"><a href=\"#How-are-they-organized\" class=\"headerlink\" title=\"How are they organized?\"></a>How are they organized?</h1><pre class=\"mermaid\">graph TD\n    D[Display]\n    D --> s0(Screen0)\n    D --> s1(Screen1)\n    D --> sN(ScreenN)\n    subgraph Screen0\n    s0 --> d0(Depth0)\n    s0 --> d1(Depth1)\n    s0 --> d2(Depth2)\n    s0 --> d3(Depth3)\n    s0 --> dN(DepthN)\n    end\n    subgraph Depth0\n    d0 --> v0(Visual0)\n    d0 --> v1(Visual1)\n    d0 --> v2(Visual2)\n    d0 --> v3(Visual3)\n    d0 --> v4(Visual4)\n    d0 --> v5(Visual5)\n    d0 --> vN(VisualN)\n    end</pre>\n\n<h1 id=\"How-do-we-get-their-information\"><a href=\"#How-do-we-get-their-information\" class=\"headerlink\" title=\"How do we get their information?\"></a>How do we get their information?</h1><p>一般的Linux系统中有一个命令<code>xdpyinfo</code>,利用它可以查看到所有的4者的信息，当然和其它的X的工具一样，使用前要确保环境变量<code>DISPLAY</code>已经为有效值。下面是在Xorg作为X Server时查看到的系统X11 Window的相关信息。(只截取前面部分)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">name of display:    :18.0</span><br><span class=\"line\">version number:    11.0</span><br><span class=\"line\">vendor string:    The X.Org Foundation</span><br><span class=\"line\">vendor release number:    12008000</span><br><span class=\"line\">X.Org version: 1.20.8</span><br><span class=\"line\">maximum request size:  16777212 bytes</span><br><span class=\"line\">motion buffer size:  256</span><br><span class=\"line\">bitmap unit, bit order, padding:    32, LSBFirst, 32</span><br><span class=\"line\">image byte order:    LSBFirst</span><br><span class=\"line\">number of supported pixmap formats:    7</span><br><span class=\"line\">supported pixmap formats:</span><br><span class=\"line\">    depth 1, bits_per_pixel 1, scanline_pad 32</span><br><span class=\"line\">    depth 4, bits_per_pixel 8, scanline_pad 32</span><br><span class=\"line\">    depth 8, bits_per_pixel 8, scanline_pad 32</span><br><span class=\"line\">    depth 15, bits_per_pixel 16, scanline_pad 32</span><br><span class=\"line\">    depth 16, bits_per_pixel 16, scanline_pad 32</span><br><span class=\"line\">    depth 24, bits_per_pixel 32, scanline_pad 32</span><br><span class=\"line\">    depth 32, bits_per_pixel 32, scanline_pad 32</span><br><span class=\"line\">keycode range:    minimum 8, maximum 255</span><br><span class=\"line\">focus:  window 0x300000f, revert to PointerRoot</span><br><span class=\"line\">number of extensions:    25</span><br><span class=\"line\">    BIG-REQUESTS</span><br><span class=\"line\">    DAMAGE</span><br><span class=\"line\">    DOUBLE-BUFFER</span><br><span class=\"line\">    DRI2</span><br><span class=\"line\">    GLX</span><br><span class=\"line\">    Generic Event Extension</span><br><span class=\"line\">    MIT-SCREEN-SAVER</span><br><span class=\"line\">    MIT-SHM</span><br><span class=\"line\">    Present</span><br><span class=\"line\">    RANDR</span><br><span class=\"line\">    RECORD</span><br><span class=\"line\">    RENDER</span><br><span class=\"line\">    SECURITY</span><br><span class=\"line\">    SHAPE</span><br><span class=\"line\">    SYNC</span><br><span class=\"line\">    X-Resource</span><br><span class=\"line\">    XC-MISC</span><br><span class=\"line\">    XFIXES</span><br><span class=\"line\">    XFree86-DGA</span><br><span class=\"line\">    XFree86-VidModeExtension</span><br><span class=\"line\">    XINERAMA</span><br><span class=\"line\">    XInputExtension</span><br><span class=\"line\">    XKEYBOARD</span><br><span class=\"line\">    XTEST</span><br><span class=\"line\">    XVideo</span><br><span class=\"line\">default screen number:    0</span><br><span class=\"line\">number of screens:    1</span><br><span class=\"line\"></span><br><span class=\"line\">screen #0:</span><br><span class=\"line\">  dimensions:    1920x1080 pixels (508x286 millimeters)</span><br><span class=\"line\">  resolution:    96x96 dots per inch</span><br><span class=\"line\">  depths (7):    24, 1, 4, 8, 15, 16, 32</span><br><span class=\"line\">  root window id:    0x34d</span><br><span class=\"line\">  depth of root window:    24 planes</span><br><span class=\"line\">  number of colormaps:    minimum 1, maximum 1</span><br><span class=\"line\">  default colormap:    0x20</span><br><span class=\"line\">  default number of colormap cells:    256</span><br><span class=\"line\">  preallocated pixels:    black 0, white 16777215</span><br><span class=\"line\">  options:    backing-store NO, save-unders NO</span><br><span class=\"line\">  largest cursor:    1920x1080</span><br><span class=\"line\">  current input event mask:    0xfa800f</span><br><span class=\"line\">    KeyPressMask             KeyReleaseMask           ButtonPressMask          </span><br><span class=\"line\">    ButtonReleaseMask        ExposureMask             StructureNotifyMask      </span><br><span class=\"line\">    SubstructureNotifyMask   SubstructureRedirectMask FocusChangeMask          </span><br><span class=\"line\">    PropertyChangeMask       ColormapChangeMask       </span><br><span class=\"line\">  number of visuals:    240</span><br><span class=\"line\">  default visual id:  0x21</span><br><span class=\"line\">  visual:</span><br><span class=\"line\">    visual id:    0x21</span><br><span class=\"line\">    class:    TrueColor</span><br><span class=\"line\">    depth:    24 planes</span><br><span class=\"line\">    available colormap entries:    256 per subfield</span><br><span class=\"line\">    red, green, blue masks:    0xff0000, 0xff00, 0xff</span><br><span class=\"line\">    significant bits in color specification:    8 bits</span><br><span class=\"line\">  visual:</span><br><span class=\"line\">    visual id:    0x22</span><br><span class=\"line\">    class:    DirectColor</span><br><span class=\"line\">    depth:    24 planes</span><br><span class=\"line\">    available colormap entries:    256 per subfield</span><br><span class=\"line\">    red, green, blue masks:    0xff0000, 0xff00, 0xff</span><br><span class=\"line\">    significant bits in color specification:    8 bits</span><br><span class=\"line\">  visual:</span><br><span class=\"line\">    visual id:    0x25e</span><br><span class=\"line\">    class:    TrueColor</span><br><span class=\"line\">    depth:    24 planes</span><br><span class=\"line\">    available colormap entries:    256 per subfield</span><br><span class=\"line\">    red, green, blue masks:    0xff0000, 0xff00, 0xff</span><br><span class=\"line\">    significant bits in color specification:    8 bits</span><br></pre></td></tr></table></figure></p>"},{"title":"Notes for Mesa","date":"2020-02-03T16:00:00.000Z","_content":"[Mesa](https://mesa3d.org/) is an open source implementation for OpenGL. Check [repository](https://gitlab.freedesktop.org/mesa/mesa) for its source code. There are something worth to learn about this project for a graphic driver developer.\n\n## Build\nIt's good choice for exploring any project's source code to start with its build script. So here is the start.\n\n### Dependencies\nMesa is a highly configurable project that means it allows to customize your own particular components by command-line options or a pure text file(meson_options.txt).\n\nGenerally speaking, which dependencies are required is determined by your configuration. For example, the following configuration\n\n```\noption(\n  'platforms',\n  type : 'array',\n  value : ['x11'],\n  choices : [\n    'auto', 'x11', 'wayland', 'drm', 'surfaceless', 'haiku', 'android',\n    'windows',\n  ],\n  description : 'window systems to support. If this is set to `auto`, all platforms applicable will be enabled.'\n)\noption(\n  'dri3',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'disabled', 'enabled'],\n  description : 'enable support for dri3'\n)\noption(\n  'dri-drivers',\n  type : 'array',\n  value : [],\n  choices : ['auto', 'i915', 'i965', 'r100', 'r200', 'nouveau', 'swrast'],\n  description : 'List of dri drivers to build. If this is set to auto all drivers applicable to the target OS/architecture will be built'\n)\noption(\n  'dri-drivers-path',\n  type : 'string',\n  value : '',\n  description : 'Location to install dri drivers. Default: $libdir/dri.'\n)\noption(\n  'dri-search-path',\n  type : 'string',\n  value : '',\n  description : 'Locations to search for dri drivers, passed as colon separated list. Default: dri-drivers-path.'\n)\noption(\n  'gallium-drivers',\n  type : 'array',\n  value : ['swrast'],\n  choices : [\n    'auto', 'kmsro', 'radeonsi', 'r300', 'r600', 'nouveau', 'freedreno',\n    'swrast', 'v3d', 'vc4', 'etnaviv', 'tegra', 'i915', 'svga', 'virgl',\n    'swr', 'panfrost', 'iris', 'lima', 'zink'\n  ],\n  description : 'List of gallium drivers to build. If this is set to auto all drivers applicable to the target OS/architecture will be built'\n)\noption(\n  'gallium-extra-hud',\n  type : 'boolean',\n  value : false,\n  description : 'Enable HUD block/NIC I/O HUD status support',\n)\noption(\n  'gallium-vdpau',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'enable gallium vdpau frontend.',\n)\noption(\n  'vdpau-libs-path',\n  type : 'string',\n  value : '',\n  description : 'path to put vdpau libraries. defaults to $libdir/vdpau.'\n)\noption(\n  'gallium-xvmc',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'enable gallium xvmc frontend.',\n)\noption(\n  'xvmc-libs-path',\n  type : 'string',\n  value : '',\n  description : 'path to put xvmc libraries. defaults to $libdir.'\n)\noption(\n  'gallium-omx',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'disabled', 'bellagio', 'tizonia'],\n  description : 'enable gallium omx frontend.',\n)\noption(\n  'omx-libs-path',\n  type : 'string',\n  value : '',\n  description : 'path to put omx libraries. defaults to omx-bellagio pkg-config pluginsdir.'\n)\noption(\n  'gallium-va',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'enable gallium va frontend.',\n)\noption(\n  'va-libs-path',\n  type : 'string',\n  value : '',\n  description : 'path to put va libraries. defaults to $libdir/dri.'\n)\noption(\n  'gallium-xa',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'enable gallium xa frontend.',\n)\noption(\n  'gallium-nine',\n  type : 'boolean',\n  value : false,\n  description : 'build gallium \"nine\" Direct3D 9.x frontend.',\n)\noption(\n  'gallium-opencl',\n  type : 'combo',\n  choices : ['icd', 'standalone', 'disabled'],\n  value : 'disabled',\n  description : 'build gallium \"clover\" OpenCL frontend.',\n)\noption(\n  'opencl-spirv',\n  type : 'boolean',\n  value : false,\n  description : 'build gallium \"clover\" OpenCL frontend with SPIR-V binary support.',\n)\noption(\n  'd3d-drivers-path',\n  type : 'string',\n  value : '',\n  description : 'Location of D3D drivers. Default: $libdir/d3d',\n)\noption(\n  'vulkan-drivers',\n  type : 'array',\n  value : [],\n  choices : ['auto', 'amd', 'freedreno', 'intel'],\n  description : 'List of vulkan drivers to build. If this is set to auto all drivers applicable to the target OS/architecture will be built'\n)\noption(\n  'shader-cache',\n  type : 'combo',\n  value : 'auto',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Build with on-disk shader cache support'\n)\noption(\n  'vulkan-icd-dir',\n  type : 'string',\n  value : '',\n  description : 'Location relative to prefix to put vulkan icds on install. Default: $datadir/vulkan/icd.d'\n)\noption(\n  'vulkan-overlay-layer',\n  type : 'boolean',\n  value : false,\n  description : 'Whether to build the vulkan overlay layer'\n)\noption(\n  'vulkan-device-select-layer',\n  type : 'boolean',\n  value : false,\n  description : 'Whether to build the vulkan device select layer'\n)\noption(\n  'shared-glapi',\n  type : 'combo',\n  value : 'enabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Whether to build a shared or static glapi. Defaults to false on Windows, true elsewhere'\n)\noption(\n  'gles1',\n  type : 'combo',\n  value : 'enabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Build support for OpenGL ES 1.x'\n)\noption(\n  'gles2',\n  type : 'combo',\n  value : 'enabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Build support for OpenGL ES 2.x and 3.x'\n)\noption(\n  'opengl',\n  type : 'boolean',\n  value : true,\n  description : 'Build support for OpenGL (all versions)'\n)\noption(\n  'gbm',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Build support for gbm platform'\n)\noption(\n  'glx',\n  type : 'combo',\n  value : 'gallium-xlib',\n  choices : ['auto', 'disabled', 'dri', 'xlib', 'gallium-xlib'],\n  description : 'Build support for GLX platform'\n)\noption(\n  'egl',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Build support for EGL platform'\n)\noption(\n  'glvnd',\n  type : 'boolean',\n  value : false,\n  description : 'Enable GLVND support.'\n)\noption(\n   'glx-read-only-text',\n   type : 'boolean',\n   value : false,\n   description : 'Disable writable .text section on x86 (decreases performance)'\n)\noption(\n  'llvm',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Build with LLVM support.'\n)\noption(\n  'shared-llvm',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Whether to link LLVM shared or statically.'\n)\noption(\n  'valgrind',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Build with valgrind support'\n)\noption(\n  'libunwind',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Use libunwind for stack-traces'\n)\noption(\n  'lmsensors',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Enable HUD lmsensors support.'\n)\noption(\n  'build-tests',\n  type : 'boolean',\n  value : false,\n  description : 'Build unit tests. Currently this will build *all* unit tests, which may build more than expected.'\n)\noption(\n  'install-intel-gpu-tests',\n  type : 'boolean',\n  value : false,\n  description : 'Build and install Intel unit tests which require the GPU.  This option is for developers and the Intel CI system only.'\n)\noption(\n  'selinux',\n  type : 'boolean',\n  value : false,\n  description : 'Build an SELinux-aware Mesa'\n)\noption(\n  'osmesa',\n  type : 'combo',\n  value : 'none',\n  choices : ['none', 'classic', 'gallium'],\n  description : 'Build OSmesa.'\n)\noption(\n  'osmesa-bits',\n  type : 'combo',\n  value : '8',\n  choices : ['8', '16', '32'],\n  description : 'Number of channel bits for OSMesa.'\n)\noption(\n  'swr-arches',\n  type : 'array',\n  value : ['avx', 'avx2'],\n  choices : ['avx', 'avx2', 'knl', 'skx'],\n  description : 'Architectures to build SWR support for.',\n)\noption(\n  'shared-swr',\n  type : 'boolean',\n  value : true,\n  description : 'Whether to link SWR shared or statically.',\n)\n\noption(\n  'tools',\n  type : 'array',\n  value : [],\n  choices : ['drm-shim', 'etnaviv', 'freedreno', 'glsl', 'intel', 'intel-ui', 'nir', 'nouveau', 'xvmc', 'lima', 'panfrost', 'all'],\n  description : 'List of tools to build. (Note: `intel-ui` selects `intel`)',\n)\noption(\n  'power8',\n  type : 'combo',\n  value : 'auto',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Enable power8 optimizations.',\n)\noption(\n  'xlib-lease',\n  type : 'combo',\n  value : 'auto',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Enable VK_EXT_acquire_xlib_display.'\n)\noption(\n  'glx-direct',\n  type : 'boolean',\n  value : true,\n  description : 'Enable direct rendering in GLX and EGL for DRI',\n)\noption(\n  'prefer-iris',\n  type : 'boolean',\n  value : true,\n  description : 'Prefer new Intel iris driver over older i965 driver'\n)\noption('egl-lib-suffix',\n  type : 'string',\n  value : '',\n  description : 'Suffix to append to EGL library name.  Default: none.'\n)\noption(\n  'gles-lib-suffix',\n  type : 'string',\n  value : '',\n  description : 'Suffix to append to GLES library names.  Default: none.'\n)\noption(\n  'platform-sdk-version',\n  type : 'integer',\n  min : 25,\n  max : 28,\n  value : 25,\n  description : 'Android Platform SDK version. Default: Nougat version.'\n)\noption(\n  'zstd',\n  type : 'combo',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  value : 'auto',\n  description : 'Use ZSTD instead of ZLIB in some cases.'\n)\n\n```\n\nrequires these programs or packages below pre-installed.\n\n* Programs\n    - pkg-config\n    - bison\n    - flex\n\n* Development Packages\n    - libdrm-dev\n    - libx11-dev\n    - libxext-dev\n    \n``` bash\nmeson build\n```\n\nYou can configure a minimal dependencies mesa given that WSL is not a desktop platform as the following my configuration result:\n\n```\nMessage: Configuration summary:\n\n        prefix:          /usr/local\n        libdir:          lib/x86_64-linux-gnu\n        includedir:      include\n\n        OpenGL:          yes (ES1: yes ES2: yes)\n        OSMesa:          no\n\n        GLX:             Xlib-based (Gallium)\n\n        EGL:             no\n        GBM:             no\n        EGL/Vulkan/VL platforms:   x11\n\n        Vulkan drivers:  no\n\n        llvm:            no\n\n        Gallium drivers: swrast\n        Gallium st:      mesa\n        HUD lmsensors:   no\n\n        Shared-glapi:    yes\n\nBuild targets in project: 97\n```\n\nAs you see this configuration supports quite a few components which are essential for off-screen rendering. Once dependencies check passed fully you can begin to compile and install:\n\n``` bash\nninja -C build && sudo ninja -C build install\n```\n\nAfter compilation and installed as follow:\n\n``` bash\nls -l /usr/local/lib/x86_64-linux-gnu\ntotal 159360\nlrwxrwxrwx 1 root root        10 Feb  7 17:13 libGL.so -> libGL.so.1\nlrwxrwxrwx 1 root root        14 Feb  7 17:13 libGL.so.1 -> libGL.so.1.5.0\n-rwxr-xr-x 1 root root 111044912 Feb  7 17:13 libGL.so.1.5.0\nlrwxrwxrwx 1 root root        14 Feb  7 17:13 libOSMesa.so -> libOSMesa.so.8\nlrwxrwxrwx 1 root root        18 Feb  7 17:13 libOSMesa.so.8 -> libOSMesa.so.8.0.0\n-rwxr-xr-x 1 root root  51541176 Feb  7 17:13 libOSMesa.so.8.0.0\nlrwxrwxrwx 1 root root        13 Feb  7 17:13 libglapi.so -> libglapi.so.0\nlrwxrwxrwx 1 root root        17 Feb  7 17:13 libglapi.so.0 -> libglapi.so.0.0.0\n-rwxr-xr-x 1 root root    337264 Feb  7 17:07 libglapi.so.0.0.0\ndrwxr-xr-x 1 root root       512 Feb  7 17:13 pkgconfig\n```\n\nNOTE:\n- Mesa is installed in `/usr/local/lib/$(uname -p)-linux-gnu` by default. So you have to `ldconfig` so that your linker can find them.\n- libsoftpipe.a will be built but not installed.\n- meson build system will enable compiler's `-g` flag by default unless you are building on the release branch.\n- if you have remodified the **meson_options.txt** and built once and now are about to reconfigure and rebuild, you need to run:\n\n``` bash\nmeson setup --wipe build\n```\n\n## Off-screen Demos\nNow that mesa have been built and installed we can give a try to run an OGL application. Similarly without window system supportd on the WSL, [off-screen rendering](https://mesa3d.org/osmesa.html) is my choice. We can clone the mesa [demos](https://gitlab.freedesktop.org/mesa/demos) which includes a lot of demos besides off-screen demos. \n\n### Requisite\nWe need some more libraries besides libOSMesa and libGL before you can get these off-screen demos worked. They are:\n- [GLU](https://gitlab.freedesktop.org/mesa/glu)\n- libm\n\nTo build these demos:\n``` bash\ngcc osdemo.c -o osdemo -g -I/home/luc/github/demos/src/util -lGL -lGLU -lOSMesa -lm\n```\n\nThe executable osdemo saves the rendered pixels as the portable pixmap format. You need to covert it to image format e.g. jpg. You may do this with `pnmtojpeg output.ppm > output.jpg`.\n\n<div align=center>{% asset_img \"osdemo.jpg\" \"osdemo\" %}</div>\n\n## OSMesa Call Graphs\nMesa supports many features from software pipelines to hardware drivers. For example [Gallium](https://www.freedesktop.org/wiki/Software/gallium/), it features with several software or hardware implementations which include the two software pipelines, softpipe and [llvmpipe](https://www.mesa3d.org/llvmpipe.html). With the different pipes enabled will the calls walk in the different paths. \n\n### Three Different Build Configuration (reference to **meson_options.txt**)\n| Option | *platform* | *glx* | *dri-drivers* | *gallium-drivers* | *llvm* | *osmesa* |\n|-|-|-|-|-|-|-|\n| **llvmpipe** | x11 | gallium-xlib | | swrast | true  | gallium |\n| **softpipe** | x11 | gallium-xlib | | swrast | false | gallium |\n| **tnl**      | x11 | gallium-xlib | | swrast | true  | classic |\n\n### Three Different Call Paths\n#### Context\n<div align=center>{% asset_img OSMesaCreateContextExt.png \"context initialization\" %}</div>\n\nNOTE: As for softpipe and llvmpipe `gl_api` and `gl_context` are created respectively while both of them are created in one path for the classic osmesa.\n\n#### Draw\n<div align=center>{% asset_img PopMatrix.png \"draw command\" %}</div>\n\n## Gallium-Based GLX Demos\nIf you want to know the full graphic stack of an OpenGL demo, you can not get rid of the window system. That is why I will try some GLX demos. Evidently GLX demos must depend on X11. You can cope with this problem by installing [vcXsrv](https://sourceforge.net/projects/vcxsrv/) on the Windows 10 which hosts your WSL. \n\n<div align=center>{% asset_img glxgears.png \"glx demo\" %}</div>\n\nThis time I still choose the gallium-xlib with softpipe. The following call graph shows the path that GLX context is created.\n\n<div align=center>{% asset_img glXCreateContext.png \"glx context creation\" %}</div>\n\nAs we know, Mesa is quite modularized and flexible. How does it take the path that `softpipe_create_context` rather than other pipe contexts? The [st_manager](https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/include/state_tracker/st_api.h) is a key structure.\n\n`struct pipe_screen` has a callback function that will be set to `softpipe_create_context`. The following calls will create `struct pipe_screen` that will be set to the `st_manager`.\n\n<div align=center>{% asset_img glXChooseVisual.png \"pipe_screen creation\" %}</div>\n\nTo bind the intended gallium driver backend to Mesa there must be something done before `glXChooseVisual` is called. It's started by the library `init()` and prepare the global variables.\n\n[xm_public.h](https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/state_trackers/glx/xlib/xm_public.h)\n\n``` c\n/* This is the driver interface required by the glx/xlib state tracker. \n */\nstruct xm_driver {\n   struct pipe_screen *(*create_pipe_screen)( Display *display );\n   struct st_api *(*create_st_api)( void );\n};\n\nextern void\nxmesa_set_driver( const struct xm_driver *driver );\n```\n\n[xlib.c](https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/targets/libgl-xlib/xlib.c)\n\n``` c\n/* Helper function to build a subset of a driver stack consisting of\n * one of the software rasterizers (llvmpipe, softpipe) and the\n * xlib winsys.\n */\nstatic struct pipe_screen *\nswrast_xlib_create_screen( Display *display )\n{\n   struct sw_winsys *winsys;\n   struct pipe_screen *screen = NULL;\n\n   /* Create the underlying winsys, which performs presents to Xlib\n    * drawables:\n    */\n   winsys = xlib_create_sw_winsys( display );\n   if (winsys == NULL)\n      return NULL;\n\n   /* Create a software rasterizer on top of that winsys:\n    */\n   screen = sw_screen_create( winsys );\n   if (screen == NULL)\n      goto fail;\n\n   /* Inject any wrapping layers we want to here:\n    */\n   return debug_screen_wrap( screen );\n\nfail:\n   if (winsys)\n      winsys->destroy( winsys );\n\n   return NULL;\n}\n\nstatic struct xm_driver xlib_driver = \n{\n   .create_pipe_screen = swrast_xlib_create_screen,\n   .create_st_api = st_gl_api_create,\n};\n\n\n/* Build the rendering stack.\n *\n * NOTE: The obsolete symbols _init and _fini\n *\n * signature:\n * void _init(void);\n * void _fini(void);\n *\n * The linker recoginizes special symbols _init and _fini. If a dynamic library\n * exports a routine named _init, then that code is executed after the loading,\n * before dlopen() returns. If the dynamic library exports a routine named _fini,\n * then that routine is called just before the library is unloaded. In case you\n * need to avoid linking against the system startup files,this can be done by\n * giving gcc the \"-nostartfiles\" parameter on the command line.\n * Using these routines, or the gcc -nostartfiles of -nostdlib options, is not\n * recommended. Their use may result in undesired behavior, since the constructor/\n * destructor routines will not be executed(unless special measures are taken).\n * Instead, libraries should export routines using the __attribute__((constructor))\n * and __attribute__((destructor)) function attributes. Constructor routines are\n * executed before dlopen() returns, and destructor routines ared executed before\n * dlclose() returns.\n */\nstatic void _init( void ) __attribute__((constructor));\nstatic void _init( void )\n{\n   /* Initialize the xlib libgl code, pass in the winsys:\n    */\n   xmesa_set_driver( &xlib_driver );\n}\n```\n\nwhere define the `xlib_driver` and set by `_init()`.\n\n[sw_helper.h](https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/auxiliary/target-helpers/sw_helper.h)\n\n``` c\nstatic inline struct pipe_screen *\nsw_screen_create_named(struct sw_winsys *winsys, const char *driver)\n{\n   struct pipe_screen *screen = NULL;\n\n#if defined(GALLIUM_LLVMPIPE)\n   if (screen == NULL && strcmp(driver, \"llvmpipe\") == 0)\n      screen = llvmpipe_create_screen(winsys);\n#endif\n\n#if defined(GALLIUM_VIRGL)\n   if (screen == NULL && strcmp(driver, \"virpipe\") == 0) {\n      struct virgl_winsys *vws;\n      vws = virgl_vtest_winsys_wrap(winsys);\n      screen = virgl_create_screen(vws, NULL);\n   }\n#endif\n\n#if defined(GALLIUM_SOFTPIPE)\n   if (screen == NULL && strcmp(driver, \"softpipe\") == 0)\n      screen = softpipe_create_screen(winsys);\n#endif\n\n#if defined(GALLIUM_SWR)\n   if (screen == NULL && strcmp(driver, \"swr\") == 0)\n      screen = swr_create_screen(winsys);\n#endif\n\n#if defined(GALLIUM_ZINK)\n   if (screen == NULL && strcmp(driver, \"zink\") == 0)\n      screen = zink_create_screen(winsys);\n#endif\n\n   return screen;\n}\n\n\nstruct pipe_screen *\nsw_screen_create(struct sw_winsys *winsys)\n{\n   const char *default_driver;\n   const char *driver;\n\n#if defined(GALLIUM_LLVMPIPE)\n   default_driver = \"llvmpipe\";\n#elif defined(GALLIUM_SOFTPIPE)\n   default_driver = \"softpipe\";\n#elif defined(GALLIUM_SWR)\n   default_driver = \"swr\";\n#elif defined(GALLIUM_ZINK)\n   default_driver = \"zink\";\n#else\n   default_driver = \"\";\n#endif\n\n   driver = debug_get_option(\"GALLIUM_DRIVER\", default_driver);\n   return sw_screen_create_named(winsys, driver);\n}\n```\n\n[xm_api.c](https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/state_trackers/glx/xlib/xm_api.c)\n\n``` c\n/* Driver interface routines, set up by xlib backend on library\n * _init().  These are global in the same way that function names are\n * global.\n */\nstatic struct xm_driver driver;\nstatic struct st_api *stapi;\n\nvoid xmesa_set_driver( const struct xm_driver *templ )\n{\n   driver = *templ;\n   stapi = driver.create_st_api();\n\n   xmesa_strict_invalidate =\n      debug_get_bool_option(\"XMESA_STRICT_INVALIDATE\", FALSE);\n}\n\nstatic XMesaDisplay\nxmesa_init_display( Display *display )\n{\n   static mtx_t init_mutex = _MTX_INITIALIZER_NP;\n   XMesaDisplay xmdpy;\n   XMesaExtDisplayInfo *info;\n\n   if (display == NULL) {\n      return NULL;\n   }\n\n   mtx_lock(&init_mutex);\n\n   /* Look for XMesaDisplay which corresponds to this display */\n   info = MesaExtInfo.head;\n   while(info) {\n      if (info->display == display) {\n         /* Found it */\n         mtx_unlock(&init_mutex);\n         return  &info->mesaDisplay;\n      }\n      info = info->next;\n   }\n\n   /* Not found.  Create new XMesaDisplay */\n   /* first allocate X-related resources and hook destroy callback */\n\n   /* allocate mesa display info */\n   info = (XMesaExtDisplayInfo *) Xmalloc(sizeof(XMesaExtDisplayInfo));\n   if (info == NULL) {\n      mtx_unlock(&init_mutex);\n      return NULL;\n   }\n   info->display = display;\n\n   xmdpy = &info->mesaDisplay; /* to be filled out below */\n   xmdpy->display = display;\n   xmdpy->pipe = NULL;\n\n   xmdpy->smapi = CALLOC_STRUCT(st_manager);\n   if (!xmdpy->smapi) {\n      Xfree(info);\n      mtx_unlock(&init_mutex);\n      return NULL;\n   }\n\n   xmdpy->screen = driver.create_pipe_screen(display);\n   if (!xmdpy->screen) {\n      free(xmdpy->smapi);\n      Xfree(info);\n      mtx_unlock(&init_mutex);\n      return NULL;\n   }\n\n   /* At this point, both smapi and screen are known to be valid */\n   xmdpy->smapi->screen = xmdpy->screen;\n   xmdpy->smapi->get_param = xmesa_get_param;\n   (void) mtx_init(&xmdpy->mutex, mtx_plain);\n\n   /* chain to the list of displays */\n   _XLockMutex(_Xglobal_lock);\n   info->next = MesaExtInfo.head;\n   MesaExtInfo.head = info;\n   MesaExtInfo.ndisplays++;\n   _XUnlockMutex(_Xglobal_lock);\n\n   mtx_unlock(&init_mutex);\n\n   return xmdpy;\n}\n```\n\nwhere `driver.create_pipe_screen(display)` is instantiated as `xlib_driver.swrast_xlib_create_screen`. As we see, the dynamic library routine `_init()` will set `xlib_driver.create_pipe_screen` to `swrast_xlib_create_screen` that return a `pipe_screen` to be set to the `st_manager->screen`. Eventually those two helper functions decide which gallium driver backend will be used by compilation macros.\n\n## Gallium Genbu\nTo verify the analysis above we will try to add a customized gallium driver named **genbu** as a clone from the existing softpipe based GLX. All that we will do is three parts work below.\n\n- key data structures: genbu_screen, genbu_context, the related callbacks and definitions \n- helper functions for loading software rasterizers for GLX\n- build scripts\n\n### [Added or Modified Sources and Build Scripts](https://gitlab.freedesktop.org/lucmaa/mesa/tree/gallium-gb-1.0)\n\n### Trace\n\n| *belong* | *hook* | *callback* | *caller* | *X/GL API* |\n|-|-|-|-|-|\n| pipe_screen | resource_create | softpipe_resource_create | bufferobj_data | |\n| pipe_context | transfer_map | softpipe_transfer_map | | |\n| pipe_context | create_surface | softpipe_create_surface | st_framebuffer_validate | |\n| pipe_context | flush | softpipe_flush_wrapped | st_context_flush | glXSwapBuffers |\n| pipe_context | clear | softpipe_clear | st_Clear | glClear |\n| pipe_context | draw_vbo | softpipe_draw_vbo | st_draw_vbo | glCallList |\n| pipe_context | draw_vbo | softpipe_draw_vbo | st_draw_vbo | glCallList |\n\n\n## DRI-Based GLX Demos\n\n### Loading\n\n- `__glXInitialize`\n- `driOpenDriver`\n\n``` c\n#if defined(GLX_DIRECT_RENDERING) && !defined(GLX_USE_APPLEGL)\n   glx_direct = !env_var_as_boolean(\"LIBGL_ALWAYS_INDIRECT\", false);\n   glx_accel = !env_var_as_boolean(\"LIBGL_ALWAYS_SOFTWARE\", false);\n\n   dpyPriv->drawHash = __glxHashCreate();\n\n   /*\n    ** Initialize the direct rendering per display data and functions.\n    ** Note: This _must_ be done before calling any other DRI routines\n    ** (e.g., those called in AllocAndFetchScreenConfigs).\n    */\n#if defined(GLX_USE_DRM)\n   if (glx_direct && glx_accel) {\n#if defined(HAVE_DRI3)\n      if (!env_var_as_boolean(\"LIBGL_DRI3_DISABLE\", false))\n         dpyPriv->dri3Display = dri3_create_display(dpy);\n#endif /* HAVE_DRI3 */\n      dpyPriv->dri2Display = dri2CreateDisplay(dpy);\n      dpyPriv->driDisplay = driCreateDisplay(dpy);\n   }\n#endif /* GLX_USE_DRM */\n   if (glx_direct)\n      dpyPriv->driswDisplay = driswCreateDisplay(dpy);\n#endif /* GLX_DIRECT_RENDERING && !GLX_USE_APPLEGL */\n\n#ifdef GLX_USE_APPLEGL\n   if (!applegl_create_display(dpyPriv)) {\n      free(dpyPriv);\n      return NULL;\n   }\n#endif\n\n#ifdef GLX_USE_WINDOWSGL\n   if (glx_direct && glx_accel)\n      dpyPriv->windowsdriDisplay = driwindowsCreateDisplay(dpy);\n#endif\n\n   if (!AllocAndFetchScreenConfigs(dpy, dpyPriv)) {\n      free(dpyPriv);\n      return NULL;\n   }\n```\n\nThis process of loading drivers works similarly with that of gallium-based glx. Compilation macros and environment variables make a difference. There are several approaches to load the specific drivers:\n\n- `dri3_create_display`\n- `dri2CreateDisplay`\n- `driCreateDisplay`\n- `driswCreateDisplay`\n- `applegl_create_display`\n- `driwindowsCreateDisplay`\n\nLet's look into `driCreateDisplay`. Once it manages to attach to `driCreateScreen` which searches and matches the appropriate gallium driver the function `driOpenDriver` will open the **found** driver by its name like \"i965\", \"radeon\", \"nouveau\", etc. These drivers are supposed to be installed at **`LIBGL_DRIVERS_PATH`** or `LIBGL_DRIVERS_DIR`(deprecated) and named as `*_dri.so` by default.\n\nLike Gallium-based GLX's `_init` routine with GCC **`constructor`** attribute, DRI-based GLX also defines a routine `megadriver_stub_init` with `constructor` attribute which allows to load the specific driver in a way of **`__DRIextension`**.\n\n<div align=center>{% asset_img \"gdb.svg\" \"osdemo\" %}</div>\n\n\n``` c\n/**\n * This is a constructor function for the megadriver dynamic library.\n *\n * When the driver is dlopen'ed, this function will run. It will\n * search for the name of the foo_dri.so file that was opened using\n * the dladdr function.\n *\n * After finding foo's name, it will call __driDriverGetExtensions_foo\n * and use the return to update __driDriverExtensions to enable\n * compatibility with older DRI driver loaders.\n */\n__attribute__((constructor)) static void\nmegadriver_stub_init(void);\n```\n\n``` c\n/*\n * Allocate, initialize and return a __DRIdisplayPrivate object.\n * This is called from __glXInitialize() when we are given a new\n * display pointer.\n */\n_X_HIDDEN __GLXDRIdisplay *\ndriCreateDisplay(Display * dpy)\n{\n   struct dri_display *pdpyp;\n   int eventBase, errorBase;\n   int major, minor, patch;\n\n   if (!XF86DRIQueryExtension(dpy, &eventBase, &errorBase)) {\n      return NULL;\n   }\n\n   if (!XF86DRIQueryVersion(dpy, &major, &minor, &patch)) {\n      return NULL;\n   }\n\n   pdpyp = malloc(sizeof *pdpyp);\n   if (!pdpyp) {\n      return NULL;\n   }\n\n   pdpyp->driMajor = major;\n   pdpyp->driMinor = minor;\n   pdpyp->driPatch = patch;\n\n   pdpyp->base.destroyDisplay = driDestroyDisplay;\n   pdpyp->base.createScreen = driCreateScreen;\n\n   return &pdpyp->base;\n}\n```\n\n## Contexts\nThere are a variety of **contexts** in Mesa. They are designed as a framework of layers.\n\n```\n__________________\n|                |\n|   gl_contex    | --------------> standard & general\n|________________|\n\n__________________\n|                |\n|   st_contex    | --------------> adapter\n|________________|\n\n__________________\n|                |\n|  draw_contex   | --------------> driver-specific\n|________________|\n\n```\n\n### gl_context\n{% blockquote %}\nThis is the central context data structure for Mesa. Almost all OpenGL state is contained in this structure. Think of this as a base class from which device drivers will derive sub classes.\n{% endblockquote %}\nApart from OpenGL state it contains several other contexts\n\n- `swrast_context`\n- `swsetup_context`\n- `swtnl_context`\n- `vbo_context`\n- `st_context`\n\n### st_context\n\n### draw_context\n\n### vbo_context\nVBO is short for vertex buffer object. This context derives two kinds of vbo contexts, `vbo_exec_context` and `vbo_save_context` which `vbo_exec_context` is generic for core and compatible ogl and the other is specific for compatible ogl.\n\n#### vbo_exec_vtx_init\n\n- Allocate a `gl_buffer_object` which just is referenced.\n- Initialize vbo attributes including size, type and active size.\n\n#### vbo vs. vao\n\n``` c\nstruct gl_buffer_object\n{\n   GLint RefCount;\n   GLuint Name;\n   GLchar *Label;       \n   GLenum16 Usage;      \n   GLbitfield StorageFlags; \n   GLsizeiptrARB Size;  \n   GLubyte *Data;       \n   GLboolean DeletePending;   \n   GLboolean Written;   \n   GLboolean Purgeable; \n   GLboolean Immutable; \n   gl_buffer_usage UsageHistory; \n   GLuint NumSubDataCalls;\n   GLuint NumMapBufferWriteCalls;\n   struct gl_buffer_mapping Mappings[MAP_COUNT];\n   simple_mtx_t MinMaxCacheMutex;\n   struct hash_table *MinMaxCache;\n   unsigned MinMaxCacheHitIndices;\n   unsigned MinMaxCacheMissIndices;\n   bool MinMaxCacheDirty;\n   bool HandleAllocated; \n};\n\n\nstruct gl_vertex_array_object\n{\n   GLuint Name;\n   GLint RefCount;\n   GLchar *Label;       \n   GLboolean EverBound;\n   bool SharedAndImmutable;\n   struct gl_array_attributes VertexAttrib[VERT_ATTRIB_MAX];\n   struct gl_vertex_buffer_binding BufferBinding[VERT_ATTRIB_MAX];\n   GLbitfield VertexAttribBufferMask;\n   GLbitfield Enabled;\n   GLbitfield _EffEnabledVBO;\n   gl_attribute_map_mode _AttributeMapMode;\n   GLbitfield NewArrays;\n   struct gl_buffer_object *IndexBufferObj;\n};\n```\n\n## Dispatchers\n\n- *`Exec`*: The current dispatch table for non-displaylist-saving execution, either BeginEnd or OutsideBeginEnd\n- *`OutsideBeginEnd`*: The normal dispatch table for non-displaylist-saving, non-begin/end\n- *`Save`*: The dispatch table used between glNewList() and glEndList()\n- *`BeginEnd`*: The dispatch table used between glBegin() and glEnd() (outside of a display list). Only valid functions between those two are set, which is mostly just the set in a GLvertexformat struct.\n- *`ContextLost`*: Dispatch table for when a graphics reset has happened.\n- *`MarshalExec`*: Dispatch table used to marshal API calls from the client program to a separate server thread. NULL if API calls are not being marshalled to another thread.\n- *`CurrentClientDispatch`*: Dispatch table currently in use for fielding API calls from the client program. If API calls are being marshalled to another thread, this refers to *`MarshalExec`*. Otherwise it refers to *`CurrentServerDispatch`*.\n- *`CurrentServerDispatch`*: Dispatch table currently in use for performing API calls. It refers to *`Save`* or *`Exec`*.\n\n\n## Modules\n\n- draw module\n- CSO module\n- translate module\n- VBO module\n- TNL module(Transform & Light)\n\n## draw_xxx_stage\n\n- **`extern struct draw_stage *draw_unfilled_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_twoside_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_offset_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_clip_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_flatshade_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_cull_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_stipple_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_wide_line_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_wide_point_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_validate_stage( struct draw_context *context );`**\n\n## Auxiliary\n\n- cso_cache\n    The CSO cache is used to accelerate preparation of state by saving driver-specific state structure for later use.\n\n- draw\n    Draw is a software TCL pipeline for hardware that lacks vertex shaders or other essential parts of pre-rasterization vertex preparation.\n\n- driver_ddebug\n- driver_noop\n- driver_rbug\n- driver_trace\n- gallivm\n- hud\n- indices\n    Indices provides tools for translating or generating element indices for use with element-based rendering.\n\n- nir\n- os\n    * memory allocation\n    * simple message logging\n    * obtaining run-time configuration option\n    * threading primitives\n    The OS module contains the abstraction for basic operating system services above. This is the bare minimum required to port Gallium to a new platform. It already provides the implementations of these abstractions for the most common platforms. When targeting an embedded platform no implementation will be provided - these must be provided separately.\n\n- pipe-loader\n- pipebuffer\n- postprocess\n- rbug\n- renderonly\n- rtasm\n- target-helpers\n- tgsi\n- translate\n- util\n- vl\n\n## Q&A\n#### When xlib creates pipe screen, *only* software rasterizers or pipes'screen are created. And llvmpipe, softpipe, virgl, swr, unexceptionally, are software rasterizers or virtual GPU. [Zink](https://www.collabora.com/news-and-blog/blog/2018/10/31/introducing-zink-opengl-implementation-vulkan/) is, in brief, a translator from OpenGL to Vulkan and implemented as Gallium driver. So why only software pipes?\n\nThe answer is **`sw_winsys`**. All of target helpers's parameter is a `sw_winsys`. Check mesa source directory: [mesa/src/gallium/winsys](https://gitlab.freedesktop.org/mesa/mesa/tree/master/src/gallium/winsys)\n\n```\namdgpu\netnaviv\nfreedreno\ni915\niris\nkmsro\nlima\nnouveau\npanfrost\nradeon\nsvga\nsw\ntegra\nv3d\nvc4\nvirgl\n```\n\nTo put it simply, specific driver corresponds to specific winsys. The `sw` is for software rasterizers. If you expect to create pipe screen for some driver else, you need to add another target helper with its winsys as parameter like: \n\n```\nstatic inline struct pipe_screen *\ni915_screen_create_named(struct i915_drm_winsys *winsys, const char *driver)\n```\n\nThat means you have to declare a bunch of new interfaces from the top. So you'd better wrap the function to create specific driver's winsys so that it can take a sw_winsys as its parameter like:\n\n\n```\n#if defined(GALLIUM_VIRGL)\n   if (screen == NULL && strcmp(driver, \"virpipe\") == 0) {\n      struct virgl_winsys *vws;\n      vws = virgl_vtest_winsys_wrap(winsys);\n      screen = virgl_create_screen(vws, NULL);\n   }\n#endif\n\n```\n\n\n#### libGL.so is not built until glx option is enabled in **meson_options.txt**.\n\nOnly with essential build-time dependencies for X11 installed and glx option configured is libGL.so built.\n\n#### What role do DRM, DRI and Gallium play in Mesa? \n\n``` meson\n_libdrm_checks = [\n  ['intel', with_dri_i915 or with_gallium_i915],\n  ['amdgpu', with_amd_vk or with_gallium_radeonsi],\n  ['radeon', (with_gallium_radeonsi or with_dri_r100 or with_dri_r200 or\n              with_gallium_r300 or with_gallium_r600)],\n  ['nouveau', (with_gallium_nouveau or with_dri_nouveau)],\n]\n```\n\nDRI and Gallium seem to be respectively different underlying implementation in Mesa. Moreover in term of swrast and i915, you have to choose either of both as you can read the following code snippet in meson.build. In fact DRI is more complicated and staler but Gallium is more smaller and simpler.\n\n``` meson\nif with_dri_swrast and (with_gallium_softpipe or with_gallium_swr)\n  error('Only one swrast provider can be built')\nendif\nif with_dri_i915 and with_gallium_i915\n  error('Only one i915 provider can be built')\nendif\n```\n\n#### What problems are encountered when you build mesa on the WSL?\n\n- dri based GLX requires shared-glapi\n- Gallium-xlib based GLX requires softpipe or llvmpipe\n    * means that `gallium-xlib` is supposed to only support software rasterizers(llvmpipe, softpipe) and virtual GPU(virgl, swr).\n```\noption(\n  'glx',\n  type : 'combo',\n  value : 'xlib',\n  choices : ['auto', 'disabled', 'dri', 'xlib', 'gallium-xlib'],\n  description : 'Build support for GLX platform'\n)\n```\nIn Mesa, glx is implemented in three ways:\n\n| *-based | backend | window system |\n|-|-|-|\n| dri-based | non-sw-pipes | *_drm_winsys |\n| xlib | tnl | sw_winsys |\n| gallium-based | softpipe/llvmpipe | sw_winsys |\n\n\n- OSMesa gallium requires gallium softpipe or llvmpipe\n    * means if `osmesa` is configured as `gallium`, `gallium-drivers` must include `swrast` but the `classic` osmesa uses the fixed-functioned TNL by default.\n```\noption(\n  'osmesa',\n  type : 'combo',\n  value : 'gallium',\n  choices : ['none', 'classic', 'gallium'],\n  description : 'Build OSmesa.'\n)\n```\n- Cannot build GLX support without X11 platform support and at least one OpenGL API\n    * GLX, As the name suggests, is dedicated to X11 winsys.\n\n#### When `__glXInitialize` creates the `Display`, **only** `driswCreateDisplay` returns successfully. Both of `dri2CreateDisplay` and `driCreateDisplay` failed.\n\n- env: WSL on Windows 10 and with vcXsrv installed on the host as X server\n\nThe cause of failure is that vcXsrv has no extensions with DRI or DRI2. This lack of X server extension fails `DRI2QueryExtension` and `XF86DRIQueryExtension` so that the loading of gallium driver is not invoked.\n\n``` c\n/*\n * XextAddDisplay - add a display to this extension\n */\nXExtDisplayInfo *XextAddDisplay (\n    XExtensionInfo *extinfo,\n    Display *dpy,\n    _Xconst char *ext_name,\n    XExtensionHooks *hooks,\n    int nevents,\n    XPointer data)\n{\n    XExtDisplayInfo *dpyinfo;\n\n    dpyinfo = (XExtDisplayInfo *) Xmalloc (sizeof (XExtDisplayInfo));\n    if (!dpyinfo) return NULL;\n    dpyinfo->display = dpy;\n    dpyinfo->data = data;\n    dpyinfo->codes = XInitExtension (dpy, ext_name);\n\n    /*\n     * if the server has the extension, then we can initialize the\n     * appropriate function vectors\n     */\n    if (dpyinfo->codes) {\n\tint i, j;\n\n\tfor (i = 0, j = dpyinfo->codes->first_event; i < nevents; i++, j++) {\n\t    XESetWireToEvent (dpy, j, hooks->wire_to_event);\n\t    XESetEventToWire (dpy, j, hooks->event_to_wire);\n\t}\n\n        /* register extension for XGE */\n        if (strcmp(ext_name, GE_NAME))\n            xgeExtRegister(dpy, dpyinfo->codes->major_opcode, hooks);\n\n\tif (hooks->create_gc)\n\t  XESetCreateGC (dpy, dpyinfo->codes->extension, hooks->create_gc);\n\tif (hooks->copy_gc)\n\t  XESetCopyGC (dpy, dpyinfo->codes->extension, hooks->copy_gc);\n\tif (hooks->flush_gc)\n\t  XESetFlushGC (dpy, dpyinfo->codes->extension, hooks->flush_gc);\n\tif (hooks->free_gc)\n\t  XESetFreeGC (dpy, dpyinfo->codes->extension, hooks->free_gc);\n\tif (hooks->create_font)\n\t  XESetCreateFont (dpy, dpyinfo->codes->extension, hooks->create_font);\n\tif (hooks->free_font)\n\t  XESetFreeFont (dpy, dpyinfo->codes->extension, hooks->free_font);\n\tif (hooks->close_display)\n\t  XESetCloseDisplay (dpy, dpyinfo->codes->extension,\n\t\t\t     hooks->close_display);\n\tif (hooks->error)\n\t  XESetError (dpy, dpyinfo->codes->extension, hooks->error);\n\tif (hooks->error_string)\n\t  XESetErrorString (dpy, dpyinfo->codes->extension,\n\t\t\t    hooks->error_string);\n    } else if (hooks->close_display) {\n\t/* The server doesn't have this extension.\n\t * Use a private Xlib-internal extension to hang the close_display\n\t * hook on so that the \"cache\" (extinfo->cur) is properly cleaned.\n\t * (XBUG 7955)\n\t */\n\tXExtCodes *codes = XAddExtension(dpy);\n\tif (!codes) {\n\t    XFree(dpyinfo);\n\t    return NULL;\n\t}\n\tXESetCloseDisplay (dpy, codes->extension, hooks->close_display);\n    }\n\n    /*\n     * now, chain it onto the list\n     */\n    _XLockMutex(_Xglobal_lock);\n    dpyinfo->next = extinfo->head;\n    extinfo->head = dpyinfo;\n    extinfo->cur = dpyinfo;\n    extinfo->ndisplays++;\n    _XUnlockMutex(_Xglobal_lock);\n    return dpyinfo;\n}\n```\n\n","source":"_posts/mesa.md","raw":"---\ntitle: Notes for Mesa\ndate: 2020-2-4\ntags: [OpenGL]\n---\n[Mesa](https://mesa3d.org/) is an open source implementation for OpenGL. Check [repository](https://gitlab.freedesktop.org/mesa/mesa) for its source code. There are something worth to learn about this project for a graphic driver developer.\n\n## Build\nIt's good choice for exploring any project's source code to start with its build script. So here is the start.\n\n### Dependencies\nMesa is a highly configurable project that means it allows to customize your own particular components by command-line options or a pure text file(meson_options.txt).\n\nGenerally speaking, which dependencies are required is determined by your configuration. For example, the following configuration\n\n```\noption(\n  'platforms',\n  type : 'array',\n  value : ['x11'],\n  choices : [\n    'auto', 'x11', 'wayland', 'drm', 'surfaceless', 'haiku', 'android',\n    'windows',\n  ],\n  description : 'window systems to support. If this is set to `auto`, all platforms applicable will be enabled.'\n)\noption(\n  'dri3',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'disabled', 'enabled'],\n  description : 'enable support for dri3'\n)\noption(\n  'dri-drivers',\n  type : 'array',\n  value : [],\n  choices : ['auto', 'i915', 'i965', 'r100', 'r200', 'nouveau', 'swrast'],\n  description : 'List of dri drivers to build. If this is set to auto all drivers applicable to the target OS/architecture will be built'\n)\noption(\n  'dri-drivers-path',\n  type : 'string',\n  value : '',\n  description : 'Location to install dri drivers. Default: $libdir/dri.'\n)\noption(\n  'dri-search-path',\n  type : 'string',\n  value : '',\n  description : 'Locations to search for dri drivers, passed as colon separated list. Default: dri-drivers-path.'\n)\noption(\n  'gallium-drivers',\n  type : 'array',\n  value : ['swrast'],\n  choices : [\n    'auto', 'kmsro', 'radeonsi', 'r300', 'r600', 'nouveau', 'freedreno',\n    'swrast', 'v3d', 'vc4', 'etnaviv', 'tegra', 'i915', 'svga', 'virgl',\n    'swr', 'panfrost', 'iris', 'lima', 'zink'\n  ],\n  description : 'List of gallium drivers to build. If this is set to auto all drivers applicable to the target OS/architecture will be built'\n)\noption(\n  'gallium-extra-hud',\n  type : 'boolean',\n  value : false,\n  description : 'Enable HUD block/NIC I/O HUD status support',\n)\noption(\n  'gallium-vdpau',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'enable gallium vdpau frontend.',\n)\noption(\n  'vdpau-libs-path',\n  type : 'string',\n  value : '',\n  description : 'path to put vdpau libraries. defaults to $libdir/vdpau.'\n)\noption(\n  'gallium-xvmc',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'enable gallium xvmc frontend.',\n)\noption(\n  'xvmc-libs-path',\n  type : 'string',\n  value : '',\n  description : 'path to put xvmc libraries. defaults to $libdir.'\n)\noption(\n  'gallium-omx',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'disabled', 'bellagio', 'tizonia'],\n  description : 'enable gallium omx frontend.',\n)\noption(\n  'omx-libs-path',\n  type : 'string',\n  value : '',\n  description : 'path to put omx libraries. defaults to omx-bellagio pkg-config pluginsdir.'\n)\noption(\n  'gallium-va',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'enable gallium va frontend.',\n)\noption(\n  'va-libs-path',\n  type : 'string',\n  value : '',\n  description : 'path to put va libraries. defaults to $libdir/dri.'\n)\noption(\n  'gallium-xa',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'enable gallium xa frontend.',\n)\noption(\n  'gallium-nine',\n  type : 'boolean',\n  value : false,\n  description : 'build gallium \"nine\" Direct3D 9.x frontend.',\n)\noption(\n  'gallium-opencl',\n  type : 'combo',\n  choices : ['icd', 'standalone', 'disabled'],\n  value : 'disabled',\n  description : 'build gallium \"clover\" OpenCL frontend.',\n)\noption(\n  'opencl-spirv',\n  type : 'boolean',\n  value : false,\n  description : 'build gallium \"clover\" OpenCL frontend with SPIR-V binary support.',\n)\noption(\n  'd3d-drivers-path',\n  type : 'string',\n  value : '',\n  description : 'Location of D3D drivers. Default: $libdir/d3d',\n)\noption(\n  'vulkan-drivers',\n  type : 'array',\n  value : [],\n  choices : ['auto', 'amd', 'freedreno', 'intel'],\n  description : 'List of vulkan drivers to build. If this is set to auto all drivers applicable to the target OS/architecture will be built'\n)\noption(\n  'shader-cache',\n  type : 'combo',\n  value : 'auto',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Build with on-disk shader cache support'\n)\noption(\n  'vulkan-icd-dir',\n  type : 'string',\n  value : '',\n  description : 'Location relative to prefix to put vulkan icds on install. Default: $datadir/vulkan/icd.d'\n)\noption(\n  'vulkan-overlay-layer',\n  type : 'boolean',\n  value : false,\n  description : 'Whether to build the vulkan overlay layer'\n)\noption(\n  'vulkan-device-select-layer',\n  type : 'boolean',\n  value : false,\n  description : 'Whether to build the vulkan device select layer'\n)\noption(\n  'shared-glapi',\n  type : 'combo',\n  value : 'enabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Whether to build a shared or static glapi. Defaults to false on Windows, true elsewhere'\n)\noption(\n  'gles1',\n  type : 'combo',\n  value : 'enabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Build support for OpenGL ES 1.x'\n)\noption(\n  'gles2',\n  type : 'combo',\n  value : 'enabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Build support for OpenGL ES 2.x and 3.x'\n)\noption(\n  'opengl',\n  type : 'boolean',\n  value : true,\n  description : 'Build support for OpenGL (all versions)'\n)\noption(\n  'gbm',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Build support for gbm platform'\n)\noption(\n  'glx',\n  type : 'combo',\n  value : 'gallium-xlib',\n  choices : ['auto', 'disabled', 'dri', 'xlib', 'gallium-xlib'],\n  description : 'Build support for GLX platform'\n)\noption(\n  'egl',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Build support for EGL platform'\n)\noption(\n  'glvnd',\n  type : 'boolean',\n  value : false,\n  description : 'Enable GLVND support.'\n)\noption(\n   'glx-read-only-text',\n   type : 'boolean',\n   value : false,\n   description : 'Disable writable .text section on x86 (decreases performance)'\n)\noption(\n  'llvm',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Build with LLVM support.'\n)\noption(\n  'shared-llvm',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Whether to link LLVM shared or statically.'\n)\noption(\n  'valgrind',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Build with valgrind support'\n)\noption(\n  'libunwind',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Use libunwind for stack-traces'\n)\noption(\n  'lmsensors',\n  type : 'combo',\n  value : 'disabled',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Enable HUD lmsensors support.'\n)\noption(\n  'build-tests',\n  type : 'boolean',\n  value : false,\n  description : 'Build unit tests. Currently this will build *all* unit tests, which may build more than expected.'\n)\noption(\n  'install-intel-gpu-tests',\n  type : 'boolean',\n  value : false,\n  description : 'Build and install Intel unit tests which require the GPU.  This option is for developers and the Intel CI system only.'\n)\noption(\n  'selinux',\n  type : 'boolean',\n  value : false,\n  description : 'Build an SELinux-aware Mesa'\n)\noption(\n  'osmesa',\n  type : 'combo',\n  value : 'none',\n  choices : ['none', 'classic', 'gallium'],\n  description : 'Build OSmesa.'\n)\noption(\n  'osmesa-bits',\n  type : 'combo',\n  value : '8',\n  choices : ['8', '16', '32'],\n  description : 'Number of channel bits for OSMesa.'\n)\noption(\n  'swr-arches',\n  type : 'array',\n  value : ['avx', 'avx2'],\n  choices : ['avx', 'avx2', 'knl', 'skx'],\n  description : 'Architectures to build SWR support for.',\n)\noption(\n  'shared-swr',\n  type : 'boolean',\n  value : true,\n  description : 'Whether to link SWR shared or statically.',\n)\n\noption(\n  'tools',\n  type : 'array',\n  value : [],\n  choices : ['drm-shim', 'etnaviv', 'freedreno', 'glsl', 'intel', 'intel-ui', 'nir', 'nouveau', 'xvmc', 'lima', 'panfrost', 'all'],\n  description : 'List of tools to build. (Note: `intel-ui` selects `intel`)',\n)\noption(\n  'power8',\n  type : 'combo',\n  value : 'auto',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Enable power8 optimizations.',\n)\noption(\n  'xlib-lease',\n  type : 'combo',\n  value : 'auto',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  description : 'Enable VK_EXT_acquire_xlib_display.'\n)\noption(\n  'glx-direct',\n  type : 'boolean',\n  value : true,\n  description : 'Enable direct rendering in GLX and EGL for DRI',\n)\noption(\n  'prefer-iris',\n  type : 'boolean',\n  value : true,\n  description : 'Prefer new Intel iris driver over older i965 driver'\n)\noption('egl-lib-suffix',\n  type : 'string',\n  value : '',\n  description : 'Suffix to append to EGL library name.  Default: none.'\n)\noption(\n  'gles-lib-suffix',\n  type : 'string',\n  value : '',\n  description : 'Suffix to append to GLES library names.  Default: none.'\n)\noption(\n  'platform-sdk-version',\n  type : 'integer',\n  min : 25,\n  max : 28,\n  value : 25,\n  description : 'Android Platform SDK version. Default: Nougat version.'\n)\noption(\n  'zstd',\n  type : 'combo',\n  choices : ['auto', 'true', 'false', 'enabled', 'disabled'],\n  value : 'auto',\n  description : 'Use ZSTD instead of ZLIB in some cases.'\n)\n\n```\n\nrequires these programs or packages below pre-installed.\n\n* Programs\n    - pkg-config\n    - bison\n    - flex\n\n* Development Packages\n    - libdrm-dev\n    - libx11-dev\n    - libxext-dev\n    \n``` bash\nmeson build\n```\n\nYou can configure a minimal dependencies mesa given that WSL is not a desktop platform as the following my configuration result:\n\n```\nMessage: Configuration summary:\n\n        prefix:          /usr/local\n        libdir:          lib/x86_64-linux-gnu\n        includedir:      include\n\n        OpenGL:          yes (ES1: yes ES2: yes)\n        OSMesa:          no\n\n        GLX:             Xlib-based (Gallium)\n\n        EGL:             no\n        GBM:             no\n        EGL/Vulkan/VL platforms:   x11\n\n        Vulkan drivers:  no\n\n        llvm:            no\n\n        Gallium drivers: swrast\n        Gallium st:      mesa\n        HUD lmsensors:   no\n\n        Shared-glapi:    yes\n\nBuild targets in project: 97\n```\n\nAs you see this configuration supports quite a few components which are essential for off-screen rendering. Once dependencies check passed fully you can begin to compile and install:\n\n``` bash\nninja -C build && sudo ninja -C build install\n```\n\nAfter compilation and installed as follow:\n\n``` bash\nls -l /usr/local/lib/x86_64-linux-gnu\ntotal 159360\nlrwxrwxrwx 1 root root        10 Feb  7 17:13 libGL.so -> libGL.so.1\nlrwxrwxrwx 1 root root        14 Feb  7 17:13 libGL.so.1 -> libGL.so.1.5.0\n-rwxr-xr-x 1 root root 111044912 Feb  7 17:13 libGL.so.1.5.0\nlrwxrwxrwx 1 root root        14 Feb  7 17:13 libOSMesa.so -> libOSMesa.so.8\nlrwxrwxrwx 1 root root        18 Feb  7 17:13 libOSMesa.so.8 -> libOSMesa.so.8.0.0\n-rwxr-xr-x 1 root root  51541176 Feb  7 17:13 libOSMesa.so.8.0.0\nlrwxrwxrwx 1 root root        13 Feb  7 17:13 libglapi.so -> libglapi.so.0\nlrwxrwxrwx 1 root root        17 Feb  7 17:13 libglapi.so.0 -> libglapi.so.0.0.0\n-rwxr-xr-x 1 root root    337264 Feb  7 17:07 libglapi.so.0.0.0\ndrwxr-xr-x 1 root root       512 Feb  7 17:13 pkgconfig\n```\n\nNOTE:\n- Mesa is installed in `/usr/local/lib/$(uname -p)-linux-gnu` by default. So you have to `ldconfig` so that your linker can find them.\n- libsoftpipe.a will be built but not installed.\n- meson build system will enable compiler's `-g` flag by default unless you are building on the release branch.\n- if you have remodified the **meson_options.txt** and built once and now are about to reconfigure and rebuild, you need to run:\n\n``` bash\nmeson setup --wipe build\n```\n\n## Off-screen Demos\nNow that mesa have been built and installed we can give a try to run an OGL application. Similarly without window system supportd on the WSL, [off-screen rendering](https://mesa3d.org/osmesa.html) is my choice. We can clone the mesa [demos](https://gitlab.freedesktop.org/mesa/demos) which includes a lot of demos besides off-screen demos. \n\n### Requisite\nWe need some more libraries besides libOSMesa and libGL before you can get these off-screen demos worked. They are:\n- [GLU](https://gitlab.freedesktop.org/mesa/glu)\n- libm\n\nTo build these demos:\n``` bash\ngcc osdemo.c -o osdemo -g -I/home/luc/github/demos/src/util -lGL -lGLU -lOSMesa -lm\n```\n\nThe executable osdemo saves the rendered pixels as the portable pixmap format. You need to covert it to image format e.g. jpg. You may do this with `pnmtojpeg output.ppm > output.jpg`.\n\n<div align=center>{% asset_img \"osdemo.jpg\" \"osdemo\" %}</div>\n\n## OSMesa Call Graphs\nMesa supports many features from software pipelines to hardware drivers. For example [Gallium](https://www.freedesktop.org/wiki/Software/gallium/), it features with several software or hardware implementations which include the two software pipelines, softpipe and [llvmpipe](https://www.mesa3d.org/llvmpipe.html). With the different pipes enabled will the calls walk in the different paths. \n\n### Three Different Build Configuration (reference to **meson_options.txt**)\n| Option | *platform* | *glx* | *dri-drivers* | *gallium-drivers* | *llvm* | *osmesa* |\n|-|-|-|-|-|-|-|\n| **llvmpipe** | x11 | gallium-xlib | | swrast | true  | gallium |\n| **softpipe** | x11 | gallium-xlib | | swrast | false | gallium |\n| **tnl**      | x11 | gallium-xlib | | swrast | true  | classic |\n\n### Three Different Call Paths\n#### Context\n<div align=center>{% asset_img OSMesaCreateContextExt.png \"context initialization\" %}</div>\n\nNOTE: As for softpipe and llvmpipe `gl_api` and `gl_context` are created respectively while both of them are created in one path for the classic osmesa.\n\n#### Draw\n<div align=center>{% asset_img PopMatrix.png \"draw command\" %}</div>\n\n## Gallium-Based GLX Demos\nIf you want to know the full graphic stack of an OpenGL demo, you can not get rid of the window system. That is why I will try some GLX demos. Evidently GLX demos must depend on X11. You can cope with this problem by installing [vcXsrv](https://sourceforge.net/projects/vcxsrv/) on the Windows 10 which hosts your WSL. \n\n<div align=center>{% asset_img glxgears.png \"glx demo\" %}</div>\n\nThis time I still choose the gallium-xlib with softpipe. The following call graph shows the path that GLX context is created.\n\n<div align=center>{% asset_img glXCreateContext.png \"glx context creation\" %}</div>\n\nAs we know, Mesa is quite modularized and flexible. How does it take the path that `softpipe_create_context` rather than other pipe contexts? The [st_manager](https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/include/state_tracker/st_api.h) is a key structure.\n\n`struct pipe_screen` has a callback function that will be set to `softpipe_create_context`. The following calls will create `struct pipe_screen` that will be set to the `st_manager`.\n\n<div align=center>{% asset_img glXChooseVisual.png \"pipe_screen creation\" %}</div>\n\nTo bind the intended gallium driver backend to Mesa there must be something done before `glXChooseVisual` is called. It's started by the library `init()` and prepare the global variables.\n\n[xm_public.h](https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/state_trackers/glx/xlib/xm_public.h)\n\n``` c\n/* This is the driver interface required by the glx/xlib state tracker. \n */\nstruct xm_driver {\n   struct pipe_screen *(*create_pipe_screen)( Display *display );\n   struct st_api *(*create_st_api)( void );\n};\n\nextern void\nxmesa_set_driver( const struct xm_driver *driver );\n```\n\n[xlib.c](https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/targets/libgl-xlib/xlib.c)\n\n``` c\n/* Helper function to build a subset of a driver stack consisting of\n * one of the software rasterizers (llvmpipe, softpipe) and the\n * xlib winsys.\n */\nstatic struct pipe_screen *\nswrast_xlib_create_screen( Display *display )\n{\n   struct sw_winsys *winsys;\n   struct pipe_screen *screen = NULL;\n\n   /* Create the underlying winsys, which performs presents to Xlib\n    * drawables:\n    */\n   winsys = xlib_create_sw_winsys( display );\n   if (winsys == NULL)\n      return NULL;\n\n   /* Create a software rasterizer on top of that winsys:\n    */\n   screen = sw_screen_create( winsys );\n   if (screen == NULL)\n      goto fail;\n\n   /* Inject any wrapping layers we want to here:\n    */\n   return debug_screen_wrap( screen );\n\nfail:\n   if (winsys)\n      winsys->destroy( winsys );\n\n   return NULL;\n}\n\nstatic struct xm_driver xlib_driver = \n{\n   .create_pipe_screen = swrast_xlib_create_screen,\n   .create_st_api = st_gl_api_create,\n};\n\n\n/* Build the rendering stack.\n *\n * NOTE: The obsolete symbols _init and _fini\n *\n * signature:\n * void _init(void);\n * void _fini(void);\n *\n * The linker recoginizes special symbols _init and _fini. If a dynamic library\n * exports a routine named _init, then that code is executed after the loading,\n * before dlopen() returns. If the dynamic library exports a routine named _fini,\n * then that routine is called just before the library is unloaded. In case you\n * need to avoid linking against the system startup files,this can be done by\n * giving gcc the \"-nostartfiles\" parameter on the command line.\n * Using these routines, or the gcc -nostartfiles of -nostdlib options, is not\n * recommended. Their use may result in undesired behavior, since the constructor/\n * destructor routines will not be executed(unless special measures are taken).\n * Instead, libraries should export routines using the __attribute__((constructor))\n * and __attribute__((destructor)) function attributes. Constructor routines are\n * executed before dlopen() returns, and destructor routines ared executed before\n * dlclose() returns.\n */\nstatic void _init( void ) __attribute__((constructor));\nstatic void _init( void )\n{\n   /* Initialize the xlib libgl code, pass in the winsys:\n    */\n   xmesa_set_driver( &xlib_driver );\n}\n```\n\nwhere define the `xlib_driver` and set by `_init()`.\n\n[sw_helper.h](https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/auxiliary/target-helpers/sw_helper.h)\n\n``` c\nstatic inline struct pipe_screen *\nsw_screen_create_named(struct sw_winsys *winsys, const char *driver)\n{\n   struct pipe_screen *screen = NULL;\n\n#if defined(GALLIUM_LLVMPIPE)\n   if (screen == NULL && strcmp(driver, \"llvmpipe\") == 0)\n      screen = llvmpipe_create_screen(winsys);\n#endif\n\n#if defined(GALLIUM_VIRGL)\n   if (screen == NULL && strcmp(driver, \"virpipe\") == 0) {\n      struct virgl_winsys *vws;\n      vws = virgl_vtest_winsys_wrap(winsys);\n      screen = virgl_create_screen(vws, NULL);\n   }\n#endif\n\n#if defined(GALLIUM_SOFTPIPE)\n   if (screen == NULL && strcmp(driver, \"softpipe\") == 0)\n      screen = softpipe_create_screen(winsys);\n#endif\n\n#if defined(GALLIUM_SWR)\n   if (screen == NULL && strcmp(driver, \"swr\") == 0)\n      screen = swr_create_screen(winsys);\n#endif\n\n#if defined(GALLIUM_ZINK)\n   if (screen == NULL && strcmp(driver, \"zink\") == 0)\n      screen = zink_create_screen(winsys);\n#endif\n\n   return screen;\n}\n\n\nstruct pipe_screen *\nsw_screen_create(struct sw_winsys *winsys)\n{\n   const char *default_driver;\n   const char *driver;\n\n#if defined(GALLIUM_LLVMPIPE)\n   default_driver = \"llvmpipe\";\n#elif defined(GALLIUM_SOFTPIPE)\n   default_driver = \"softpipe\";\n#elif defined(GALLIUM_SWR)\n   default_driver = \"swr\";\n#elif defined(GALLIUM_ZINK)\n   default_driver = \"zink\";\n#else\n   default_driver = \"\";\n#endif\n\n   driver = debug_get_option(\"GALLIUM_DRIVER\", default_driver);\n   return sw_screen_create_named(winsys, driver);\n}\n```\n\n[xm_api.c](https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/state_trackers/glx/xlib/xm_api.c)\n\n``` c\n/* Driver interface routines, set up by xlib backend on library\n * _init().  These are global in the same way that function names are\n * global.\n */\nstatic struct xm_driver driver;\nstatic struct st_api *stapi;\n\nvoid xmesa_set_driver( const struct xm_driver *templ )\n{\n   driver = *templ;\n   stapi = driver.create_st_api();\n\n   xmesa_strict_invalidate =\n      debug_get_bool_option(\"XMESA_STRICT_INVALIDATE\", FALSE);\n}\n\nstatic XMesaDisplay\nxmesa_init_display( Display *display )\n{\n   static mtx_t init_mutex = _MTX_INITIALIZER_NP;\n   XMesaDisplay xmdpy;\n   XMesaExtDisplayInfo *info;\n\n   if (display == NULL) {\n      return NULL;\n   }\n\n   mtx_lock(&init_mutex);\n\n   /* Look for XMesaDisplay which corresponds to this display */\n   info = MesaExtInfo.head;\n   while(info) {\n      if (info->display == display) {\n         /* Found it */\n         mtx_unlock(&init_mutex);\n         return  &info->mesaDisplay;\n      }\n      info = info->next;\n   }\n\n   /* Not found.  Create new XMesaDisplay */\n   /* first allocate X-related resources and hook destroy callback */\n\n   /* allocate mesa display info */\n   info = (XMesaExtDisplayInfo *) Xmalloc(sizeof(XMesaExtDisplayInfo));\n   if (info == NULL) {\n      mtx_unlock(&init_mutex);\n      return NULL;\n   }\n   info->display = display;\n\n   xmdpy = &info->mesaDisplay; /* to be filled out below */\n   xmdpy->display = display;\n   xmdpy->pipe = NULL;\n\n   xmdpy->smapi = CALLOC_STRUCT(st_manager);\n   if (!xmdpy->smapi) {\n      Xfree(info);\n      mtx_unlock(&init_mutex);\n      return NULL;\n   }\n\n   xmdpy->screen = driver.create_pipe_screen(display);\n   if (!xmdpy->screen) {\n      free(xmdpy->smapi);\n      Xfree(info);\n      mtx_unlock(&init_mutex);\n      return NULL;\n   }\n\n   /* At this point, both smapi and screen are known to be valid */\n   xmdpy->smapi->screen = xmdpy->screen;\n   xmdpy->smapi->get_param = xmesa_get_param;\n   (void) mtx_init(&xmdpy->mutex, mtx_plain);\n\n   /* chain to the list of displays */\n   _XLockMutex(_Xglobal_lock);\n   info->next = MesaExtInfo.head;\n   MesaExtInfo.head = info;\n   MesaExtInfo.ndisplays++;\n   _XUnlockMutex(_Xglobal_lock);\n\n   mtx_unlock(&init_mutex);\n\n   return xmdpy;\n}\n```\n\nwhere `driver.create_pipe_screen(display)` is instantiated as `xlib_driver.swrast_xlib_create_screen`. As we see, the dynamic library routine `_init()` will set `xlib_driver.create_pipe_screen` to `swrast_xlib_create_screen` that return a `pipe_screen` to be set to the `st_manager->screen`. Eventually those two helper functions decide which gallium driver backend will be used by compilation macros.\n\n## Gallium Genbu\nTo verify the analysis above we will try to add a customized gallium driver named **genbu** as a clone from the existing softpipe based GLX. All that we will do is three parts work below.\n\n- key data structures: genbu_screen, genbu_context, the related callbacks and definitions \n- helper functions for loading software rasterizers for GLX\n- build scripts\n\n### [Added or Modified Sources and Build Scripts](https://gitlab.freedesktop.org/lucmaa/mesa/tree/gallium-gb-1.0)\n\n### Trace\n\n| *belong* | *hook* | *callback* | *caller* | *X/GL API* |\n|-|-|-|-|-|\n| pipe_screen | resource_create | softpipe_resource_create | bufferobj_data | |\n| pipe_context | transfer_map | softpipe_transfer_map | | |\n| pipe_context | create_surface | softpipe_create_surface | st_framebuffer_validate | |\n| pipe_context | flush | softpipe_flush_wrapped | st_context_flush | glXSwapBuffers |\n| pipe_context | clear | softpipe_clear | st_Clear | glClear |\n| pipe_context | draw_vbo | softpipe_draw_vbo | st_draw_vbo | glCallList |\n| pipe_context | draw_vbo | softpipe_draw_vbo | st_draw_vbo | glCallList |\n\n\n## DRI-Based GLX Demos\n\n### Loading\n\n- `__glXInitialize`\n- `driOpenDriver`\n\n``` c\n#if defined(GLX_DIRECT_RENDERING) && !defined(GLX_USE_APPLEGL)\n   glx_direct = !env_var_as_boolean(\"LIBGL_ALWAYS_INDIRECT\", false);\n   glx_accel = !env_var_as_boolean(\"LIBGL_ALWAYS_SOFTWARE\", false);\n\n   dpyPriv->drawHash = __glxHashCreate();\n\n   /*\n    ** Initialize the direct rendering per display data and functions.\n    ** Note: This _must_ be done before calling any other DRI routines\n    ** (e.g., those called in AllocAndFetchScreenConfigs).\n    */\n#if defined(GLX_USE_DRM)\n   if (glx_direct && glx_accel) {\n#if defined(HAVE_DRI3)\n      if (!env_var_as_boolean(\"LIBGL_DRI3_DISABLE\", false))\n         dpyPriv->dri3Display = dri3_create_display(dpy);\n#endif /* HAVE_DRI3 */\n      dpyPriv->dri2Display = dri2CreateDisplay(dpy);\n      dpyPriv->driDisplay = driCreateDisplay(dpy);\n   }\n#endif /* GLX_USE_DRM */\n   if (glx_direct)\n      dpyPriv->driswDisplay = driswCreateDisplay(dpy);\n#endif /* GLX_DIRECT_RENDERING && !GLX_USE_APPLEGL */\n\n#ifdef GLX_USE_APPLEGL\n   if (!applegl_create_display(dpyPriv)) {\n      free(dpyPriv);\n      return NULL;\n   }\n#endif\n\n#ifdef GLX_USE_WINDOWSGL\n   if (glx_direct && glx_accel)\n      dpyPriv->windowsdriDisplay = driwindowsCreateDisplay(dpy);\n#endif\n\n   if (!AllocAndFetchScreenConfigs(dpy, dpyPriv)) {\n      free(dpyPriv);\n      return NULL;\n   }\n```\n\nThis process of loading drivers works similarly with that of gallium-based glx. Compilation macros and environment variables make a difference. There are several approaches to load the specific drivers:\n\n- `dri3_create_display`\n- `dri2CreateDisplay`\n- `driCreateDisplay`\n- `driswCreateDisplay`\n- `applegl_create_display`\n- `driwindowsCreateDisplay`\n\nLet's look into `driCreateDisplay`. Once it manages to attach to `driCreateScreen` which searches and matches the appropriate gallium driver the function `driOpenDriver` will open the **found** driver by its name like \"i965\", \"radeon\", \"nouveau\", etc. These drivers are supposed to be installed at **`LIBGL_DRIVERS_PATH`** or `LIBGL_DRIVERS_DIR`(deprecated) and named as `*_dri.so` by default.\n\nLike Gallium-based GLX's `_init` routine with GCC **`constructor`** attribute, DRI-based GLX also defines a routine `megadriver_stub_init` with `constructor` attribute which allows to load the specific driver in a way of **`__DRIextension`**.\n\n<div align=center>{% asset_img \"gdb.svg\" \"osdemo\" %}</div>\n\n\n``` c\n/**\n * This is a constructor function for the megadriver dynamic library.\n *\n * When the driver is dlopen'ed, this function will run. It will\n * search for the name of the foo_dri.so file that was opened using\n * the dladdr function.\n *\n * After finding foo's name, it will call __driDriverGetExtensions_foo\n * and use the return to update __driDriverExtensions to enable\n * compatibility with older DRI driver loaders.\n */\n__attribute__((constructor)) static void\nmegadriver_stub_init(void);\n```\n\n``` c\n/*\n * Allocate, initialize and return a __DRIdisplayPrivate object.\n * This is called from __glXInitialize() when we are given a new\n * display pointer.\n */\n_X_HIDDEN __GLXDRIdisplay *\ndriCreateDisplay(Display * dpy)\n{\n   struct dri_display *pdpyp;\n   int eventBase, errorBase;\n   int major, minor, patch;\n\n   if (!XF86DRIQueryExtension(dpy, &eventBase, &errorBase)) {\n      return NULL;\n   }\n\n   if (!XF86DRIQueryVersion(dpy, &major, &minor, &patch)) {\n      return NULL;\n   }\n\n   pdpyp = malloc(sizeof *pdpyp);\n   if (!pdpyp) {\n      return NULL;\n   }\n\n   pdpyp->driMajor = major;\n   pdpyp->driMinor = minor;\n   pdpyp->driPatch = patch;\n\n   pdpyp->base.destroyDisplay = driDestroyDisplay;\n   pdpyp->base.createScreen = driCreateScreen;\n\n   return &pdpyp->base;\n}\n```\n\n## Contexts\nThere are a variety of **contexts** in Mesa. They are designed as a framework of layers.\n\n```\n__________________\n|                |\n|   gl_contex    | --------------> standard & general\n|________________|\n\n__________________\n|                |\n|   st_contex    | --------------> adapter\n|________________|\n\n__________________\n|                |\n|  draw_contex   | --------------> driver-specific\n|________________|\n\n```\n\n### gl_context\n{% blockquote %}\nThis is the central context data structure for Mesa. Almost all OpenGL state is contained in this structure. Think of this as a base class from which device drivers will derive sub classes.\n{% endblockquote %}\nApart from OpenGL state it contains several other contexts\n\n- `swrast_context`\n- `swsetup_context`\n- `swtnl_context`\n- `vbo_context`\n- `st_context`\n\n### st_context\n\n### draw_context\n\n### vbo_context\nVBO is short for vertex buffer object. This context derives two kinds of vbo contexts, `vbo_exec_context` and `vbo_save_context` which `vbo_exec_context` is generic for core and compatible ogl and the other is specific for compatible ogl.\n\n#### vbo_exec_vtx_init\n\n- Allocate a `gl_buffer_object` which just is referenced.\n- Initialize vbo attributes including size, type and active size.\n\n#### vbo vs. vao\n\n``` c\nstruct gl_buffer_object\n{\n   GLint RefCount;\n   GLuint Name;\n   GLchar *Label;       \n   GLenum16 Usage;      \n   GLbitfield StorageFlags; \n   GLsizeiptrARB Size;  \n   GLubyte *Data;       \n   GLboolean DeletePending;   \n   GLboolean Written;   \n   GLboolean Purgeable; \n   GLboolean Immutable; \n   gl_buffer_usage UsageHistory; \n   GLuint NumSubDataCalls;\n   GLuint NumMapBufferWriteCalls;\n   struct gl_buffer_mapping Mappings[MAP_COUNT];\n   simple_mtx_t MinMaxCacheMutex;\n   struct hash_table *MinMaxCache;\n   unsigned MinMaxCacheHitIndices;\n   unsigned MinMaxCacheMissIndices;\n   bool MinMaxCacheDirty;\n   bool HandleAllocated; \n};\n\n\nstruct gl_vertex_array_object\n{\n   GLuint Name;\n   GLint RefCount;\n   GLchar *Label;       \n   GLboolean EverBound;\n   bool SharedAndImmutable;\n   struct gl_array_attributes VertexAttrib[VERT_ATTRIB_MAX];\n   struct gl_vertex_buffer_binding BufferBinding[VERT_ATTRIB_MAX];\n   GLbitfield VertexAttribBufferMask;\n   GLbitfield Enabled;\n   GLbitfield _EffEnabledVBO;\n   gl_attribute_map_mode _AttributeMapMode;\n   GLbitfield NewArrays;\n   struct gl_buffer_object *IndexBufferObj;\n};\n```\n\n## Dispatchers\n\n- *`Exec`*: The current dispatch table for non-displaylist-saving execution, either BeginEnd or OutsideBeginEnd\n- *`OutsideBeginEnd`*: The normal dispatch table for non-displaylist-saving, non-begin/end\n- *`Save`*: The dispatch table used between glNewList() and glEndList()\n- *`BeginEnd`*: The dispatch table used between glBegin() and glEnd() (outside of a display list). Only valid functions between those two are set, which is mostly just the set in a GLvertexformat struct.\n- *`ContextLost`*: Dispatch table for when a graphics reset has happened.\n- *`MarshalExec`*: Dispatch table used to marshal API calls from the client program to a separate server thread. NULL if API calls are not being marshalled to another thread.\n- *`CurrentClientDispatch`*: Dispatch table currently in use for fielding API calls from the client program. If API calls are being marshalled to another thread, this refers to *`MarshalExec`*. Otherwise it refers to *`CurrentServerDispatch`*.\n- *`CurrentServerDispatch`*: Dispatch table currently in use for performing API calls. It refers to *`Save`* or *`Exec`*.\n\n\n## Modules\n\n- draw module\n- CSO module\n- translate module\n- VBO module\n- TNL module(Transform & Light)\n\n## draw_xxx_stage\n\n- **`extern struct draw_stage *draw_unfilled_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_twoside_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_offset_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_clip_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_flatshade_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_cull_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_stipple_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_wide_line_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_wide_point_stage( struct draw_context *context );`**\n- **`extern struct draw_stage *draw_validate_stage( struct draw_context *context );`**\n\n## Auxiliary\n\n- cso_cache\n    The CSO cache is used to accelerate preparation of state by saving driver-specific state structure for later use.\n\n- draw\n    Draw is a software TCL pipeline for hardware that lacks vertex shaders or other essential parts of pre-rasterization vertex preparation.\n\n- driver_ddebug\n- driver_noop\n- driver_rbug\n- driver_trace\n- gallivm\n- hud\n- indices\n    Indices provides tools for translating or generating element indices for use with element-based rendering.\n\n- nir\n- os\n    * memory allocation\n    * simple message logging\n    * obtaining run-time configuration option\n    * threading primitives\n    The OS module contains the abstraction for basic operating system services above. This is the bare minimum required to port Gallium to a new platform. It already provides the implementations of these abstractions for the most common platforms. When targeting an embedded platform no implementation will be provided - these must be provided separately.\n\n- pipe-loader\n- pipebuffer\n- postprocess\n- rbug\n- renderonly\n- rtasm\n- target-helpers\n- tgsi\n- translate\n- util\n- vl\n\n## Q&A\n#### When xlib creates pipe screen, *only* software rasterizers or pipes'screen are created. And llvmpipe, softpipe, virgl, swr, unexceptionally, are software rasterizers or virtual GPU. [Zink](https://www.collabora.com/news-and-blog/blog/2018/10/31/introducing-zink-opengl-implementation-vulkan/) is, in brief, a translator from OpenGL to Vulkan and implemented as Gallium driver. So why only software pipes?\n\nThe answer is **`sw_winsys`**. All of target helpers's parameter is a `sw_winsys`. Check mesa source directory: [mesa/src/gallium/winsys](https://gitlab.freedesktop.org/mesa/mesa/tree/master/src/gallium/winsys)\n\n```\namdgpu\netnaviv\nfreedreno\ni915\niris\nkmsro\nlima\nnouveau\npanfrost\nradeon\nsvga\nsw\ntegra\nv3d\nvc4\nvirgl\n```\n\nTo put it simply, specific driver corresponds to specific winsys. The `sw` is for software rasterizers. If you expect to create pipe screen for some driver else, you need to add another target helper with its winsys as parameter like: \n\n```\nstatic inline struct pipe_screen *\ni915_screen_create_named(struct i915_drm_winsys *winsys, const char *driver)\n```\n\nThat means you have to declare a bunch of new interfaces from the top. So you'd better wrap the function to create specific driver's winsys so that it can take a sw_winsys as its parameter like:\n\n\n```\n#if defined(GALLIUM_VIRGL)\n   if (screen == NULL && strcmp(driver, \"virpipe\") == 0) {\n      struct virgl_winsys *vws;\n      vws = virgl_vtest_winsys_wrap(winsys);\n      screen = virgl_create_screen(vws, NULL);\n   }\n#endif\n\n```\n\n\n#### libGL.so is not built until glx option is enabled in **meson_options.txt**.\n\nOnly with essential build-time dependencies for X11 installed and glx option configured is libGL.so built.\n\n#### What role do DRM, DRI and Gallium play in Mesa? \n\n``` meson\n_libdrm_checks = [\n  ['intel', with_dri_i915 or with_gallium_i915],\n  ['amdgpu', with_amd_vk or with_gallium_radeonsi],\n  ['radeon', (with_gallium_radeonsi or with_dri_r100 or with_dri_r200 or\n              with_gallium_r300 or with_gallium_r600)],\n  ['nouveau', (with_gallium_nouveau or with_dri_nouveau)],\n]\n```\n\nDRI and Gallium seem to be respectively different underlying implementation in Mesa. Moreover in term of swrast and i915, you have to choose either of both as you can read the following code snippet in meson.build. In fact DRI is more complicated and staler but Gallium is more smaller and simpler.\n\n``` meson\nif with_dri_swrast and (with_gallium_softpipe or with_gallium_swr)\n  error('Only one swrast provider can be built')\nendif\nif with_dri_i915 and with_gallium_i915\n  error('Only one i915 provider can be built')\nendif\n```\n\n#### What problems are encountered when you build mesa on the WSL?\n\n- dri based GLX requires shared-glapi\n- Gallium-xlib based GLX requires softpipe or llvmpipe\n    * means that `gallium-xlib` is supposed to only support software rasterizers(llvmpipe, softpipe) and virtual GPU(virgl, swr).\n```\noption(\n  'glx',\n  type : 'combo',\n  value : 'xlib',\n  choices : ['auto', 'disabled', 'dri', 'xlib', 'gallium-xlib'],\n  description : 'Build support for GLX platform'\n)\n```\nIn Mesa, glx is implemented in three ways:\n\n| *-based | backend | window system |\n|-|-|-|\n| dri-based | non-sw-pipes | *_drm_winsys |\n| xlib | tnl | sw_winsys |\n| gallium-based | softpipe/llvmpipe | sw_winsys |\n\n\n- OSMesa gallium requires gallium softpipe or llvmpipe\n    * means if `osmesa` is configured as `gallium`, `gallium-drivers` must include `swrast` but the `classic` osmesa uses the fixed-functioned TNL by default.\n```\noption(\n  'osmesa',\n  type : 'combo',\n  value : 'gallium',\n  choices : ['none', 'classic', 'gallium'],\n  description : 'Build OSmesa.'\n)\n```\n- Cannot build GLX support without X11 platform support and at least one OpenGL API\n    * GLX, As the name suggests, is dedicated to X11 winsys.\n\n#### When `__glXInitialize` creates the `Display`, **only** `driswCreateDisplay` returns successfully. Both of `dri2CreateDisplay` and `driCreateDisplay` failed.\n\n- env: WSL on Windows 10 and with vcXsrv installed on the host as X server\n\nThe cause of failure is that vcXsrv has no extensions with DRI or DRI2. This lack of X server extension fails `DRI2QueryExtension` and `XF86DRIQueryExtension` so that the loading of gallium driver is not invoked.\n\n``` c\n/*\n * XextAddDisplay - add a display to this extension\n */\nXExtDisplayInfo *XextAddDisplay (\n    XExtensionInfo *extinfo,\n    Display *dpy,\n    _Xconst char *ext_name,\n    XExtensionHooks *hooks,\n    int nevents,\n    XPointer data)\n{\n    XExtDisplayInfo *dpyinfo;\n\n    dpyinfo = (XExtDisplayInfo *) Xmalloc (sizeof (XExtDisplayInfo));\n    if (!dpyinfo) return NULL;\n    dpyinfo->display = dpy;\n    dpyinfo->data = data;\n    dpyinfo->codes = XInitExtension (dpy, ext_name);\n\n    /*\n     * if the server has the extension, then we can initialize the\n     * appropriate function vectors\n     */\n    if (dpyinfo->codes) {\n\tint i, j;\n\n\tfor (i = 0, j = dpyinfo->codes->first_event; i < nevents; i++, j++) {\n\t    XESetWireToEvent (dpy, j, hooks->wire_to_event);\n\t    XESetEventToWire (dpy, j, hooks->event_to_wire);\n\t}\n\n        /* register extension for XGE */\n        if (strcmp(ext_name, GE_NAME))\n            xgeExtRegister(dpy, dpyinfo->codes->major_opcode, hooks);\n\n\tif (hooks->create_gc)\n\t  XESetCreateGC (dpy, dpyinfo->codes->extension, hooks->create_gc);\n\tif (hooks->copy_gc)\n\t  XESetCopyGC (dpy, dpyinfo->codes->extension, hooks->copy_gc);\n\tif (hooks->flush_gc)\n\t  XESetFlushGC (dpy, dpyinfo->codes->extension, hooks->flush_gc);\n\tif (hooks->free_gc)\n\t  XESetFreeGC (dpy, dpyinfo->codes->extension, hooks->free_gc);\n\tif (hooks->create_font)\n\t  XESetCreateFont (dpy, dpyinfo->codes->extension, hooks->create_font);\n\tif (hooks->free_font)\n\t  XESetFreeFont (dpy, dpyinfo->codes->extension, hooks->free_font);\n\tif (hooks->close_display)\n\t  XESetCloseDisplay (dpy, dpyinfo->codes->extension,\n\t\t\t     hooks->close_display);\n\tif (hooks->error)\n\t  XESetError (dpy, dpyinfo->codes->extension, hooks->error);\n\tif (hooks->error_string)\n\t  XESetErrorString (dpy, dpyinfo->codes->extension,\n\t\t\t    hooks->error_string);\n    } else if (hooks->close_display) {\n\t/* The server doesn't have this extension.\n\t * Use a private Xlib-internal extension to hang the close_display\n\t * hook on so that the \"cache\" (extinfo->cur) is properly cleaned.\n\t * (XBUG 7955)\n\t */\n\tXExtCodes *codes = XAddExtension(dpy);\n\tif (!codes) {\n\t    XFree(dpyinfo);\n\t    return NULL;\n\t}\n\tXESetCloseDisplay (dpy, codes->extension, hooks->close_display);\n    }\n\n    /*\n     * now, chain it onto the list\n     */\n    _XLockMutex(_Xglobal_lock);\n    dpyinfo->next = extinfo->head;\n    extinfo->head = dpyinfo;\n    extinfo->cur = dpyinfo;\n    extinfo->ndisplays++;\n    _XUnlockMutex(_Xglobal_lock);\n    return dpyinfo;\n}\n```\n\n","slug":"mesa","published":1,"updated":"2020-07-23T04:21:05.973Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhb7pqj4001ux1tsb8jvhxyg","content":"<p><a href=\"https://mesa3d.org/\" target=\"_blank\" rel=\"noopener\">Mesa</a> is an open source implementation for OpenGL. Check <a href=\"https://gitlab.freedesktop.org/mesa/mesa\" target=\"_blank\" rel=\"noopener\">repository</a> for its source code. There are something worth to learn about this project for a graphic driver developer.</p>\n<h2 id=\"Build\"><a href=\"#Build\" class=\"headerlink\" title=\"Build\"></a>Build</h2><p>It’s good choice for exploring any project’s source code to start with its build script. So here is the start.</p>\n<h3 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h3><p>Mesa is a highly configurable project that means it allows to customize your own particular components by command-line options or a pure text file(meson_options.txt).</p>\n<p>Generally speaking, which dependencies are required is determined by your configuration. For example, the following configuration</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">option(</span><br><span class=\"line\">  &apos;platforms&apos;,</span><br><span class=\"line\">  type : &apos;array&apos;,</span><br><span class=\"line\">  value : [&apos;x11&apos;],</span><br><span class=\"line\">  choices : [</span><br><span class=\"line\">    &apos;auto&apos;, &apos;x11&apos;, &apos;wayland&apos;, &apos;drm&apos;, &apos;surfaceless&apos;, &apos;haiku&apos;, &apos;android&apos;,</span><br><span class=\"line\">    &apos;windows&apos;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  description : &apos;window systems to support. If this is set to `auto`, all platforms applicable will be enabled.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;dri3&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;disabled&apos;, &apos;enabled&apos;],</span><br><span class=\"line\">  description : &apos;enable support for dri3&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;dri-drivers&apos;,</span><br><span class=\"line\">  type : &apos;array&apos;,</span><br><span class=\"line\">  value : [],</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;i915&apos;, &apos;i965&apos;, &apos;r100&apos;, &apos;r200&apos;, &apos;nouveau&apos;, &apos;swrast&apos;],</span><br><span class=\"line\">  description : &apos;List of dri drivers to build. If this is set to auto all drivers applicable to the target OS/architecture will be built&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;dri-drivers-path&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;Location to install dri drivers. Default: $libdir/dri.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;dri-search-path&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;Locations to search for dri drivers, passed as colon separated list. Default: dri-drivers-path.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-drivers&apos;,</span><br><span class=\"line\">  type : &apos;array&apos;,</span><br><span class=\"line\">  value : [&apos;swrast&apos;],</span><br><span class=\"line\">  choices : [</span><br><span class=\"line\">    &apos;auto&apos;, &apos;kmsro&apos;, &apos;radeonsi&apos;, &apos;r300&apos;, &apos;r600&apos;, &apos;nouveau&apos;, &apos;freedreno&apos;,</span><br><span class=\"line\">    &apos;swrast&apos;, &apos;v3d&apos;, &apos;vc4&apos;, &apos;etnaviv&apos;, &apos;tegra&apos;, &apos;i915&apos;, &apos;svga&apos;, &apos;virgl&apos;,</span><br><span class=\"line\">    &apos;swr&apos;, &apos;panfrost&apos;, &apos;iris&apos;, &apos;lima&apos;, &apos;zink&apos;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  description : &apos;List of gallium drivers to build. If this is set to auto all drivers applicable to the target OS/architecture will be built&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-extra-hud&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;Enable HUD block/NIC I/O HUD status support&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-vdpau&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;enable gallium vdpau frontend.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;vdpau-libs-path&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;path to put vdpau libraries. defaults to $libdir/vdpau.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-xvmc&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;enable gallium xvmc frontend.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;xvmc-libs-path&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;path to put xvmc libraries. defaults to $libdir.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-omx&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;disabled&apos;, &apos;bellagio&apos;, &apos;tizonia&apos;],</span><br><span class=\"line\">  description : &apos;enable gallium omx frontend.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;omx-libs-path&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;path to put omx libraries. defaults to omx-bellagio pkg-config pluginsdir.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-va&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;enable gallium va frontend.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;va-libs-path&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;path to put va libraries. defaults to $libdir/dri.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-xa&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;enable gallium xa frontend.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-nine&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;build gallium &quot;nine&quot; Direct3D 9.x frontend.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-opencl&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  choices : [&apos;icd&apos;, &apos;standalone&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  description : &apos;build gallium &quot;clover&quot; OpenCL frontend.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;opencl-spirv&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;build gallium &quot;clover&quot; OpenCL frontend with SPIR-V binary support.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;d3d-drivers-path&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;Location of D3D drivers. Default: $libdir/d3d&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;vulkan-drivers&apos;,</span><br><span class=\"line\">  type : &apos;array&apos;,</span><br><span class=\"line\">  value : [],</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;amd&apos;, &apos;freedreno&apos;, &apos;intel&apos;],</span><br><span class=\"line\">  description : &apos;List of vulkan drivers to build. If this is set to auto all drivers applicable to the target OS/architecture will be built&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;shader-cache&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;auto&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Build with on-disk shader cache support&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;vulkan-icd-dir&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;Location relative to prefix to put vulkan icds on install. Default: $datadir/vulkan/icd.d&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;vulkan-overlay-layer&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;Whether to build the vulkan overlay layer&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;vulkan-device-select-layer&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;Whether to build the vulkan device select layer&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;shared-glapi&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;enabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Whether to build a shared or static glapi. Defaults to false on Windows, true elsewhere&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gles1&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;enabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Build support for OpenGL ES 1.x&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gles2&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;enabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Build support for OpenGL ES 2.x and 3.x&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;opengl&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : true,</span><br><span class=\"line\">  description : &apos;Build support for OpenGL (all versions)&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gbm&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Build support for gbm platform&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;glx&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;gallium-xlib&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;disabled&apos;, &apos;dri&apos;, &apos;xlib&apos;, &apos;gallium-xlib&apos;],</span><br><span class=\"line\">  description : &apos;Build support for GLX platform&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;egl&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Build support for EGL platform&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;glvnd&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;Enable GLVND support.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">   &apos;glx-read-only-text&apos;,</span><br><span class=\"line\">   type : &apos;boolean&apos;,</span><br><span class=\"line\">   value : false,</span><br><span class=\"line\">   description : &apos;Disable writable .text section on x86 (decreases performance)&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;llvm&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Build with LLVM support.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;shared-llvm&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Whether to link LLVM shared or statically.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;valgrind&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Build with valgrind support&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;libunwind&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Use libunwind for stack-traces&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;lmsensors&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Enable HUD lmsensors support.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;build-tests&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;Build unit tests. Currently this will build *all* unit tests, which may build more than expected.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;install-intel-gpu-tests&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;Build and install Intel unit tests which require the GPU.  This option is for developers and the Intel CI system only.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;selinux&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;Build an SELinux-aware Mesa&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;osmesa&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;none&apos;,</span><br><span class=\"line\">  choices : [&apos;none&apos;, &apos;classic&apos;, &apos;gallium&apos;],</span><br><span class=\"line\">  description : &apos;Build OSmesa.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;osmesa-bits&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;8&apos;,</span><br><span class=\"line\">  choices : [&apos;8&apos;, &apos;16&apos;, &apos;32&apos;],</span><br><span class=\"line\">  description : &apos;Number of channel bits for OSMesa.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;swr-arches&apos;,</span><br><span class=\"line\">  type : &apos;array&apos;,</span><br><span class=\"line\">  value : [&apos;avx&apos;, &apos;avx2&apos;],</span><br><span class=\"line\">  choices : [&apos;avx&apos;, &apos;avx2&apos;, &apos;knl&apos;, &apos;skx&apos;],</span><br><span class=\"line\">  description : &apos;Architectures to build SWR support for.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;shared-swr&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : true,</span><br><span class=\"line\">  description : &apos;Whether to link SWR shared or statically.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;tools&apos;,</span><br><span class=\"line\">  type : &apos;array&apos;,</span><br><span class=\"line\">  value : [],</span><br><span class=\"line\">  choices : [&apos;drm-shim&apos;, &apos;etnaviv&apos;, &apos;freedreno&apos;, &apos;glsl&apos;, &apos;intel&apos;, &apos;intel-ui&apos;, &apos;nir&apos;, &apos;nouveau&apos;, &apos;xvmc&apos;, &apos;lima&apos;, &apos;panfrost&apos;, &apos;all&apos;],</span><br><span class=\"line\">  description : &apos;List of tools to build. (Note: `intel-ui` selects `intel`)&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;power8&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;auto&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Enable power8 optimizations.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;xlib-lease&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;auto&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Enable VK_EXT_acquire_xlib_display.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;glx-direct&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : true,</span><br><span class=\"line\">  description : &apos;Enable direct rendering in GLX and EGL for DRI&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;prefer-iris&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : true,</span><br><span class=\"line\">  description : &apos;Prefer new Intel iris driver over older i965 driver&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(&apos;egl-lib-suffix&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;Suffix to append to EGL library name.  Default: none.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gles-lib-suffix&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;Suffix to append to GLES library names.  Default: none.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;platform-sdk-version&apos;,</span><br><span class=\"line\">  type : &apos;integer&apos;,</span><br><span class=\"line\">  min : 25,</span><br><span class=\"line\">  max : 28,</span><br><span class=\"line\">  value : 25,</span><br><span class=\"line\">  description : &apos;Android Platform SDK version. Default: Nougat version.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;zstd&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  value : &apos;auto&apos;,</span><br><span class=\"line\">  description : &apos;Use ZSTD instead of ZLIB in some cases.&apos;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>requires these programs or packages below pre-installed.</p>\n<ul>\n<li><p>Programs</p>\n<ul>\n<li>pkg-config</li>\n<li>bison</li>\n<li>flex</li>\n</ul>\n</li>\n<li><p>Development Packages</p>\n<ul>\n<li>libdrm-dev</li>\n<li>libx11-dev</li>\n<li>libxext-dev</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">meson build</span><br></pre></td></tr></table></figure>\n<p>You can configure a minimal dependencies mesa given that WSL is not a desktop platform as the following my configuration result:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Message: Configuration summary:</span><br><span class=\"line\"></span><br><span class=\"line\">        prefix:          /usr/local</span><br><span class=\"line\">        libdir:          lib/x86_64-linux-gnu</span><br><span class=\"line\">        includedir:      include</span><br><span class=\"line\"></span><br><span class=\"line\">        OpenGL:          yes (ES1: yes ES2: yes)</span><br><span class=\"line\">        OSMesa:          no</span><br><span class=\"line\"></span><br><span class=\"line\">        GLX:             Xlib-based (Gallium)</span><br><span class=\"line\"></span><br><span class=\"line\">        EGL:             no</span><br><span class=\"line\">        GBM:             no</span><br><span class=\"line\">        EGL/Vulkan/VL platforms:   x11</span><br><span class=\"line\"></span><br><span class=\"line\">        Vulkan drivers:  no</span><br><span class=\"line\"></span><br><span class=\"line\">        llvm:            no</span><br><span class=\"line\"></span><br><span class=\"line\">        Gallium drivers: swrast</span><br><span class=\"line\">        Gallium st:      mesa</span><br><span class=\"line\">        HUD lmsensors:   no</span><br><span class=\"line\"></span><br><span class=\"line\">        Shared-glapi:    yes</span><br><span class=\"line\"></span><br><span class=\"line\">Build targets in project: 97</span><br></pre></td></tr></table></figure>\n<p>As you see this configuration supports quite a few components which are essential for off-screen rendering. Once dependencies check passed fully you can begin to compile and install:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ninja -C build &amp;&amp; sudo ninja -C build install</span><br></pre></td></tr></table></figure>\n<p>After compilation and installed as follow:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l /usr/<span class=\"built_in\">local</span>/lib/x86_64-linux-gnu</span><br><span class=\"line\">total 159360</span><br><span class=\"line\">lrwxrwxrwx 1 root root        10 Feb  7 17:13 libGL.so -&gt; libGL.so.1</span><br><span class=\"line\">lrwxrwxrwx 1 root root        14 Feb  7 17:13 libGL.so.1 -&gt; libGL.so.1.5.0</span><br><span class=\"line\">-rwxr-xr-x 1 root root 111044912 Feb  7 17:13 libGL.so.1.5.0</span><br><span class=\"line\">lrwxrwxrwx 1 root root        14 Feb  7 17:13 libOSMesa.so -&gt; libOSMesa.so.8</span><br><span class=\"line\">lrwxrwxrwx 1 root root        18 Feb  7 17:13 libOSMesa.so.8 -&gt; libOSMesa.so.8.0.0</span><br><span class=\"line\">-rwxr-xr-x 1 root root  51541176 Feb  7 17:13 libOSMesa.so.8.0.0</span><br><span class=\"line\">lrwxrwxrwx 1 root root        13 Feb  7 17:13 libglapi.so -&gt; libglapi.so.0</span><br><span class=\"line\">lrwxrwxrwx 1 root root        17 Feb  7 17:13 libglapi.so.0 -&gt; libglapi.so.0.0.0</span><br><span class=\"line\">-rwxr-xr-x 1 root root    337264 Feb  7 17:07 libglapi.so.0.0.0</span><br><span class=\"line\">drwxr-xr-x 1 root root       512 Feb  7 17:13 pkgconfig</span><br></pre></td></tr></table></figure>\n<p>NOTE:</p>\n<ul>\n<li>Mesa is installed in <code>/usr/local/lib/$(uname -p)-linux-gnu</code> by default. So you have to <code>ldconfig</code> so that your linker can find them.</li>\n<li>libsoftpipe.a will be built but not installed.</li>\n<li>meson build system will enable compiler’s <code>-g</code> flag by default unless you are building on the release branch.</li>\n<li>if you have remodified the <strong>meson_options.txt</strong> and built once and now are about to reconfigure and rebuild, you need to run:</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">meson setup --wipe build</span><br></pre></td></tr></table></figure>\n<h2 id=\"Off-screen-Demos\"><a href=\"#Off-screen-Demos\" class=\"headerlink\" title=\"Off-screen Demos\"></a>Off-screen Demos</h2><p>Now that mesa have been built and installed we can give a try to run an OGL application. Similarly without window system supportd on the WSL, <a href=\"https://mesa3d.org/osmesa.html\" target=\"_blank\" rel=\"noopener\">off-screen rendering</a> is my choice. We can clone the mesa <a href=\"https://gitlab.freedesktop.org/mesa/demos\" target=\"_blank\" rel=\"noopener\">demos</a> which includes a lot of demos besides off-screen demos. </p>\n<h3 id=\"Requisite\"><a href=\"#Requisite\" class=\"headerlink\" title=\"Requisite\"></a>Requisite</h3><p>We need some more libraries besides libOSMesa and libGL before you can get these off-screen demos worked. They are:</p>\n<ul>\n<li><a href=\"https://gitlab.freedesktop.org/mesa/glu\" target=\"_blank\" rel=\"noopener\">GLU</a></li>\n<li>libm</li>\n</ul>\n<p>To build these demos:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc osdemo.c -o osdemo -g -I/home/luc/github/demos/src/util -lGL -lGLU -lOSMesa -lm</span><br></pre></td></tr></table></figure></p>\n<p>The executable osdemo saves the rendered pixels as the portable pixmap format. You need to covert it to image format e.g. jpg. You may do this with <code>pnmtojpeg output.ppm &gt; output.jpg</code>.</p>\n<div align=center><img src=\"/mesa/osdemo.jpg\" class=\"\" title=\"osdemo\"></div>\n\n<h2 id=\"OSMesa-Call-Graphs\"><a href=\"#OSMesa-Call-Graphs\" class=\"headerlink\" title=\"OSMesa Call Graphs\"></a>OSMesa Call Graphs</h2><p>Mesa supports many features from software pipelines to hardware drivers. For example <a href=\"https://www.freedesktop.org/wiki/Software/gallium/\" target=\"_blank\" rel=\"noopener\">Gallium</a>, it features with several software or hardware implementations which include the two software pipelines, softpipe and <a href=\"https://www.mesa3d.org/llvmpipe.html\" target=\"_blank\" rel=\"noopener\">llvmpipe</a>. With the different pipes enabled will the calls walk in the different paths. </p>\n<h3 id=\"Three-Different-Build-Configuration-reference-to-meson-options-txt\"><a href=\"#Three-Different-Build-Configuration-reference-to-meson-options-txt\" class=\"headerlink\" title=\"Three Different Build Configuration (reference to meson_options.txt)\"></a>Three Different Build Configuration (reference to <strong>meson_options.txt</strong>)</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th><em>platform</em></th>\n<th><em>glx</em></th>\n<th><em>dri-drivers</em></th>\n<th><em>gallium-drivers</em></th>\n<th><em>llvm</em></th>\n<th><em>osmesa</em></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>llvmpipe</strong></td>\n<td>x11</td>\n<td>gallium-xlib</td>\n<td></td>\n<td>swrast</td>\n<td>true</td>\n<td>gallium</td>\n</tr>\n<tr>\n<td><strong>softpipe</strong></td>\n<td>x11</td>\n<td>gallium-xlib</td>\n<td></td>\n<td>swrast</td>\n<td>false</td>\n<td>gallium</td>\n</tr>\n<tr>\n<td><strong>tnl</strong></td>\n<td>x11</td>\n<td>gallium-xlib</td>\n<td></td>\n<td>swrast</td>\n<td>true</td>\n<td>classic</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"Three-Different-Call-Paths\"><a href=\"#Three-Different-Call-Paths\" class=\"headerlink\" title=\"Three Different Call Paths\"></a>Three Different Call Paths</h3><h4 id=\"Context\"><a href=\"#Context\" class=\"headerlink\" title=\"Context\"></a>Context</h4><div align=center><img src=\"/mesa/OSMesaCreateContextExt.png\" class=\"\" title=\"context initialization\"></div>\n\n<p>NOTE: As for softpipe and llvmpipe <code>gl_api</code> and <code>gl_context</code> are created respectively while both of them are created in one path for the classic osmesa.</p>\n<h4 id=\"Draw\"><a href=\"#Draw\" class=\"headerlink\" title=\"Draw\"></a>Draw</h4><div align=center><img src=\"/mesa/PopMatrix.png\" class=\"\" title=\"draw command\"></div>\n\n<h2 id=\"Gallium-Based-GLX-Demos\"><a href=\"#Gallium-Based-GLX-Demos\" class=\"headerlink\" title=\"Gallium-Based GLX Demos\"></a>Gallium-Based GLX Demos</h2><p>If you want to know the full graphic stack of an OpenGL demo, you can not get rid of the window system. That is why I will try some GLX demos. Evidently GLX demos must depend on X11. You can cope with this problem by installing <a href=\"https://sourceforge.net/projects/vcxsrv/\" target=\"_blank\" rel=\"noopener\">vcXsrv</a> on the Windows 10 which hosts your WSL. </p>\n<div align=center><img src=\"/mesa/glxgears.png\" class=\"\" title=\"glx demo\"></div>\n\n<p>This time I still choose the gallium-xlib with softpipe. The following call graph shows the path that GLX context is created.</p>\n<div align=center><img src=\"/mesa/glXCreateContext.png\" class=\"\" title=\"glx context creation\"></div>\n\n<p>As we know, Mesa is quite modularized and flexible. How does it take the path that <code>softpipe_create_context</code> rather than other pipe contexts? The <a href=\"https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/include/state_tracker/st_api.h\" target=\"_blank\" rel=\"noopener\">st_manager</a> is a key structure.</p>\n<p><code>struct pipe_screen</code> has a callback function that will be set to <code>softpipe_create_context</code>. The following calls will create <code>struct pipe_screen</code> that will be set to the <code>st_manager</code>.</p>\n<div align=center><img src=\"/mesa/glXChooseVisual.png\" class=\"\" title=\"pipe_screen creation\"></div>\n\n<p>To bind the intended gallium driver backend to Mesa there must be something done before <code>glXChooseVisual</code> is called. It’s started by the library <code>init()</code> and prepare the global variables.</p>\n<p><a href=\"https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/state_trackers/glx/xlib/xm_public.h\" target=\"_blank\" rel=\"noopener\">xm_public.h</a></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* This is the driver interface required by the glx/xlib state tracker. </span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">xm_driver</span> &#123;</span></span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pipe_screen</span> *(*<span class=\"title\">create_pipe_screen</span>)( <span class=\"title\">Display</span> *<span class=\"title\">display</span> );</span></span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">st_api</span> *(*<span class=\"title\">create_st_api</span>)( <span class=\"title\">void</span> );</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"keyword\">void</span></span><br><span class=\"line\">xmesa_set_driver( <span class=\"keyword\">const</span> struct xm_driver *driver );</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/targets/libgl-xlib/xlib.c\" target=\"_blank\" rel=\"noopener\">xlib.c</a></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Helper function to build a subset of a driver stack consisting of</span></span><br><span class=\"line\"><span class=\"comment\"> * one of the software rasterizers (llvmpipe, softpipe) and the</span></span><br><span class=\"line\"><span class=\"comment\"> * xlib winsys.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pipe_screen</span> *</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">swrast_xlib_create_screen</span>( <span class=\"title\">Display</span> *<span class=\"title\">display</span> )</span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sw_winsys</span> *<span class=\"title\">winsys</span>;</span></span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pipe_screen</span> *<span class=\"title\">screen</span> = <span class=\"title\">NULL</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* Create the underlying winsys, which performs presents to Xlib</span></span><br><span class=\"line\"><span class=\"comment\">    * drawables:</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   winsys = xlib_create_sw_winsys( display );</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (winsys == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* Create a software rasterizer on top of that winsys:</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   screen = sw_screen_create( winsys );</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (screen == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">      <span class=\"keyword\">goto</span> fail;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* Inject any wrapping layers we want to here:</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"keyword\">return</span> debug_screen_wrap( screen );</span><br><span class=\"line\"></span><br><span class=\"line\">fail:</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (winsys)</span><br><span class=\"line\">      winsys-&gt;destroy( winsys );</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">xm_driver</span> <span class=\"title\">xlib_driver</span> = </span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">   .create_pipe_screen = swrast_xlib_create_screen,</span><br><span class=\"line\">   .create_st_api = st_gl_api_create,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Build the rendering stack.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">NOTE:</span> The obsolete symbols _init and _fini</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * signature:</span></span><br><span class=\"line\"><span class=\"comment\"> * void _init(void);</span></span><br><span class=\"line\"><span class=\"comment\"> * void _fini(void);</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * The linker recoginizes special symbols _init and _fini. If a dynamic library</span></span><br><span class=\"line\"><span class=\"comment\"> * exports a routine named _init, then that code is executed after the loading,</span></span><br><span class=\"line\"><span class=\"comment\"> * before dlopen() returns. If the dynamic library exports a routine named _fini,</span></span><br><span class=\"line\"><span class=\"comment\"> * then that routine is called just before the library is unloaded. In case you</span></span><br><span class=\"line\"><span class=\"comment\"> * need to avoid linking against the system startup files,this can be done by</span></span><br><span class=\"line\"><span class=\"comment\"> * giving gcc the \"-nostartfiles\" parameter on the command line.</span></span><br><span class=\"line\"><span class=\"comment\"> * Using these routines, or the gcc -nostartfiles of -nostdlib options, is not</span></span><br><span class=\"line\"><span class=\"comment\"> * recommended. Their use may result in undesired behavior, since the constructor/</span></span><br><span class=\"line\"><span class=\"comment\"> * destructor routines will not be executed(unless special measures are taken).</span></span><br><span class=\"line\"><span class=\"comment\"> * Instead, libraries should export routines using the __attribute__((constructor))</span></span><br><span class=\"line\"><span class=\"comment\"> * and __attribute__((destructor)) function attributes. Constructor routines are</span></span><br><span class=\"line\"><span class=\"comment\"> * executed before dlopen() returns, and destructor routines ared executed before</span></span><br><span class=\"line\"><span class=\"comment\"> * dlclose() returns.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> _init( <span class=\"keyword\">void</span> ) __attribute__((constructor));</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> _init( <span class=\"keyword\">void</span> )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"comment\">/* Initialize the xlib libgl code, pass in the winsys:</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   xmesa_set_driver( &amp;xlib_driver );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>where define the <code>xlib_driver</code> and set by <code>_init()</code>.</p>\n<p><a href=\"https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/auxiliary/target-helpers/sw_helper.h\" target=\"_blank\" rel=\"noopener\">sw_helper.h</a></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">inline</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pipe_screen</span> *</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">sw_screen_create_named</span>(<span class=\"title\">struct</span> <span class=\"title\">sw_winsys</span> *<span class=\"title\">winsys</span>, <span class=\"title\">const</span> <span class=\"title\">char</span> *<span class=\"title\">driver</span>)</span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pipe_screen</span> *<span class=\"title\">screen</span> = <span class=\"title\">NULL</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(GALLIUM_LLVMPIPE)</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (screen == <span class=\"literal\">NULL</span> &amp;&amp; <span class=\"built_in\">strcmp</span>(driver, <span class=\"string\">\"llvmpipe\"</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">      screen = llvmpipe_create_screen(winsys);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(GALLIUM_VIRGL)</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (screen == <span class=\"literal\">NULL</span> &amp;&amp; <span class=\"built_in\">strcmp</span>(driver, <span class=\"string\">\"virpipe\"</span>) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">virgl_winsys</span> *<span class=\"title\">vws</span>;</span></span><br><span class=\"line\">      vws = virgl_vtest_winsys_wrap(winsys);</span><br><span class=\"line\">      screen = virgl_create_screen(vws, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(GALLIUM_SOFTPIPE)</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (screen == <span class=\"literal\">NULL</span> &amp;&amp; <span class=\"built_in\">strcmp</span>(driver, <span class=\"string\">\"softpipe\"</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">      screen = softpipe_create_screen(winsys);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(GALLIUM_SWR)</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (screen == <span class=\"literal\">NULL</span> &amp;&amp; <span class=\"built_in\">strcmp</span>(driver, <span class=\"string\">\"swr\"</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">      screen = swr_create_screen(winsys);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(GALLIUM_ZINK)</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (screen == <span class=\"literal\">NULL</span> &amp;&amp; <span class=\"built_in\">strcmp</span>(driver, <span class=\"string\">\"zink\"</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">      screen = zink_create_screen(winsys);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> screen;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pipe_screen</span> *</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">sw_screen_create</span>(<span class=\"title\">struct</span> <span class=\"title\">sw_winsys</span> *<span class=\"title\">winsys</span>)</span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">   <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *default_driver;</span><br><span class=\"line\">   <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *driver;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(GALLIUM_LLVMPIPE)</span></span><br><span class=\"line\">   default_driver = <span class=\"string\">\"llvmpipe\"</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">elif</span> defined(GALLIUM_SOFTPIPE)</span></span><br><span class=\"line\">   default_driver = <span class=\"string\">\"softpipe\"</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">elif</span> defined(GALLIUM_SWR)</span></span><br><span class=\"line\">   default_driver = <span class=\"string\">\"swr\"</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">elif</span> defined(GALLIUM_ZINK)</span></span><br><span class=\"line\">   default_driver = <span class=\"string\">\"zink\"</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">   default_driver = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">   driver = debug_get_option(<span class=\"string\">\"GALLIUM_DRIVER\"</span>, default_driver);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> sw_screen_create_named(winsys, driver);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/state_trackers/glx/xlib/xm_api.c\" target=\"_blank\" rel=\"noopener\">xm_api.c</a></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Driver interface routines, set up by xlib backend on library</span></span><br><span class=\"line\"><span class=\"comment\"> * _init().  These are global in the same way that function names are</span></span><br><span class=\"line\"><span class=\"comment\"> * global.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">xm_driver</span> <span class=\"title\">driver</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">st_api</span> *<span class=\"title\">stapi</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">xmesa_set_driver</span><span class=\"params\">( <span class=\"keyword\">const</span> struct xm_driver *templ )</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   driver = *templ;</span><br><span class=\"line\">   stapi = driver.create_st_api();</span><br><span class=\"line\"></span><br><span class=\"line\">   xmesa_strict_invalidate =</span><br><span class=\"line\">      debug_get_bool_option(<span class=\"string\">\"XMESA_STRICT_INVALIDATE\"</span>, FALSE);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> XMesaDisplay</span><br><span class=\"line\">xmesa_init_display( Display *display )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">static</span> <span class=\"keyword\">mtx_t</span> init_mutex = _MTX_INITIALIZER_NP;</span><br><span class=\"line\">   XMesaDisplay xmdpy;</span><br><span class=\"line\">   XMesaExtDisplayInfo *info;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (display == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   mtx_lock(&amp;init_mutex);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* Look for XMesaDisplay which corresponds to this display */</span></span><br><span class=\"line\">   info = MesaExtInfo.head;</span><br><span class=\"line\">   <span class=\"keyword\">while</span>(info) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (info-&gt;display == display) &#123;</span><br><span class=\"line\">         <span class=\"comment\">/* Found it */</span></span><br><span class=\"line\">         mtx_unlock(&amp;init_mutex);</span><br><span class=\"line\">         <span class=\"keyword\">return</span>  &amp;info-&gt;mesaDisplay;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      info = info-&gt;next;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* Not found.  Create new XMesaDisplay */</span></span><br><span class=\"line\">   <span class=\"comment\">/* first allocate X-related resources and hook destroy callback */</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* allocate mesa display info */</span></span><br><span class=\"line\">   info = (XMesaExtDisplayInfo *) Xmalloc(<span class=\"keyword\">sizeof</span>(XMesaExtDisplayInfo));</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (info == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">      mtx_unlock(&amp;init_mutex);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   info-&gt;display = display;</span><br><span class=\"line\"></span><br><span class=\"line\">   xmdpy = &amp;info-&gt;mesaDisplay; <span class=\"comment\">/* to be filled out below */</span></span><br><span class=\"line\">   xmdpy-&gt;display = display;</span><br><span class=\"line\">   xmdpy-&gt;pipe = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   xmdpy-&gt;smapi = CALLOC_STRUCT(st_manager);</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!xmdpy-&gt;smapi) &#123;</span><br><span class=\"line\">      Xfree(info);</span><br><span class=\"line\">      mtx_unlock(&amp;init_mutex);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   xmdpy-&gt;screen = driver.create_pipe_screen(display);</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!xmdpy-&gt;screen) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">free</span>(xmdpy-&gt;smapi);</span><br><span class=\"line\">      Xfree(info);</span><br><span class=\"line\">      mtx_unlock(&amp;init_mutex);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* At this point, both smapi and screen are known to be valid */</span></span><br><span class=\"line\">   xmdpy-&gt;smapi-&gt;screen = xmdpy-&gt;screen;</span><br><span class=\"line\">   xmdpy-&gt;smapi-&gt;get_param = xmesa_get_param;</span><br><span class=\"line\">   (<span class=\"keyword\">void</span>) mtx_init(&amp;xmdpy-&gt;mutex, mtx_plain);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* chain to the list of displays */</span></span><br><span class=\"line\">   _XLockMutex(_Xglobal_lock);</span><br><span class=\"line\">   info-&gt;next = MesaExtInfo.head;</span><br><span class=\"line\">   MesaExtInfo.head = info;</span><br><span class=\"line\">   MesaExtInfo.ndisplays++;</span><br><span class=\"line\">   _XUnlockMutex(_Xglobal_lock);</span><br><span class=\"line\"></span><br><span class=\"line\">   mtx_unlock(&amp;init_mutex);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> xmdpy;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>where <code>driver.create_pipe_screen(display)</code> is instantiated as <code>xlib_driver.swrast_xlib_create_screen</code>. As we see, the dynamic library routine <code>_init()</code> will set <code>xlib_driver.create_pipe_screen</code> to <code>swrast_xlib_create_screen</code> that return a <code>pipe_screen</code> to be set to the <code>st_manager-&gt;screen</code>. Eventually those two helper functions decide which gallium driver backend will be used by compilation macros.</p>\n<h2 id=\"Gallium-Genbu\"><a href=\"#Gallium-Genbu\" class=\"headerlink\" title=\"Gallium Genbu\"></a>Gallium Genbu</h2><p>To verify the analysis above we will try to add a customized gallium driver named <strong>genbu</strong> as a clone from the existing softpipe based GLX. All that we will do is three parts work below.</p>\n<ul>\n<li>key data structures: genbu_screen, genbu_context, the related callbacks and definitions </li>\n<li>helper functions for loading software rasterizers for GLX</li>\n<li>build scripts</li>\n</ul>\n<h3 id=\"Added-or-Modified-Sources-and-Build-Scripts\"><a href=\"#Added-or-Modified-Sources-and-Build-Scripts\" class=\"headerlink\" title=\"Added or Modified Sources and Build Scripts\"></a><a href=\"https://gitlab.freedesktop.org/lucmaa/mesa/tree/gallium-gb-1.0\" target=\"_blank\" rel=\"noopener\">Added or Modified Sources and Build Scripts</a></h3><h3 id=\"Trace\"><a href=\"#Trace\" class=\"headerlink\" title=\"Trace\"></a>Trace</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><em>belong</em></th>\n<th><em>hook</em></th>\n<th><em>callback</em></th>\n<th><em>caller</em></th>\n<th><em>X/GL API</em></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>pipe_screen</td>\n<td>resource_create</td>\n<td>softpipe_resource_create</td>\n<td>bufferobj_data</td>\n<td></td>\n</tr>\n<tr>\n<td>pipe_context</td>\n<td>transfer_map</td>\n<td>softpipe_transfer_map</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>pipe_context</td>\n<td>create_surface</td>\n<td>softpipe_create_surface</td>\n<td>st_framebuffer_validate</td>\n<td></td>\n</tr>\n<tr>\n<td>pipe_context</td>\n<td>flush</td>\n<td>softpipe_flush_wrapped</td>\n<td>st_context_flush</td>\n<td>glXSwapBuffers</td>\n</tr>\n<tr>\n<td>pipe_context</td>\n<td>clear</td>\n<td>softpipe_clear</td>\n<td>st_Clear</td>\n<td>glClear</td>\n</tr>\n<tr>\n<td>pipe_context</td>\n<td>draw_vbo</td>\n<td>softpipe_draw_vbo</td>\n<td>st_draw_vbo</td>\n<td>glCallList</td>\n</tr>\n<tr>\n<td>pipe_context</td>\n<td>draw_vbo</td>\n<td>softpipe_draw_vbo</td>\n<td>st_draw_vbo</td>\n<td>glCallList</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"DRI-Based-GLX-Demos\"><a href=\"#DRI-Based-GLX-Demos\" class=\"headerlink\" title=\"DRI-Based GLX Demos\"></a>DRI-Based GLX Demos</h2><h3 id=\"Loading\"><a href=\"#Loading\" class=\"headerlink\" title=\"Loading\"></a>Loading</h3><ul>\n<li><code>__glXInitialize</code></li>\n<li><code>driOpenDriver</code></li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(GLX_DIRECT_RENDERING) &amp;&amp; !defined(GLX_USE_APPLEGL)</span></span><br><span class=\"line\">   glx_direct = !env_var_as_boolean(<span class=\"string\">\"LIBGL_ALWAYS_INDIRECT\"</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">   glx_accel = !env_var_as_boolean(<span class=\"string\">\"LIBGL_ALWAYS_SOFTWARE\"</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">   dpyPriv-&gt;drawHash = __glxHashCreate();</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    ** Initialize the direct rendering per display data and functions.</span></span><br><span class=\"line\"><span class=\"comment\">    ** Note: This _must_ be done before calling any other DRI routines</span></span><br><span class=\"line\"><span class=\"comment\">    ** (e.g., those called in AllocAndFetchScreenConfigs).</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(GLX_USE_DRM)</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (glx_direct &amp;&amp; glx_accel) &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(HAVE_DRI3)</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!env_var_as_boolean(<span class=\"string\">\"LIBGL_DRI3_DISABLE\"</span>, <span class=\"literal\">false</span>))</span><br><span class=\"line\">         dpyPriv-&gt;dri3Display = dri3_create_display(dpy);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* HAVE_DRI3 */</span></span></span><br><span class=\"line\">      dpyPriv-&gt;dri2Display = dri2CreateDisplay(dpy);</span><br><span class=\"line\">      dpyPriv-&gt;driDisplay = driCreateDisplay(dpy);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* GLX_USE_DRM */</span></span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (glx_direct)</span><br><span class=\"line\">      dpyPriv-&gt;driswDisplay = driswCreateDisplay(dpy);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* GLX_DIRECT_RENDERING &amp;&amp; !GLX_USE_APPLEGL */</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> GLX_USE_APPLEGL</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!applegl_create_display(dpyPriv)) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">free</span>(dpyPriv);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> GLX_USE_WINDOWSGL</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (glx_direct &amp;&amp; glx_accel)</span><br><span class=\"line\">      dpyPriv-&gt;windowsdriDisplay = driwindowsCreateDisplay(dpy);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!AllocAndFetchScreenConfigs(dpy, dpyPriv)) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">free</span>(dpyPriv);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>This process of loading drivers works similarly with that of gallium-based glx. Compilation macros and environment variables make a difference. There are several approaches to load the specific drivers:</p>\n<ul>\n<li><code>dri3_create_display</code></li>\n<li><code>dri2CreateDisplay</code></li>\n<li><code>driCreateDisplay</code></li>\n<li><code>driswCreateDisplay</code></li>\n<li><code>applegl_create_display</code></li>\n<li><code>driwindowsCreateDisplay</code></li>\n</ul>\n<p>Let’s look into <code>driCreateDisplay</code>. Once it manages to attach to <code>driCreateScreen</code> which searches and matches the appropriate gallium driver the function <code>driOpenDriver</code> will open the <strong>found</strong> driver by its name like “i965”, “radeon”, “nouveau”, etc. These drivers are supposed to be installed at <strong><code>LIBGL_DRIVERS_PATH</code></strong> or <code>LIBGL_DRIVERS_DIR</code>(deprecated) and named as <code>*_dri.so</code> by default.</p>\n<p>Like Gallium-based GLX’s <code>_init</code> routine with GCC <strong><code>constructor</code></strong> attribute, DRI-based GLX also defines a routine <code>megadriver_stub_init</code> with <code>constructor</code> attribute which allows to load the specific driver in a way of <strong><code>__DRIextension</code></strong>.</p>\n<div align=center><img src=\"/mesa/gdb.svg\" class=\"\" title=\"osdemo\"></div>\n\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * This is a constructor function for the megadriver dynamic library.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * When the driver is dlopen'ed, this function will run. It will</span></span><br><span class=\"line\"><span class=\"comment\"> * search for the name of the foo_dri.so file that was opened using</span></span><br><span class=\"line\"><span class=\"comment\"> * the dladdr function.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * After finding foo's name, it will call __driDriverGetExtensions_foo</span></span><br><span class=\"line\"><span class=\"comment\"> * and use the return to update __driDriverExtensions to enable</span></span><br><span class=\"line\"><span class=\"comment\"> * compatibility with older DRI driver loaders.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">__attribute__((constructor)) <span class=\"keyword\">static</span> <span class=\"keyword\">void</span></span><br><span class=\"line\">megadriver_stub_init(<span class=\"keyword\">void</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * Allocate, initialize and return a __DRIdisplayPrivate object.</span></span><br><span class=\"line\"><span class=\"comment\"> * This is called from __glXInitialize() when we are given a new</span></span><br><span class=\"line\"><span class=\"comment\"> * display pointer.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">_X_HIDDEN __GLXDRIdisplay *</span><br><span class=\"line\">driCreateDisplay(Display * dpy)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">dri_display</span> *<span class=\"title\">pdpyp</span>;</span></span><br><span class=\"line\">   <span class=\"keyword\">int</span> eventBase, errorBase;</span><br><span class=\"line\">   <span class=\"keyword\">int</span> major, minor, patch;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!XF86DRIQueryExtension(dpy, &amp;eventBase, &amp;errorBase)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!XF86DRIQueryVersion(dpy, &amp;major, &amp;minor, &amp;patch)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   pdpyp = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span> *pdpyp);</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!pdpyp) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   pdpyp-&gt;driMajor = major;</span><br><span class=\"line\">   pdpyp-&gt;driMinor = minor;</span><br><span class=\"line\">   pdpyp-&gt;driPatch = patch;</span><br><span class=\"line\"></span><br><span class=\"line\">   pdpyp-&gt;base.destroyDisplay = driDestroyDisplay;</span><br><span class=\"line\">   pdpyp-&gt;base.createScreen = driCreateScreen;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> &amp;pdpyp-&gt;base;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Contexts\"><a href=\"#Contexts\" class=\"headerlink\" title=\"Contexts\"></a>Contexts</h2><p>There are a variety of <strong>contexts</strong> in Mesa. They are designed as a framework of layers.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__________________</span><br><span class=\"line\">|                |</span><br><span class=\"line\">|   gl_contex    | --------------&gt; standard &amp; general</span><br><span class=\"line\">|________________|</span><br><span class=\"line\"></span><br><span class=\"line\">__________________</span><br><span class=\"line\">|                |</span><br><span class=\"line\">|   st_contex    | --------------&gt; adapter</span><br><span class=\"line\">|________________|</span><br><span class=\"line\"></span><br><span class=\"line\">__________________</span><br><span class=\"line\">|                |</span><br><span class=\"line\">|  draw_contex   | --------------&gt; driver-specific</span><br><span class=\"line\">|________________|</span><br></pre></td></tr></table></figure>\n<h3 id=\"gl-context\"><a href=\"#gl-context\" class=\"headerlink\" title=\"gl_context\"></a>gl_context</h3><blockquote><p>This is the central context data structure for Mesa. Almost all OpenGL state is contained in this structure. Think of this as a base class from which device drivers will derive sub classes.</p>\n</blockquote>\n<p>Apart from OpenGL state it contains several other contexts</p>\n<ul>\n<li><code>swrast_context</code></li>\n<li><code>swsetup_context</code></li>\n<li><code>swtnl_context</code></li>\n<li><code>vbo_context</code></li>\n<li><code>st_context</code></li>\n</ul>\n<h3 id=\"st-context\"><a href=\"#st-context\" class=\"headerlink\" title=\"st_context\"></a>st_context</h3><h3 id=\"draw-context\"><a href=\"#draw-context\" class=\"headerlink\" title=\"draw_context\"></a>draw_context</h3><h3 id=\"vbo-context\"><a href=\"#vbo-context\" class=\"headerlink\" title=\"vbo_context\"></a>vbo_context</h3><p>VBO is short for vertex buffer object. This context derives two kinds of vbo contexts, <code>vbo_exec_context</code> and <code>vbo_save_context</code> which <code>vbo_exec_context</code> is generic for core and compatible ogl and the other is specific for compatible ogl.</p>\n<h4 id=\"vbo-exec-vtx-init\"><a href=\"#vbo-exec-vtx-init\" class=\"headerlink\" title=\"vbo_exec_vtx_init\"></a>vbo_exec_vtx_init</h4><ul>\n<li>Allocate a <code>gl_buffer_object</code> which just is referenced.</li>\n<li>Initialize vbo attributes including size, type and active size.</li>\n</ul>\n<h4 id=\"vbo-vs-vao\"><a href=\"#vbo-vs-vao\" class=\"headerlink\" title=\"vbo vs. vao\"></a>vbo vs. vao</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_buffer_object</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">   GLint RefCount;</span><br><span class=\"line\">   GLuint Name;</span><br><span class=\"line\">   GLchar *Label;       </span><br><span class=\"line\">   GLenum16 Usage;      </span><br><span class=\"line\">   GLbitfield StorageFlags; </span><br><span class=\"line\">   GLsizeiptrARB Size;  </span><br><span class=\"line\">   GLubyte *Data;       </span><br><span class=\"line\">   GLboolean DeletePending;   </span><br><span class=\"line\">   GLboolean Written;   </span><br><span class=\"line\">   GLboolean Purgeable; </span><br><span class=\"line\">   GLboolean Immutable; </span><br><span class=\"line\">   gl_buffer_usage UsageHistory; </span><br><span class=\"line\">   GLuint NumSubDataCalls;</span><br><span class=\"line\">   GLuint NumMapBufferWriteCalls;</span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_buffer_mapping</span> <span class=\"title\">Mappings</span>[<span class=\"title\">MAP_COUNT</span>];</span></span><br><span class=\"line\">   <span class=\"keyword\">simple_mtx_t</span> MinMaxCacheMutex;</span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">hash_table</span> *<span class=\"title\">MinMaxCache</span>;</span></span><br><span class=\"line\">   <span class=\"keyword\">unsigned</span> MinMaxCacheHitIndices;</span><br><span class=\"line\">   <span class=\"keyword\">unsigned</span> MinMaxCacheMissIndices;</span><br><span class=\"line\">   <span class=\"keyword\">bool</span> MinMaxCacheDirty;</span><br><span class=\"line\">   <span class=\"keyword\">bool</span> HandleAllocated; </span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_vertex_array_object</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">   GLuint Name;</span><br><span class=\"line\">   GLint RefCount;</span><br><span class=\"line\">   GLchar *Label;       </span><br><span class=\"line\">   GLboolean EverBound;</span><br><span class=\"line\">   <span class=\"keyword\">bool</span> SharedAndImmutable;</span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_array_attributes</span> <span class=\"title\">VertexAttrib</span>[<span class=\"title\">VERT_ATTRIB_MAX</span>];</span></span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_vertex_buffer_binding</span> <span class=\"title\">BufferBinding</span>[<span class=\"title\">VERT_ATTRIB_MAX</span>];</span></span><br><span class=\"line\">   GLbitfield VertexAttribBufferMask;</span><br><span class=\"line\">   GLbitfield Enabled;</span><br><span class=\"line\">   GLbitfield _EffEnabledVBO;</span><br><span class=\"line\">   gl_attribute_map_mode _AttributeMapMode;</span><br><span class=\"line\">   GLbitfield NewArrays;</span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_buffer_object</span> *<span class=\"title\">IndexBufferObj</span>;</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Dispatchers\"><a href=\"#Dispatchers\" class=\"headerlink\" title=\"Dispatchers\"></a>Dispatchers</h2><ul>\n<li><em><code>Exec</code></em>: The current dispatch table for non-displaylist-saving execution, either BeginEnd or OutsideBeginEnd</li>\n<li><em><code>OutsideBeginEnd</code></em>: The normal dispatch table for non-displaylist-saving, non-begin/end</li>\n<li><em><code>Save</code></em>: The dispatch table used between glNewList() and glEndList()</li>\n<li><em><code>BeginEnd</code></em>: The dispatch table used between glBegin() and glEnd() (outside of a display list). Only valid functions between those two are set, which is mostly just the set in a GLvertexformat struct.</li>\n<li><em><code>ContextLost</code></em>: Dispatch table for when a graphics reset has happened.</li>\n<li><em><code>MarshalExec</code></em>: Dispatch table used to marshal API calls from the client program to a separate server thread. NULL if API calls are not being marshalled to another thread.</li>\n<li><em><code>CurrentClientDispatch</code></em>: Dispatch table currently in use for fielding API calls from the client program. If API calls are being marshalled to another thread, this refers to <em><code>MarshalExec</code></em>. Otherwise it refers to <em><code>CurrentServerDispatch</code></em>.</li>\n<li><em><code>CurrentServerDispatch</code></em>: Dispatch table currently in use for performing API calls. It refers to <em><code>Save</code></em> or <em><code>Exec</code></em>.</li>\n</ul>\n<h2 id=\"Modules\"><a href=\"#Modules\" class=\"headerlink\" title=\"Modules\"></a>Modules</h2><ul>\n<li>draw module</li>\n<li>CSO module</li>\n<li>translate module</li>\n<li>VBO module</li>\n<li>TNL module(Transform &amp; Light)</li>\n</ul>\n<h2 id=\"draw-xxx-stage\"><a href=\"#draw-xxx-stage\" class=\"headerlink\" title=\"draw_xxx_stage\"></a>draw_xxx_stage</h2><ul>\n<li><strong><code>extern struct draw_stage *draw_unfilled_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_twoside_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_offset_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_clip_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_flatshade_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_cull_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_stipple_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_wide_line_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_wide_point_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_validate_stage( struct draw_context *context );</code></strong></li>\n</ul>\n<h2 id=\"Auxiliary\"><a href=\"#Auxiliary\" class=\"headerlink\" title=\"Auxiliary\"></a>Auxiliary</h2><ul>\n<li><p>cso_cache<br>  The CSO cache is used to accelerate preparation of state by saving driver-specific state structure for later use.</p>\n</li>\n<li><p>draw<br>  Draw is a software TCL pipeline for hardware that lacks vertex shaders or other essential parts of pre-rasterization vertex preparation.</p>\n</li>\n<li><p>driver_ddebug</p>\n</li>\n<li>driver_noop</li>\n<li>driver_rbug</li>\n<li>driver_trace</li>\n<li>gallivm</li>\n<li>hud</li>\n<li><p>indices<br>  Indices provides tools for translating or generating element indices for use with element-based rendering.</p>\n</li>\n<li><p>nir</p>\n</li>\n<li><p>os</p>\n<ul>\n<li>memory allocation</li>\n<li>simple message logging</li>\n<li>obtaining run-time configuration option</li>\n<li>threading primitives<br>The OS module contains the abstraction for basic operating system services above. This is the bare minimum required to port Gallium to a new platform. It already provides the implementations of these abstractions for the most common platforms. When targeting an embedded platform no implementation will be provided - these must be provided separately.</li>\n</ul>\n</li>\n<li><p>pipe-loader</p>\n</li>\n<li>pipebuffer</li>\n<li>postprocess</li>\n<li>rbug</li>\n<li>renderonly</li>\n<li>rtasm</li>\n<li>target-helpers</li>\n<li>tgsi</li>\n<li>translate</li>\n<li>util</li>\n<li>vl</li>\n</ul>\n<h2 id=\"Q-amp-A\"><a href=\"#Q-amp-A\" class=\"headerlink\" title=\"Q&amp;A\"></a>Q&amp;A</h2><h4 id=\"When-xlib-creates-pipe-screen-only-software-rasterizers-or-pipes’screen-are-created-And-llvmpipe-softpipe-virgl-swr-unexceptionally-are-software-rasterizers-or-virtual-GPU-Zink-is-in-brief-a-translator-from-OpenGL-to-Vulkan-and-implemented-as-Gallium-driver-So-why-only-software-pipes\"><a href=\"#When-xlib-creates-pipe-screen-only-software-rasterizers-or-pipes’screen-are-created-And-llvmpipe-softpipe-virgl-swr-unexceptionally-are-software-rasterizers-or-virtual-GPU-Zink-is-in-brief-a-translator-from-OpenGL-to-Vulkan-and-implemented-as-Gallium-driver-So-why-only-software-pipes\" class=\"headerlink\" title=\"When xlib creates pipe screen, only software rasterizers or pipes’screen are created. And llvmpipe, softpipe, virgl, swr, unexceptionally, are software rasterizers or virtual GPU. Zink is, in brief, a translator from OpenGL to Vulkan and implemented as Gallium driver. So why only software pipes?\"></a>When xlib creates pipe screen, <em>only</em> software rasterizers or pipes’screen are created. And llvmpipe, softpipe, virgl, swr, unexceptionally, are software rasterizers or virtual GPU. <a href=\"https://www.collabora.com/news-and-blog/blog/2018/10/31/introducing-zink-opengl-implementation-vulkan/\" target=\"_blank\" rel=\"noopener\">Zink</a> is, in brief, a translator from OpenGL to Vulkan and implemented as Gallium driver. So why only software pipes?</h4><p>The answer is <strong><code>sw_winsys</code></strong>. All of target helpers’s parameter is a <code>sw_winsys</code>. Check mesa source directory: <a href=\"https://gitlab.freedesktop.org/mesa/mesa/tree/master/src/gallium/winsys\" target=\"_blank\" rel=\"noopener\">mesa/src/gallium/winsys</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">amdgpu</span><br><span class=\"line\">etnaviv</span><br><span class=\"line\">freedreno</span><br><span class=\"line\">i915</span><br><span class=\"line\">iris</span><br><span class=\"line\">kmsro</span><br><span class=\"line\">lima</span><br><span class=\"line\">nouveau</span><br><span class=\"line\">panfrost</span><br><span class=\"line\">radeon</span><br><span class=\"line\">svga</span><br><span class=\"line\">sw</span><br><span class=\"line\">tegra</span><br><span class=\"line\">v3d</span><br><span class=\"line\">vc4</span><br><span class=\"line\">virgl</span><br></pre></td></tr></table></figure>\n<p>To put it simply, specific driver corresponds to specific winsys. The <code>sw</code> is for software rasterizers. If you expect to create pipe screen for some driver else, you need to add another target helper with its winsys as parameter like: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static inline struct pipe_screen *</span><br><span class=\"line\">i915_screen_create_named(struct i915_drm_winsys *winsys, const char *driver)</span><br></pre></td></tr></table></figure>\n<p>That means you have to declare a bunch of new interfaces from the top. So you’d better wrap the function to create specific driver’s winsys so that it can take a sw_winsys as its parameter like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#if defined(GALLIUM_VIRGL)</span><br><span class=\"line\">   if (screen == NULL &amp;&amp; strcmp(driver, &quot;virpipe&quot;) == 0) &#123;</span><br><span class=\"line\">      struct virgl_winsys *vws;</span><br><span class=\"line\">      vws = virgl_vtest_winsys_wrap(winsys);</span><br><span class=\"line\">      screen = virgl_create_screen(vws, NULL);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<h4 id=\"libGL-so-is-not-built-until-glx-option-is-enabled-in-meson-options-txt\"><a href=\"#libGL-so-is-not-built-until-glx-option-is-enabled-in-meson-options-txt\" class=\"headerlink\" title=\"libGL.so is not built until glx option is enabled in meson_options.txt.\"></a>libGL.so is not built until glx option is enabled in <strong>meson_options.txt</strong>.</h4><p>Only with essential build-time dependencies for X11 installed and glx option configured is libGL.so built.</p>\n<h4 id=\"What-role-do-DRM-DRI-and-Gallium-play-in-Mesa\"><a href=\"#What-role-do-DRM-DRI-and-Gallium-play-in-Mesa\" class=\"headerlink\" title=\"What role do DRM, DRI and Gallium play in Mesa?\"></a>What role do DRM, DRI and Gallium play in Mesa?</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_libdrm_checks = [</span><br><span class=\"line\">  [&apos;intel&apos;, with_dri_i915 or with_gallium_i915],</span><br><span class=\"line\">  [&apos;amdgpu&apos;, with_amd_vk or with_gallium_radeonsi],</span><br><span class=\"line\">  [&apos;radeon&apos;, (with_gallium_radeonsi or with_dri_r100 or with_dri_r200 or</span><br><span class=\"line\">              with_gallium_r300 or with_gallium_r600)],</span><br><span class=\"line\">  [&apos;nouveau&apos;, (with_gallium_nouveau or with_dri_nouveau)],</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>DRI and Gallium seem to be respectively different underlying implementation in Mesa. Moreover in term of swrast and i915, you have to choose either of both as you can read the following code snippet in meson.build. In fact DRI is more complicated and staler but Gallium is more smaller and simpler.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if with_dri_swrast and (with_gallium_softpipe or with_gallium_swr)</span><br><span class=\"line\">  error(&apos;Only one swrast provider can be built&apos;)</span><br><span class=\"line\">endif</span><br><span class=\"line\">if with_dri_i915 and with_gallium_i915</span><br><span class=\"line\">  error(&apos;Only one i915 provider can be built&apos;)</span><br><span class=\"line\">endif</span><br></pre></td></tr></table></figure>\n<h4 id=\"What-problems-are-encountered-when-you-build-mesa-on-the-WSL\"><a href=\"#What-problems-are-encountered-when-you-build-mesa-on-the-WSL\" class=\"headerlink\" title=\"What problems are encountered when you build mesa on the WSL?\"></a>What problems are encountered when you build mesa on the WSL?</h4><ul>\n<li>dri based GLX requires shared-glapi</li>\n<li>Gallium-xlib based GLX requires softpipe or llvmpipe<ul>\n<li>means that <code>gallium-xlib</code> is supposed to only support software rasterizers(llvmpipe, softpipe) and virtual GPU(virgl, swr).<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">option(</span><br><span class=\"line\">  &apos;glx&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;xlib&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;disabled&apos;, &apos;dri&apos;, &apos;xlib&apos;, &apos;gallium-xlib&apos;],</span><br><span class=\"line\">  description : &apos;Build support for GLX platform&apos;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\nIn Mesa, glx is implemented in three ways:</li>\n</ul>\n</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>*-based</th>\n<th>backend</th>\n<th>window system</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dri-based</td>\n<td>non-sw-pipes</td>\n<td>*_drm_winsys</td>\n</tr>\n<tr>\n<td>xlib</td>\n<td>tnl</td>\n<td>sw_winsys</td>\n</tr>\n<tr>\n<td>gallium-based</td>\n<td>softpipe/llvmpipe</td>\n<td>sw_winsys</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li>OSMesa gallium requires gallium softpipe or llvmpipe<ul>\n<li>means if <code>osmesa</code> is configured as <code>gallium</code>, <code>gallium-drivers</code> must include <code>swrast</code> but the <code>classic</code> osmesa uses the fixed-functioned TNL by default.<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">option(</span><br><span class=\"line\">  &apos;osmesa&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;gallium&apos;,</span><br><span class=\"line\">  choices : [&apos;none&apos;, &apos;classic&apos;, &apos;gallium&apos;],</span><br><span class=\"line\">  description : &apos;Build OSmesa.&apos;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>Cannot build GLX support without X11 platform support and at least one OpenGL API<ul>\n<li>GLX, As the name suggests, is dedicated to X11 winsys.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"When-glXInitialize-creates-the-Display-only-driswCreateDisplay-returns-successfully-Both-of-dri2CreateDisplay-and-driCreateDisplay-failed\"><a href=\"#When-glXInitialize-creates-the-Display-only-driswCreateDisplay-returns-successfully-Both-of-dri2CreateDisplay-and-driCreateDisplay-failed\" class=\"headerlink\" title=\"When __glXInitialize creates the Display, only driswCreateDisplay returns successfully. Both of dri2CreateDisplay and driCreateDisplay failed.\"></a>When <code>__glXInitialize</code> creates the <code>Display</code>, <strong>only</strong> <code>driswCreateDisplay</code> returns successfully. Both of <code>dri2CreateDisplay</code> and <code>driCreateDisplay</code> failed.</h4><ul>\n<li>env: WSL on Windows 10 and with vcXsrv installed on the host as X server</li>\n</ul>\n<p>The cause of failure is that vcXsrv has no extensions with DRI or DRI2. This lack of X server extension fails <code>DRI2QueryExtension</code> and <code>XF86DRIQueryExtension</code> so that the loading of gallium driver is not invoked.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * XextAddDisplay - add a display to this extension</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">XExtDisplayInfo *<span class=\"title\">XextAddDisplay</span> <span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    XExtensionInfo *extinfo,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    Display *dpy,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    _Xconst <span class=\"keyword\">char</span> *ext_name,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    XExtensionHooks *hooks,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    <span class=\"keyword\">int</span> nevents,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    XPointer data)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    XExtDisplayInfo *dpyinfo;</span><br><span class=\"line\"></span><br><span class=\"line\">    dpyinfo = (XExtDisplayInfo *) Xmalloc (<span class=\"keyword\">sizeof</span> (XExtDisplayInfo));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!dpyinfo) <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    dpyinfo-&gt;display = dpy;</span><br><span class=\"line\">    dpyinfo-&gt;data = data;</span><br><span class=\"line\">    dpyinfo-&gt;codes = XInitExtension (dpy, ext_name);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * if the server has the extension, then we can initialize the</span></span><br><span class=\"line\"><span class=\"comment\">     * appropriate function vectors</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dpyinfo-&gt;codes) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i, j;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>, j = dpyinfo-&gt;codes-&gt;first_event; i &lt; nevents; i++, j++) &#123;</span><br><span class=\"line\">\t    XESetWireToEvent (dpy, j, hooks-&gt;wire_to_event);</span><br><span class=\"line\">\t    XESetEventToWire (dpy, j, hooks-&gt;event_to_wire);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/* register extension for XGE */</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">strcmp</span>(ext_name, GE_NAME))</span><br><span class=\"line\">            xgeExtRegister(dpy, dpyinfo-&gt;codes-&gt;major_opcode, hooks);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;create_gc)</span><br><span class=\"line\">\t  XESetCreateGC (dpy, dpyinfo-&gt;codes-&gt;extension, hooks-&gt;create_gc);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;copy_gc)</span><br><span class=\"line\">\t  XESetCopyGC (dpy, dpyinfo-&gt;codes-&gt;extension, hooks-&gt;copy_gc);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;flush_gc)</span><br><span class=\"line\">\t  XESetFlushGC (dpy, dpyinfo-&gt;codes-&gt;extension, hooks-&gt;flush_gc);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;free_gc)</span><br><span class=\"line\">\t  XESetFreeGC (dpy, dpyinfo-&gt;codes-&gt;extension, hooks-&gt;free_gc);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;create_font)</span><br><span class=\"line\">\t  XESetCreateFont (dpy, dpyinfo-&gt;codes-&gt;extension, hooks-&gt;create_font);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;free_font)</span><br><span class=\"line\">\t  XESetFreeFont (dpy, dpyinfo-&gt;codes-&gt;extension, hooks-&gt;free_font);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;close_display)</span><br><span class=\"line\">\t  XESetCloseDisplay (dpy, dpyinfo-&gt;codes-&gt;extension,</span><br><span class=\"line\">\t\t\t     hooks-&gt;close_display);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;error)</span><br><span class=\"line\">\t  XESetError (dpy, dpyinfo-&gt;codes-&gt;extension, hooks-&gt;error);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;error_string)</span><br><span class=\"line\">\t  XESetErrorString (dpy, dpyinfo-&gt;codes-&gt;extension,</span><br><span class=\"line\">\t\t\t    hooks-&gt;error_string);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (hooks-&gt;close_display) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/* The server doesn't have this extension.</span></span><br><span class=\"line\"><span class=\"comment\">\t * Use a private Xlib-internal extension to hang the close_display</span></span><br><span class=\"line\"><span class=\"comment\">\t * hook on so that the \"cache\" (extinfo-&gt;cur) is properly cleaned.</span></span><br><span class=\"line\"><span class=\"comment\">\t * (XBUG 7955)</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\tXExtCodes *codes = XAddExtension(dpy);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!codes) &#123;</span><br><span class=\"line\">\t    XFree(dpyinfo);</span><br><span class=\"line\">\t    <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tXESetCloseDisplay (dpy, codes-&gt;extension, hooks-&gt;close_display);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * now, chain it onto the list</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    _XLockMutex(_Xglobal_lock);</span><br><span class=\"line\">    dpyinfo-&gt;next = extinfo-&gt;head;</span><br><span class=\"line\">    extinfo-&gt;head = dpyinfo;</span><br><span class=\"line\">    extinfo-&gt;cur = dpyinfo;</span><br><span class=\"line\">    extinfo-&gt;ndisplays++;</span><br><span class=\"line\">    _XUnlockMutex(_Xglobal_lock);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dpyinfo;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://mesa3d.org/\" target=\"_blank\" rel=\"noopener\">Mesa</a> is an open source implementation for OpenGL. Check <a href=\"https://gitlab.freedesktop.org/mesa/mesa\" target=\"_blank\" rel=\"noopener\">repository</a> for its source code. There are something worth to learn about this project for a graphic driver developer.</p>\n<h2 id=\"Build\"><a href=\"#Build\" class=\"headerlink\" title=\"Build\"></a>Build</h2><p>It’s good choice for exploring any project’s source code to start with its build script. So here is the start.</p>\n<h3 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h3><p>Mesa is a highly configurable project that means it allows to customize your own particular components by command-line options or a pure text file(meson_options.txt).</p>\n<p>Generally speaking, which dependencies are required is determined by your configuration. For example, the following configuration</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">option(</span><br><span class=\"line\">  &apos;platforms&apos;,</span><br><span class=\"line\">  type : &apos;array&apos;,</span><br><span class=\"line\">  value : [&apos;x11&apos;],</span><br><span class=\"line\">  choices : [</span><br><span class=\"line\">    &apos;auto&apos;, &apos;x11&apos;, &apos;wayland&apos;, &apos;drm&apos;, &apos;surfaceless&apos;, &apos;haiku&apos;, &apos;android&apos;,</span><br><span class=\"line\">    &apos;windows&apos;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  description : &apos;window systems to support. If this is set to `auto`, all platforms applicable will be enabled.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;dri3&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;disabled&apos;, &apos;enabled&apos;],</span><br><span class=\"line\">  description : &apos;enable support for dri3&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;dri-drivers&apos;,</span><br><span class=\"line\">  type : &apos;array&apos;,</span><br><span class=\"line\">  value : [],</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;i915&apos;, &apos;i965&apos;, &apos;r100&apos;, &apos;r200&apos;, &apos;nouveau&apos;, &apos;swrast&apos;],</span><br><span class=\"line\">  description : &apos;List of dri drivers to build. If this is set to auto all drivers applicable to the target OS/architecture will be built&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;dri-drivers-path&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;Location to install dri drivers. Default: $libdir/dri.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;dri-search-path&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;Locations to search for dri drivers, passed as colon separated list. Default: dri-drivers-path.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-drivers&apos;,</span><br><span class=\"line\">  type : &apos;array&apos;,</span><br><span class=\"line\">  value : [&apos;swrast&apos;],</span><br><span class=\"line\">  choices : [</span><br><span class=\"line\">    &apos;auto&apos;, &apos;kmsro&apos;, &apos;radeonsi&apos;, &apos;r300&apos;, &apos;r600&apos;, &apos;nouveau&apos;, &apos;freedreno&apos;,</span><br><span class=\"line\">    &apos;swrast&apos;, &apos;v3d&apos;, &apos;vc4&apos;, &apos;etnaviv&apos;, &apos;tegra&apos;, &apos;i915&apos;, &apos;svga&apos;, &apos;virgl&apos;,</span><br><span class=\"line\">    &apos;swr&apos;, &apos;panfrost&apos;, &apos;iris&apos;, &apos;lima&apos;, &apos;zink&apos;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  description : &apos;List of gallium drivers to build. If this is set to auto all drivers applicable to the target OS/architecture will be built&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-extra-hud&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;Enable HUD block/NIC I/O HUD status support&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-vdpau&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;enable gallium vdpau frontend.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;vdpau-libs-path&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;path to put vdpau libraries. defaults to $libdir/vdpau.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-xvmc&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;enable gallium xvmc frontend.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;xvmc-libs-path&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;path to put xvmc libraries. defaults to $libdir.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-omx&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;disabled&apos;, &apos;bellagio&apos;, &apos;tizonia&apos;],</span><br><span class=\"line\">  description : &apos;enable gallium omx frontend.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;omx-libs-path&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;path to put omx libraries. defaults to omx-bellagio pkg-config pluginsdir.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-va&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;enable gallium va frontend.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;va-libs-path&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;path to put va libraries. defaults to $libdir/dri.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-xa&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;enable gallium xa frontend.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-nine&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;build gallium &quot;nine&quot; Direct3D 9.x frontend.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gallium-opencl&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  choices : [&apos;icd&apos;, &apos;standalone&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  description : &apos;build gallium &quot;clover&quot; OpenCL frontend.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;opencl-spirv&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;build gallium &quot;clover&quot; OpenCL frontend with SPIR-V binary support.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;d3d-drivers-path&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;Location of D3D drivers. Default: $libdir/d3d&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;vulkan-drivers&apos;,</span><br><span class=\"line\">  type : &apos;array&apos;,</span><br><span class=\"line\">  value : [],</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;amd&apos;, &apos;freedreno&apos;, &apos;intel&apos;],</span><br><span class=\"line\">  description : &apos;List of vulkan drivers to build. If this is set to auto all drivers applicable to the target OS/architecture will be built&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;shader-cache&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;auto&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Build with on-disk shader cache support&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;vulkan-icd-dir&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;Location relative to prefix to put vulkan icds on install. Default: $datadir/vulkan/icd.d&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;vulkan-overlay-layer&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;Whether to build the vulkan overlay layer&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;vulkan-device-select-layer&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;Whether to build the vulkan device select layer&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;shared-glapi&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;enabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Whether to build a shared or static glapi. Defaults to false on Windows, true elsewhere&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gles1&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;enabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Build support for OpenGL ES 1.x&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gles2&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;enabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Build support for OpenGL ES 2.x and 3.x&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;opengl&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : true,</span><br><span class=\"line\">  description : &apos;Build support for OpenGL (all versions)&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gbm&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Build support for gbm platform&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;glx&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;gallium-xlib&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;disabled&apos;, &apos;dri&apos;, &apos;xlib&apos;, &apos;gallium-xlib&apos;],</span><br><span class=\"line\">  description : &apos;Build support for GLX platform&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;egl&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Build support for EGL platform&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;glvnd&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;Enable GLVND support.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">   &apos;glx-read-only-text&apos;,</span><br><span class=\"line\">   type : &apos;boolean&apos;,</span><br><span class=\"line\">   value : false,</span><br><span class=\"line\">   description : &apos;Disable writable .text section on x86 (decreases performance)&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;llvm&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Build with LLVM support.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;shared-llvm&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Whether to link LLVM shared or statically.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;valgrind&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Build with valgrind support&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;libunwind&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Use libunwind for stack-traces&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;lmsensors&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;disabled&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Enable HUD lmsensors support.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;build-tests&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;Build unit tests. Currently this will build *all* unit tests, which may build more than expected.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;install-intel-gpu-tests&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;Build and install Intel unit tests which require the GPU.  This option is for developers and the Intel CI system only.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;selinux&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : false,</span><br><span class=\"line\">  description : &apos;Build an SELinux-aware Mesa&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;osmesa&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;none&apos;,</span><br><span class=\"line\">  choices : [&apos;none&apos;, &apos;classic&apos;, &apos;gallium&apos;],</span><br><span class=\"line\">  description : &apos;Build OSmesa.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;osmesa-bits&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;8&apos;,</span><br><span class=\"line\">  choices : [&apos;8&apos;, &apos;16&apos;, &apos;32&apos;],</span><br><span class=\"line\">  description : &apos;Number of channel bits for OSMesa.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;swr-arches&apos;,</span><br><span class=\"line\">  type : &apos;array&apos;,</span><br><span class=\"line\">  value : [&apos;avx&apos;, &apos;avx2&apos;],</span><br><span class=\"line\">  choices : [&apos;avx&apos;, &apos;avx2&apos;, &apos;knl&apos;, &apos;skx&apos;],</span><br><span class=\"line\">  description : &apos;Architectures to build SWR support for.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;shared-swr&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : true,</span><br><span class=\"line\">  description : &apos;Whether to link SWR shared or statically.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;tools&apos;,</span><br><span class=\"line\">  type : &apos;array&apos;,</span><br><span class=\"line\">  value : [],</span><br><span class=\"line\">  choices : [&apos;drm-shim&apos;, &apos;etnaviv&apos;, &apos;freedreno&apos;, &apos;glsl&apos;, &apos;intel&apos;, &apos;intel-ui&apos;, &apos;nir&apos;, &apos;nouveau&apos;, &apos;xvmc&apos;, &apos;lima&apos;, &apos;panfrost&apos;, &apos;all&apos;],</span><br><span class=\"line\">  description : &apos;List of tools to build. (Note: `intel-ui` selects `intel`)&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;power8&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;auto&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Enable power8 optimizations.&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;xlib-lease&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;auto&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  description : &apos;Enable VK_EXT_acquire_xlib_display.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;glx-direct&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : true,</span><br><span class=\"line\">  description : &apos;Enable direct rendering in GLX and EGL for DRI&apos;,</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;prefer-iris&apos;,</span><br><span class=\"line\">  type : &apos;boolean&apos;,</span><br><span class=\"line\">  value : true,</span><br><span class=\"line\">  description : &apos;Prefer new Intel iris driver over older i965 driver&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(&apos;egl-lib-suffix&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;Suffix to append to EGL library name.  Default: none.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;gles-lib-suffix&apos;,</span><br><span class=\"line\">  type : &apos;string&apos;,</span><br><span class=\"line\">  value : &apos;&apos;,</span><br><span class=\"line\">  description : &apos;Suffix to append to GLES library names.  Default: none.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;platform-sdk-version&apos;,</span><br><span class=\"line\">  type : &apos;integer&apos;,</span><br><span class=\"line\">  min : 25,</span><br><span class=\"line\">  max : 28,</span><br><span class=\"line\">  value : 25,</span><br><span class=\"line\">  description : &apos;Android Platform SDK version. Default: Nougat version.&apos;</span><br><span class=\"line\">)</span><br><span class=\"line\">option(</span><br><span class=\"line\">  &apos;zstd&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;true&apos;, &apos;false&apos;, &apos;enabled&apos;, &apos;disabled&apos;],</span><br><span class=\"line\">  value : &apos;auto&apos;,</span><br><span class=\"line\">  description : &apos;Use ZSTD instead of ZLIB in some cases.&apos;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>requires these programs or packages below pre-installed.</p>\n<ul>\n<li><p>Programs</p>\n<ul>\n<li>pkg-config</li>\n<li>bison</li>\n<li>flex</li>\n</ul>\n</li>\n<li><p>Development Packages</p>\n<ul>\n<li>libdrm-dev</li>\n<li>libx11-dev</li>\n<li>libxext-dev</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">meson build</span><br></pre></td></tr></table></figure>\n<p>You can configure a minimal dependencies mesa given that WSL is not a desktop platform as the following my configuration result:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Message: Configuration summary:</span><br><span class=\"line\"></span><br><span class=\"line\">        prefix:          /usr/local</span><br><span class=\"line\">        libdir:          lib/x86_64-linux-gnu</span><br><span class=\"line\">        includedir:      include</span><br><span class=\"line\"></span><br><span class=\"line\">        OpenGL:          yes (ES1: yes ES2: yes)</span><br><span class=\"line\">        OSMesa:          no</span><br><span class=\"line\"></span><br><span class=\"line\">        GLX:             Xlib-based (Gallium)</span><br><span class=\"line\"></span><br><span class=\"line\">        EGL:             no</span><br><span class=\"line\">        GBM:             no</span><br><span class=\"line\">        EGL/Vulkan/VL platforms:   x11</span><br><span class=\"line\"></span><br><span class=\"line\">        Vulkan drivers:  no</span><br><span class=\"line\"></span><br><span class=\"line\">        llvm:            no</span><br><span class=\"line\"></span><br><span class=\"line\">        Gallium drivers: swrast</span><br><span class=\"line\">        Gallium st:      mesa</span><br><span class=\"line\">        HUD lmsensors:   no</span><br><span class=\"line\"></span><br><span class=\"line\">        Shared-glapi:    yes</span><br><span class=\"line\"></span><br><span class=\"line\">Build targets in project: 97</span><br></pre></td></tr></table></figure>\n<p>As you see this configuration supports quite a few components which are essential for off-screen rendering. Once dependencies check passed fully you can begin to compile and install:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ninja -C build &amp;&amp; sudo ninja -C build install</span><br></pre></td></tr></table></figure>\n<p>After compilation and installed as follow:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l /usr/<span class=\"built_in\">local</span>/lib/x86_64-linux-gnu</span><br><span class=\"line\">total 159360</span><br><span class=\"line\">lrwxrwxrwx 1 root root        10 Feb  7 17:13 libGL.so -&gt; libGL.so.1</span><br><span class=\"line\">lrwxrwxrwx 1 root root        14 Feb  7 17:13 libGL.so.1 -&gt; libGL.so.1.5.0</span><br><span class=\"line\">-rwxr-xr-x 1 root root 111044912 Feb  7 17:13 libGL.so.1.5.0</span><br><span class=\"line\">lrwxrwxrwx 1 root root        14 Feb  7 17:13 libOSMesa.so -&gt; libOSMesa.so.8</span><br><span class=\"line\">lrwxrwxrwx 1 root root        18 Feb  7 17:13 libOSMesa.so.8 -&gt; libOSMesa.so.8.0.0</span><br><span class=\"line\">-rwxr-xr-x 1 root root  51541176 Feb  7 17:13 libOSMesa.so.8.0.0</span><br><span class=\"line\">lrwxrwxrwx 1 root root        13 Feb  7 17:13 libglapi.so -&gt; libglapi.so.0</span><br><span class=\"line\">lrwxrwxrwx 1 root root        17 Feb  7 17:13 libglapi.so.0 -&gt; libglapi.so.0.0.0</span><br><span class=\"line\">-rwxr-xr-x 1 root root    337264 Feb  7 17:07 libglapi.so.0.0.0</span><br><span class=\"line\">drwxr-xr-x 1 root root       512 Feb  7 17:13 pkgconfig</span><br></pre></td></tr></table></figure>\n<p>NOTE:</p>\n<ul>\n<li>Mesa is installed in <code>/usr/local/lib/$(uname -p)-linux-gnu</code> by default. So you have to <code>ldconfig</code> so that your linker can find them.</li>\n<li>libsoftpipe.a will be built but not installed.</li>\n<li>meson build system will enable compiler’s <code>-g</code> flag by default unless you are building on the release branch.</li>\n<li>if you have remodified the <strong>meson_options.txt</strong> and built once and now are about to reconfigure and rebuild, you need to run:</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">meson setup --wipe build</span><br></pre></td></tr></table></figure>\n<h2 id=\"Off-screen-Demos\"><a href=\"#Off-screen-Demos\" class=\"headerlink\" title=\"Off-screen Demos\"></a>Off-screen Demos</h2><p>Now that mesa have been built and installed we can give a try to run an OGL application. Similarly without window system supportd on the WSL, <a href=\"https://mesa3d.org/osmesa.html\" target=\"_blank\" rel=\"noopener\">off-screen rendering</a> is my choice. We can clone the mesa <a href=\"https://gitlab.freedesktop.org/mesa/demos\" target=\"_blank\" rel=\"noopener\">demos</a> which includes a lot of demos besides off-screen demos. </p>\n<h3 id=\"Requisite\"><a href=\"#Requisite\" class=\"headerlink\" title=\"Requisite\"></a>Requisite</h3><p>We need some more libraries besides libOSMesa and libGL before you can get these off-screen demos worked. They are:</p>\n<ul>\n<li><a href=\"https://gitlab.freedesktop.org/mesa/glu\" target=\"_blank\" rel=\"noopener\">GLU</a></li>\n<li>libm</li>\n</ul>\n<p>To build these demos:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc osdemo.c -o osdemo -g -I/home/luc/github/demos/src/util -lGL -lGLU -lOSMesa -lm</span><br></pre></td></tr></table></figure></p>\n<p>The executable osdemo saves the rendered pixels as the portable pixmap format. You need to covert it to image format e.g. jpg. You may do this with <code>pnmtojpeg output.ppm &gt; output.jpg</code>.</p>\n<div align=center><img src=\"/mesa/osdemo.jpg\" class=\"\" title=\"osdemo\"></div>\n\n<h2 id=\"OSMesa-Call-Graphs\"><a href=\"#OSMesa-Call-Graphs\" class=\"headerlink\" title=\"OSMesa Call Graphs\"></a>OSMesa Call Graphs</h2><p>Mesa supports many features from software pipelines to hardware drivers. For example <a href=\"https://www.freedesktop.org/wiki/Software/gallium/\" target=\"_blank\" rel=\"noopener\">Gallium</a>, it features with several software or hardware implementations which include the two software pipelines, softpipe and <a href=\"https://www.mesa3d.org/llvmpipe.html\" target=\"_blank\" rel=\"noopener\">llvmpipe</a>. With the different pipes enabled will the calls walk in the different paths. </p>\n<h3 id=\"Three-Different-Build-Configuration-reference-to-meson-options-txt\"><a href=\"#Three-Different-Build-Configuration-reference-to-meson-options-txt\" class=\"headerlink\" title=\"Three Different Build Configuration (reference to meson_options.txt)\"></a>Three Different Build Configuration (reference to <strong>meson_options.txt</strong>)</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th><em>platform</em></th>\n<th><em>glx</em></th>\n<th><em>dri-drivers</em></th>\n<th><em>gallium-drivers</em></th>\n<th><em>llvm</em></th>\n<th><em>osmesa</em></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>llvmpipe</strong></td>\n<td>x11</td>\n<td>gallium-xlib</td>\n<td></td>\n<td>swrast</td>\n<td>true</td>\n<td>gallium</td>\n</tr>\n<tr>\n<td><strong>softpipe</strong></td>\n<td>x11</td>\n<td>gallium-xlib</td>\n<td></td>\n<td>swrast</td>\n<td>false</td>\n<td>gallium</td>\n</tr>\n<tr>\n<td><strong>tnl</strong></td>\n<td>x11</td>\n<td>gallium-xlib</td>\n<td></td>\n<td>swrast</td>\n<td>true</td>\n<td>classic</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"Three-Different-Call-Paths\"><a href=\"#Three-Different-Call-Paths\" class=\"headerlink\" title=\"Three Different Call Paths\"></a>Three Different Call Paths</h3><h4 id=\"Context\"><a href=\"#Context\" class=\"headerlink\" title=\"Context\"></a>Context</h4><div align=center><img src=\"/mesa/OSMesaCreateContextExt.png\" class=\"\" title=\"context initialization\"></div>\n\n<p>NOTE: As for softpipe and llvmpipe <code>gl_api</code> and <code>gl_context</code> are created respectively while both of them are created in one path for the classic osmesa.</p>\n<h4 id=\"Draw\"><a href=\"#Draw\" class=\"headerlink\" title=\"Draw\"></a>Draw</h4><div align=center><img src=\"/mesa/PopMatrix.png\" class=\"\" title=\"draw command\"></div>\n\n<h2 id=\"Gallium-Based-GLX-Demos\"><a href=\"#Gallium-Based-GLX-Demos\" class=\"headerlink\" title=\"Gallium-Based GLX Demos\"></a>Gallium-Based GLX Demos</h2><p>If you want to know the full graphic stack of an OpenGL demo, you can not get rid of the window system. That is why I will try some GLX demos. Evidently GLX demos must depend on X11. You can cope with this problem by installing <a href=\"https://sourceforge.net/projects/vcxsrv/\" target=\"_blank\" rel=\"noopener\">vcXsrv</a> on the Windows 10 which hosts your WSL. </p>\n<div align=center><img src=\"/mesa/glxgears.png\" class=\"\" title=\"glx demo\"></div>\n\n<p>This time I still choose the gallium-xlib with softpipe. The following call graph shows the path that GLX context is created.</p>\n<div align=center><img src=\"/mesa/glXCreateContext.png\" class=\"\" title=\"glx context creation\"></div>\n\n<p>As we know, Mesa is quite modularized and flexible. How does it take the path that <code>softpipe_create_context</code> rather than other pipe contexts? The <a href=\"https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/include/state_tracker/st_api.h\" target=\"_blank\" rel=\"noopener\">st_manager</a> is a key structure.</p>\n<p><code>struct pipe_screen</code> has a callback function that will be set to <code>softpipe_create_context</code>. The following calls will create <code>struct pipe_screen</code> that will be set to the <code>st_manager</code>.</p>\n<div align=center><img src=\"/mesa/glXChooseVisual.png\" class=\"\" title=\"pipe_screen creation\"></div>\n\n<p>To bind the intended gallium driver backend to Mesa there must be something done before <code>glXChooseVisual</code> is called. It’s started by the library <code>init()</code> and prepare the global variables.</p>\n<p><a href=\"https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/state_trackers/glx/xlib/xm_public.h\" target=\"_blank\" rel=\"noopener\">xm_public.h</a></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* This is the driver interface required by the glx/xlib state tracker. </span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">xm_driver</span> &#123;</span></span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pipe_screen</span> *(*<span class=\"title\">create_pipe_screen</span>)( <span class=\"title\">Display</span> *<span class=\"title\">display</span> );</span></span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">st_api</span> *(*<span class=\"title\">create_st_api</span>)( <span class=\"title\">void</span> );</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"keyword\">void</span></span><br><span class=\"line\">xmesa_set_driver( <span class=\"keyword\">const</span> struct xm_driver *driver );</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/targets/libgl-xlib/xlib.c\" target=\"_blank\" rel=\"noopener\">xlib.c</a></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Helper function to build a subset of a driver stack consisting of</span></span><br><span class=\"line\"><span class=\"comment\"> * one of the software rasterizers (llvmpipe, softpipe) and the</span></span><br><span class=\"line\"><span class=\"comment\"> * xlib winsys.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pipe_screen</span> *</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">swrast_xlib_create_screen</span>( <span class=\"title\">Display</span> *<span class=\"title\">display</span> )</span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sw_winsys</span> *<span class=\"title\">winsys</span>;</span></span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pipe_screen</span> *<span class=\"title\">screen</span> = <span class=\"title\">NULL</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* Create the underlying winsys, which performs presents to Xlib</span></span><br><span class=\"line\"><span class=\"comment\">    * drawables:</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   winsys = xlib_create_sw_winsys( display );</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (winsys == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* Create a software rasterizer on top of that winsys:</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   screen = sw_screen_create( winsys );</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (screen == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">      <span class=\"keyword\">goto</span> fail;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* Inject any wrapping layers we want to here:</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"keyword\">return</span> debug_screen_wrap( screen );</span><br><span class=\"line\"></span><br><span class=\"line\">fail:</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (winsys)</span><br><span class=\"line\">      winsys-&gt;destroy( winsys );</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">xm_driver</span> <span class=\"title\">xlib_driver</span> = </span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">   .create_pipe_screen = swrast_xlib_create_screen,</span><br><span class=\"line\">   .create_st_api = st_gl_api_create,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Build the rendering stack.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">NOTE:</span> The obsolete symbols _init and _fini</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * signature:</span></span><br><span class=\"line\"><span class=\"comment\"> * void _init(void);</span></span><br><span class=\"line\"><span class=\"comment\"> * void _fini(void);</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * The linker recoginizes special symbols _init and _fini. If a dynamic library</span></span><br><span class=\"line\"><span class=\"comment\"> * exports a routine named _init, then that code is executed after the loading,</span></span><br><span class=\"line\"><span class=\"comment\"> * before dlopen() returns. If the dynamic library exports a routine named _fini,</span></span><br><span class=\"line\"><span class=\"comment\"> * then that routine is called just before the library is unloaded. In case you</span></span><br><span class=\"line\"><span class=\"comment\"> * need to avoid linking against the system startup files,this can be done by</span></span><br><span class=\"line\"><span class=\"comment\"> * giving gcc the \"-nostartfiles\" parameter on the command line.</span></span><br><span class=\"line\"><span class=\"comment\"> * Using these routines, or the gcc -nostartfiles of -nostdlib options, is not</span></span><br><span class=\"line\"><span class=\"comment\"> * recommended. Their use may result in undesired behavior, since the constructor/</span></span><br><span class=\"line\"><span class=\"comment\"> * destructor routines will not be executed(unless special measures are taken).</span></span><br><span class=\"line\"><span class=\"comment\"> * Instead, libraries should export routines using the __attribute__((constructor))</span></span><br><span class=\"line\"><span class=\"comment\"> * and __attribute__((destructor)) function attributes. Constructor routines are</span></span><br><span class=\"line\"><span class=\"comment\"> * executed before dlopen() returns, and destructor routines ared executed before</span></span><br><span class=\"line\"><span class=\"comment\"> * dlclose() returns.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> _init( <span class=\"keyword\">void</span> ) __attribute__((constructor));</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> _init( <span class=\"keyword\">void</span> )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"comment\">/* Initialize the xlib libgl code, pass in the winsys:</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   xmesa_set_driver( &amp;xlib_driver );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>where define the <code>xlib_driver</code> and set by <code>_init()</code>.</p>\n<p><a href=\"https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/auxiliary/target-helpers/sw_helper.h\" target=\"_blank\" rel=\"noopener\">sw_helper.h</a></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">inline</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pipe_screen</span> *</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">sw_screen_create_named</span>(<span class=\"title\">struct</span> <span class=\"title\">sw_winsys</span> *<span class=\"title\">winsys</span>, <span class=\"title\">const</span> <span class=\"title\">char</span> *<span class=\"title\">driver</span>)</span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pipe_screen</span> *<span class=\"title\">screen</span> = <span class=\"title\">NULL</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(GALLIUM_LLVMPIPE)</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (screen == <span class=\"literal\">NULL</span> &amp;&amp; <span class=\"built_in\">strcmp</span>(driver, <span class=\"string\">\"llvmpipe\"</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">      screen = llvmpipe_create_screen(winsys);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(GALLIUM_VIRGL)</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (screen == <span class=\"literal\">NULL</span> &amp;&amp; <span class=\"built_in\">strcmp</span>(driver, <span class=\"string\">\"virpipe\"</span>) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">virgl_winsys</span> *<span class=\"title\">vws</span>;</span></span><br><span class=\"line\">      vws = virgl_vtest_winsys_wrap(winsys);</span><br><span class=\"line\">      screen = virgl_create_screen(vws, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(GALLIUM_SOFTPIPE)</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (screen == <span class=\"literal\">NULL</span> &amp;&amp; <span class=\"built_in\">strcmp</span>(driver, <span class=\"string\">\"softpipe\"</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">      screen = softpipe_create_screen(winsys);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(GALLIUM_SWR)</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (screen == <span class=\"literal\">NULL</span> &amp;&amp; <span class=\"built_in\">strcmp</span>(driver, <span class=\"string\">\"swr\"</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">      screen = swr_create_screen(winsys);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(GALLIUM_ZINK)</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (screen == <span class=\"literal\">NULL</span> &amp;&amp; <span class=\"built_in\">strcmp</span>(driver, <span class=\"string\">\"zink\"</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">      screen = zink_create_screen(winsys);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> screen;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pipe_screen</span> *</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">sw_screen_create</span>(<span class=\"title\">struct</span> <span class=\"title\">sw_winsys</span> *<span class=\"title\">winsys</span>)</span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">   <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *default_driver;</span><br><span class=\"line\">   <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *driver;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(GALLIUM_LLVMPIPE)</span></span><br><span class=\"line\">   default_driver = <span class=\"string\">\"llvmpipe\"</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">elif</span> defined(GALLIUM_SOFTPIPE)</span></span><br><span class=\"line\">   default_driver = <span class=\"string\">\"softpipe\"</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">elif</span> defined(GALLIUM_SWR)</span></span><br><span class=\"line\">   default_driver = <span class=\"string\">\"swr\"</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">elif</span> defined(GALLIUM_ZINK)</span></span><br><span class=\"line\">   default_driver = <span class=\"string\">\"zink\"</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">   default_driver = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">   driver = debug_get_option(<span class=\"string\">\"GALLIUM_DRIVER\"</span>, default_driver);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> sw_screen_create_named(winsys, driver);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://gitlab.freedesktop.org/mesa/mesa/blob/master/src/gallium/state_trackers/glx/xlib/xm_api.c\" target=\"_blank\" rel=\"noopener\">xm_api.c</a></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Driver interface routines, set up by xlib backend on library</span></span><br><span class=\"line\"><span class=\"comment\"> * _init().  These are global in the same way that function names are</span></span><br><span class=\"line\"><span class=\"comment\"> * global.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">xm_driver</span> <span class=\"title\">driver</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">st_api</span> *<span class=\"title\">stapi</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">xmesa_set_driver</span><span class=\"params\">( <span class=\"keyword\">const</span> struct xm_driver *templ )</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   driver = *templ;</span><br><span class=\"line\">   stapi = driver.create_st_api();</span><br><span class=\"line\"></span><br><span class=\"line\">   xmesa_strict_invalidate =</span><br><span class=\"line\">      debug_get_bool_option(<span class=\"string\">\"XMESA_STRICT_INVALIDATE\"</span>, FALSE);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> XMesaDisplay</span><br><span class=\"line\">xmesa_init_display( Display *display )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">static</span> <span class=\"keyword\">mtx_t</span> init_mutex = _MTX_INITIALIZER_NP;</span><br><span class=\"line\">   XMesaDisplay xmdpy;</span><br><span class=\"line\">   XMesaExtDisplayInfo *info;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (display == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   mtx_lock(&amp;init_mutex);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* Look for XMesaDisplay which corresponds to this display */</span></span><br><span class=\"line\">   info = MesaExtInfo.head;</span><br><span class=\"line\">   <span class=\"keyword\">while</span>(info) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (info-&gt;display == display) &#123;</span><br><span class=\"line\">         <span class=\"comment\">/* Found it */</span></span><br><span class=\"line\">         mtx_unlock(&amp;init_mutex);</span><br><span class=\"line\">         <span class=\"keyword\">return</span>  &amp;info-&gt;mesaDisplay;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      info = info-&gt;next;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* Not found.  Create new XMesaDisplay */</span></span><br><span class=\"line\">   <span class=\"comment\">/* first allocate X-related resources and hook destroy callback */</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* allocate mesa display info */</span></span><br><span class=\"line\">   info = (XMesaExtDisplayInfo *) Xmalloc(<span class=\"keyword\">sizeof</span>(XMesaExtDisplayInfo));</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (info == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">      mtx_unlock(&amp;init_mutex);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   info-&gt;display = display;</span><br><span class=\"line\"></span><br><span class=\"line\">   xmdpy = &amp;info-&gt;mesaDisplay; <span class=\"comment\">/* to be filled out below */</span></span><br><span class=\"line\">   xmdpy-&gt;display = display;</span><br><span class=\"line\">   xmdpy-&gt;pipe = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   xmdpy-&gt;smapi = CALLOC_STRUCT(st_manager);</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!xmdpy-&gt;smapi) &#123;</span><br><span class=\"line\">      Xfree(info);</span><br><span class=\"line\">      mtx_unlock(&amp;init_mutex);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   xmdpy-&gt;screen = driver.create_pipe_screen(display);</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!xmdpy-&gt;screen) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">free</span>(xmdpy-&gt;smapi);</span><br><span class=\"line\">      Xfree(info);</span><br><span class=\"line\">      mtx_unlock(&amp;init_mutex);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* At this point, both smapi and screen are known to be valid */</span></span><br><span class=\"line\">   xmdpy-&gt;smapi-&gt;screen = xmdpy-&gt;screen;</span><br><span class=\"line\">   xmdpy-&gt;smapi-&gt;get_param = xmesa_get_param;</span><br><span class=\"line\">   (<span class=\"keyword\">void</span>) mtx_init(&amp;xmdpy-&gt;mutex, mtx_plain);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* chain to the list of displays */</span></span><br><span class=\"line\">   _XLockMutex(_Xglobal_lock);</span><br><span class=\"line\">   info-&gt;next = MesaExtInfo.head;</span><br><span class=\"line\">   MesaExtInfo.head = info;</span><br><span class=\"line\">   MesaExtInfo.ndisplays++;</span><br><span class=\"line\">   _XUnlockMutex(_Xglobal_lock);</span><br><span class=\"line\"></span><br><span class=\"line\">   mtx_unlock(&amp;init_mutex);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> xmdpy;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>where <code>driver.create_pipe_screen(display)</code> is instantiated as <code>xlib_driver.swrast_xlib_create_screen</code>. As we see, the dynamic library routine <code>_init()</code> will set <code>xlib_driver.create_pipe_screen</code> to <code>swrast_xlib_create_screen</code> that return a <code>pipe_screen</code> to be set to the <code>st_manager-&gt;screen</code>. Eventually those two helper functions decide which gallium driver backend will be used by compilation macros.</p>\n<h2 id=\"Gallium-Genbu\"><a href=\"#Gallium-Genbu\" class=\"headerlink\" title=\"Gallium Genbu\"></a>Gallium Genbu</h2><p>To verify the analysis above we will try to add a customized gallium driver named <strong>genbu</strong> as a clone from the existing softpipe based GLX. All that we will do is three parts work below.</p>\n<ul>\n<li>key data structures: genbu_screen, genbu_context, the related callbacks and definitions </li>\n<li>helper functions for loading software rasterizers for GLX</li>\n<li>build scripts</li>\n</ul>\n<h3 id=\"Added-or-Modified-Sources-and-Build-Scripts\"><a href=\"#Added-or-Modified-Sources-and-Build-Scripts\" class=\"headerlink\" title=\"Added or Modified Sources and Build Scripts\"></a><a href=\"https://gitlab.freedesktop.org/lucmaa/mesa/tree/gallium-gb-1.0\" target=\"_blank\" rel=\"noopener\">Added or Modified Sources and Build Scripts</a></h3><h3 id=\"Trace\"><a href=\"#Trace\" class=\"headerlink\" title=\"Trace\"></a>Trace</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><em>belong</em></th>\n<th><em>hook</em></th>\n<th><em>callback</em></th>\n<th><em>caller</em></th>\n<th><em>X/GL API</em></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>pipe_screen</td>\n<td>resource_create</td>\n<td>softpipe_resource_create</td>\n<td>bufferobj_data</td>\n<td></td>\n</tr>\n<tr>\n<td>pipe_context</td>\n<td>transfer_map</td>\n<td>softpipe_transfer_map</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>pipe_context</td>\n<td>create_surface</td>\n<td>softpipe_create_surface</td>\n<td>st_framebuffer_validate</td>\n<td></td>\n</tr>\n<tr>\n<td>pipe_context</td>\n<td>flush</td>\n<td>softpipe_flush_wrapped</td>\n<td>st_context_flush</td>\n<td>glXSwapBuffers</td>\n</tr>\n<tr>\n<td>pipe_context</td>\n<td>clear</td>\n<td>softpipe_clear</td>\n<td>st_Clear</td>\n<td>glClear</td>\n</tr>\n<tr>\n<td>pipe_context</td>\n<td>draw_vbo</td>\n<td>softpipe_draw_vbo</td>\n<td>st_draw_vbo</td>\n<td>glCallList</td>\n</tr>\n<tr>\n<td>pipe_context</td>\n<td>draw_vbo</td>\n<td>softpipe_draw_vbo</td>\n<td>st_draw_vbo</td>\n<td>glCallList</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"DRI-Based-GLX-Demos\"><a href=\"#DRI-Based-GLX-Demos\" class=\"headerlink\" title=\"DRI-Based GLX Demos\"></a>DRI-Based GLX Demos</h2><h3 id=\"Loading\"><a href=\"#Loading\" class=\"headerlink\" title=\"Loading\"></a>Loading</h3><ul>\n<li><code>__glXInitialize</code></li>\n<li><code>driOpenDriver</code></li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(GLX_DIRECT_RENDERING) &amp;&amp; !defined(GLX_USE_APPLEGL)</span></span><br><span class=\"line\">   glx_direct = !env_var_as_boolean(<span class=\"string\">\"LIBGL_ALWAYS_INDIRECT\"</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">   glx_accel = !env_var_as_boolean(<span class=\"string\">\"LIBGL_ALWAYS_SOFTWARE\"</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">   dpyPriv-&gt;drawHash = __glxHashCreate();</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    ** Initialize the direct rendering per display data and functions.</span></span><br><span class=\"line\"><span class=\"comment\">    ** Note: This _must_ be done before calling any other DRI routines</span></span><br><span class=\"line\"><span class=\"comment\">    ** (e.g., those called in AllocAndFetchScreenConfigs).</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(GLX_USE_DRM)</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (glx_direct &amp;&amp; glx_accel) &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined(HAVE_DRI3)</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!env_var_as_boolean(<span class=\"string\">\"LIBGL_DRI3_DISABLE\"</span>, <span class=\"literal\">false</span>))</span><br><span class=\"line\">         dpyPriv-&gt;dri3Display = dri3_create_display(dpy);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* HAVE_DRI3 */</span></span></span><br><span class=\"line\">      dpyPriv-&gt;dri2Display = dri2CreateDisplay(dpy);</span><br><span class=\"line\">      dpyPriv-&gt;driDisplay = driCreateDisplay(dpy);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* GLX_USE_DRM */</span></span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (glx_direct)</span><br><span class=\"line\">      dpyPriv-&gt;driswDisplay = driswCreateDisplay(dpy);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* GLX_DIRECT_RENDERING &amp;&amp; !GLX_USE_APPLEGL */</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> GLX_USE_APPLEGL</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!applegl_create_display(dpyPriv)) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">free</span>(dpyPriv);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> GLX_USE_WINDOWSGL</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (glx_direct &amp;&amp; glx_accel)</span><br><span class=\"line\">      dpyPriv-&gt;windowsdriDisplay = driwindowsCreateDisplay(dpy);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!AllocAndFetchScreenConfigs(dpy, dpyPriv)) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">free</span>(dpyPriv);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>This process of loading drivers works similarly with that of gallium-based glx. Compilation macros and environment variables make a difference. There are several approaches to load the specific drivers:</p>\n<ul>\n<li><code>dri3_create_display</code></li>\n<li><code>dri2CreateDisplay</code></li>\n<li><code>driCreateDisplay</code></li>\n<li><code>driswCreateDisplay</code></li>\n<li><code>applegl_create_display</code></li>\n<li><code>driwindowsCreateDisplay</code></li>\n</ul>\n<p>Let’s look into <code>driCreateDisplay</code>. Once it manages to attach to <code>driCreateScreen</code> which searches and matches the appropriate gallium driver the function <code>driOpenDriver</code> will open the <strong>found</strong> driver by its name like “i965”, “radeon”, “nouveau”, etc. These drivers are supposed to be installed at <strong><code>LIBGL_DRIVERS_PATH</code></strong> or <code>LIBGL_DRIVERS_DIR</code>(deprecated) and named as <code>*_dri.so</code> by default.</p>\n<p>Like Gallium-based GLX’s <code>_init</code> routine with GCC <strong><code>constructor</code></strong> attribute, DRI-based GLX also defines a routine <code>megadriver_stub_init</code> with <code>constructor</code> attribute which allows to load the specific driver in a way of <strong><code>__DRIextension</code></strong>.</p>\n<div align=center><img src=\"/mesa/gdb.svg\" class=\"\" title=\"osdemo\"></div>\n\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * This is a constructor function for the megadriver dynamic library.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * When the driver is dlopen'ed, this function will run. It will</span></span><br><span class=\"line\"><span class=\"comment\"> * search for the name of the foo_dri.so file that was opened using</span></span><br><span class=\"line\"><span class=\"comment\"> * the dladdr function.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * After finding foo's name, it will call __driDriverGetExtensions_foo</span></span><br><span class=\"line\"><span class=\"comment\"> * and use the return to update __driDriverExtensions to enable</span></span><br><span class=\"line\"><span class=\"comment\"> * compatibility with older DRI driver loaders.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">__attribute__((constructor)) <span class=\"keyword\">static</span> <span class=\"keyword\">void</span></span><br><span class=\"line\">megadriver_stub_init(<span class=\"keyword\">void</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * Allocate, initialize and return a __DRIdisplayPrivate object.</span></span><br><span class=\"line\"><span class=\"comment\"> * This is called from __glXInitialize() when we are given a new</span></span><br><span class=\"line\"><span class=\"comment\"> * display pointer.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">_X_HIDDEN __GLXDRIdisplay *</span><br><span class=\"line\">driCreateDisplay(Display * dpy)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">dri_display</span> *<span class=\"title\">pdpyp</span>;</span></span><br><span class=\"line\">   <span class=\"keyword\">int</span> eventBase, errorBase;</span><br><span class=\"line\">   <span class=\"keyword\">int</span> major, minor, patch;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!XF86DRIQueryExtension(dpy, &amp;eventBase, &amp;errorBase)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!XF86DRIQueryVersion(dpy, &amp;major, &amp;minor, &amp;patch)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   pdpyp = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span> *pdpyp);</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!pdpyp) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   pdpyp-&gt;driMajor = major;</span><br><span class=\"line\">   pdpyp-&gt;driMinor = minor;</span><br><span class=\"line\">   pdpyp-&gt;driPatch = patch;</span><br><span class=\"line\"></span><br><span class=\"line\">   pdpyp-&gt;base.destroyDisplay = driDestroyDisplay;</span><br><span class=\"line\">   pdpyp-&gt;base.createScreen = driCreateScreen;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> &amp;pdpyp-&gt;base;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Contexts\"><a href=\"#Contexts\" class=\"headerlink\" title=\"Contexts\"></a>Contexts</h2><p>There are a variety of <strong>contexts</strong> in Mesa. They are designed as a framework of layers.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__________________</span><br><span class=\"line\">|                |</span><br><span class=\"line\">|   gl_contex    | --------------&gt; standard &amp; general</span><br><span class=\"line\">|________________|</span><br><span class=\"line\"></span><br><span class=\"line\">__________________</span><br><span class=\"line\">|                |</span><br><span class=\"line\">|   st_contex    | --------------&gt; adapter</span><br><span class=\"line\">|________________|</span><br><span class=\"line\"></span><br><span class=\"line\">__________________</span><br><span class=\"line\">|                |</span><br><span class=\"line\">|  draw_contex   | --------------&gt; driver-specific</span><br><span class=\"line\">|________________|</span><br></pre></td></tr></table></figure>\n<h3 id=\"gl-context\"><a href=\"#gl-context\" class=\"headerlink\" title=\"gl_context\"></a>gl_context</h3><blockquote><p>This is the central context data structure for Mesa. Almost all OpenGL state is contained in this structure. Think of this as a base class from which device drivers will derive sub classes.</p>\n</blockquote>\n<p>Apart from OpenGL state it contains several other contexts</p>\n<ul>\n<li><code>swrast_context</code></li>\n<li><code>swsetup_context</code></li>\n<li><code>swtnl_context</code></li>\n<li><code>vbo_context</code></li>\n<li><code>st_context</code></li>\n</ul>\n<h3 id=\"st-context\"><a href=\"#st-context\" class=\"headerlink\" title=\"st_context\"></a>st_context</h3><h3 id=\"draw-context\"><a href=\"#draw-context\" class=\"headerlink\" title=\"draw_context\"></a>draw_context</h3><h3 id=\"vbo-context\"><a href=\"#vbo-context\" class=\"headerlink\" title=\"vbo_context\"></a>vbo_context</h3><p>VBO is short for vertex buffer object. This context derives two kinds of vbo contexts, <code>vbo_exec_context</code> and <code>vbo_save_context</code> which <code>vbo_exec_context</code> is generic for core and compatible ogl and the other is specific for compatible ogl.</p>\n<h4 id=\"vbo-exec-vtx-init\"><a href=\"#vbo-exec-vtx-init\" class=\"headerlink\" title=\"vbo_exec_vtx_init\"></a>vbo_exec_vtx_init</h4><ul>\n<li>Allocate a <code>gl_buffer_object</code> which just is referenced.</li>\n<li>Initialize vbo attributes including size, type and active size.</li>\n</ul>\n<h4 id=\"vbo-vs-vao\"><a href=\"#vbo-vs-vao\" class=\"headerlink\" title=\"vbo vs. vao\"></a>vbo vs. vao</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_buffer_object</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">   GLint RefCount;</span><br><span class=\"line\">   GLuint Name;</span><br><span class=\"line\">   GLchar *Label;       </span><br><span class=\"line\">   GLenum16 Usage;      </span><br><span class=\"line\">   GLbitfield StorageFlags; </span><br><span class=\"line\">   GLsizeiptrARB Size;  </span><br><span class=\"line\">   GLubyte *Data;       </span><br><span class=\"line\">   GLboolean DeletePending;   </span><br><span class=\"line\">   GLboolean Written;   </span><br><span class=\"line\">   GLboolean Purgeable; </span><br><span class=\"line\">   GLboolean Immutable; </span><br><span class=\"line\">   gl_buffer_usage UsageHistory; </span><br><span class=\"line\">   GLuint NumSubDataCalls;</span><br><span class=\"line\">   GLuint NumMapBufferWriteCalls;</span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_buffer_mapping</span> <span class=\"title\">Mappings</span>[<span class=\"title\">MAP_COUNT</span>];</span></span><br><span class=\"line\">   <span class=\"keyword\">simple_mtx_t</span> MinMaxCacheMutex;</span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">hash_table</span> *<span class=\"title\">MinMaxCache</span>;</span></span><br><span class=\"line\">   <span class=\"keyword\">unsigned</span> MinMaxCacheHitIndices;</span><br><span class=\"line\">   <span class=\"keyword\">unsigned</span> MinMaxCacheMissIndices;</span><br><span class=\"line\">   <span class=\"keyword\">bool</span> MinMaxCacheDirty;</span><br><span class=\"line\">   <span class=\"keyword\">bool</span> HandleAllocated; </span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_vertex_array_object</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">   GLuint Name;</span><br><span class=\"line\">   GLint RefCount;</span><br><span class=\"line\">   GLchar *Label;       </span><br><span class=\"line\">   GLboolean EverBound;</span><br><span class=\"line\">   <span class=\"keyword\">bool</span> SharedAndImmutable;</span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_array_attributes</span> <span class=\"title\">VertexAttrib</span>[<span class=\"title\">VERT_ATTRIB_MAX</span>];</span></span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_vertex_buffer_binding</span> <span class=\"title\">BufferBinding</span>[<span class=\"title\">VERT_ATTRIB_MAX</span>];</span></span><br><span class=\"line\">   GLbitfield VertexAttribBufferMask;</span><br><span class=\"line\">   GLbitfield Enabled;</span><br><span class=\"line\">   GLbitfield _EffEnabledVBO;</span><br><span class=\"line\">   gl_attribute_map_mode _AttributeMapMode;</span><br><span class=\"line\">   GLbitfield NewArrays;</span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">gl_buffer_object</span> *<span class=\"title\">IndexBufferObj</span>;</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Dispatchers\"><a href=\"#Dispatchers\" class=\"headerlink\" title=\"Dispatchers\"></a>Dispatchers</h2><ul>\n<li><em><code>Exec</code></em>: The current dispatch table for non-displaylist-saving execution, either BeginEnd or OutsideBeginEnd</li>\n<li><em><code>OutsideBeginEnd</code></em>: The normal dispatch table for non-displaylist-saving, non-begin/end</li>\n<li><em><code>Save</code></em>: The dispatch table used between glNewList() and glEndList()</li>\n<li><em><code>BeginEnd</code></em>: The dispatch table used between glBegin() and glEnd() (outside of a display list). Only valid functions between those two are set, which is mostly just the set in a GLvertexformat struct.</li>\n<li><em><code>ContextLost</code></em>: Dispatch table for when a graphics reset has happened.</li>\n<li><em><code>MarshalExec</code></em>: Dispatch table used to marshal API calls from the client program to a separate server thread. NULL if API calls are not being marshalled to another thread.</li>\n<li><em><code>CurrentClientDispatch</code></em>: Dispatch table currently in use for fielding API calls from the client program. If API calls are being marshalled to another thread, this refers to <em><code>MarshalExec</code></em>. Otherwise it refers to <em><code>CurrentServerDispatch</code></em>.</li>\n<li><em><code>CurrentServerDispatch</code></em>: Dispatch table currently in use for performing API calls. It refers to <em><code>Save</code></em> or <em><code>Exec</code></em>.</li>\n</ul>\n<h2 id=\"Modules\"><a href=\"#Modules\" class=\"headerlink\" title=\"Modules\"></a>Modules</h2><ul>\n<li>draw module</li>\n<li>CSO module</li>\n<li>translate module</li>\n<li>VBO module</li>\n<li>TNL module(Transform &amp; Light)</li>\n</ul>\n<h2 id=\"draw-xxx-stage\"><a href=\"#draw-xxx-stage\" class=\"headerlink\" title=\"draw_xxx_stage\"></a>draw_xxx_stage</h2><ul>\n<li><strong><code>extern struct draw_stage *draw_unfilled_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_twoside_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_offset_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_clip_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_flatshade_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_cull_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_stipple_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_wide_line_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_wide_point_stage( struct draw_context *context );</code></strong></li>\n<li><strong><code>extern struct draw_stage *draw_validate_stage( struct draw_context *context );</code></strong></li>\n</ul>\n<h2 id=\"Auxiliary\"><a href=\"#Auxiliary\" class=\"headerlink\" title=\"Auxiliary\"></a>Auxiliary</h2><ul>\n<li><p>cso_cache<br>  The CSO cache is used to accelerate preparation of state by saving driver-specific state structure for later use.</p>\n</li>\n<li><p>draw<br>  Draw is a software TCL pipeline for hardware that lacks vertex shaders or other essential parts of pre-rasterization vertex preparation.</p>\n</li>\n<li><p>driver_ddebug</p>\n</li>\n<li>driver_noop</li>\n<li>driver_rbug</li>\n<li>driver_trace</li>\n<li>gallivm</li>\n<li>hud</li>\n<li><p>indices<br>  Indices provides tools for translating or generating element indices for use with element-based rendering.</p>\n</li>\n<li><p>nir</p>\n</li>\n<li><p>os</p>\n<ul>\n<li>memory allocation</li>\n<li>simple message logging</li>\n<li>obtaining run-time configuration option</li>\n<li>threading primitives<br>The OS module contains the abstraction for basic operating system services above. This is the bare minimum required to port Gallium to a new platform. It already provides the implementations of these abstractions for the most common platforms. When targeting an embedded platform no implementation will be provided - these must be provided separately.</li>\n</ul>\n</li>\n<li><p>pipe-loader</p>\n</li>\n<li>pipebuffer</li>\n<li>postprocess</li>\n<li>rbug</li>\n<li>renderonly</li>\n<li>rtasm</li>\n<li>target-helpers</li>\n<li>tgsi</li>\n<li>translate</li>\n<li>util</li>\n<li>vl</li>\n</ul>\n<h2 id=\"Q-amp-A\"><a href=\"#Q-amp-A\" class=\"headerlink\" title=\"Q&amp;A\"></a>Q&amp;A</h2><h4 id=\"When-xlib-creates-pipe-screen-only-software-rasterizers-or-pipes’screen-are-created-And-llvmpipe-softpipe-virgl-swr-unexceptionally-are-software-rasterizers-or-virtual-GPU-Zink-is-in-brief-a-translator-from-OpenGL-to-Vulkan-and-implemented-as-Gallium-driver-So-why-only-software-pipes\"><a href=\"#When-xlib-creates-pipe-screen-only-software-rasterizers-or-pipes’screen-are-created-And-llvmpipe-softpipe-virgl-swr-unexceptionally-are-software-rasterizers-or-virtual-GPU-Zink-is-in-brief-a-translator-from-OpenGL-to-Vulkan-and-implemented-as-Gallium-driver-So-why-only-software-pipes\" class=\"headerlink\" title=\"When xlib creates pipe screen, only software rasterizers or pipes’screen are created. And llvmpipe, softpipe, virgl, swr, unexceptionally, are software rasterizers or virtual GPU. Zink is, in brief, a translator from OpenGL to Vulkan and implemented as Gallium driver. So why only software pipes?\"></a>When xlib creates pipe screen, <em>only</em> software rasterizers or pipes’screen are created. And llvmpipe, softpipe, virgl, swr, unexceptionally, are software rasterizers or virtual GPU. <a href=\"https://www.collabora.com/news-and-blog/blog/2018/10/31/introducing-zink-opengl-implementation-vulkan/\" target=\"_blank\" rel=\"noopener\">Zink</a> is, in brief, a translator from OpenGL to Vulkan and implemented as Gallium driver. So why only software pipes?</h4><p>The answer is <strong><code>sw_winsys</code></strong>. All of target helpers’s parameter is a <code>sw_winsys</code>. Check mesa source directory: <a href=\"https://gitlab.freedesktop.org/mesa/mesa/tree/master/src/gallium/winsys\" target=\"_blank\" rel=\"noopener\">mesa/src/gallium/winsys</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">amdgpu</span><br><span class=\"line\">etnaviv</span><br><span class=\"line\">freedreno</span><br><span class=\"line\">i915</span><br><span class=\"line\">iris</span><br><span class=\"line\">kmsro</span><br><span class=\"line\">lima</span><br><span class=\"line\">nouveau</span><br><span class=\"line\">panfrost</span><br><span class=\"line\">radeon</span><br><span class=\"line\">svga</span><br><span class=\"line\">sw</span><br><span class=\"line\">tegra</span><br><span class=\"line\">v3d</span><br><span class=\"line\">vc4</span><br><span class=\"line\">virgl</span><br></pre></td></tr></table></figure>\n<p>To put it simply, specific driver corresponds to specific winsys. The <code>sw</code> is for software rasterizers. If you expect to create pipe screen for some driver else, you need to add another target helper with its winsys as parameter like: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static inline struct pipe_screen *</span><br><span class=\"line\">i915_screen_create_named(struct i915_drm_winsys *winsys, const char *driver)</span><br></pre></td></tr></table></figure>\n<p>That means you have to declare a bunch of new interfaces from the top. So you’d better wrap the function to create specific driver’s winsys so that it can take a sw_winsys as its parameter like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#if defined(GALLIUM_VIRGL)</span><br><span class=\"line\">   if (screen == NULL &amp;&amp; strcmp(driver, &quot;virpipe&quot;) == 0) &#123;</span><br><span class=\"line\">      struct virgl_winsys *vws;</span><br><span class=\"line\">      vws = virgl_vtest_winsys_wrap(winsys);</span><br><span class=\"line\">      screen = virgl_create_screen(vws, NULL);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<h4 id=\"libGL-so-is-not-built-until-glx-option-is-enabled-in-meson-options-txt\"><a href=\"#libGL-so-is-not-built-until-glx-option-is-enabled-in-meson-options-txt\" class=\"headerlink\" title=\"libGL.so is not built until glx option is enabled in meson_options.txt.\"></a>libGL.so is not built until glx option is enabled in <strong>meson_options.txt</strong>.</h4><p>Only with essential build-time dependencies for X11 installed and glx option configured is libGL.so built.</p>\n<h4 id=\"What-role-do-DRM-DRI-and-Gallium-play-in-Mesa\"><a href=\"#What-role-do-DRM-DRI-and-Gallium-play-in-Mesa\" class=\"headerlink\" title=\"What role do DRM, DRI and Gallium play in Mesa?\"></a>What role do DRM, DRI and Gallium play in Mesa?</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_libdrm_checks = [</span><br><span class=\"line\">  [&apos;intel&apos;, with_dri_i915 or with_gallium_i915],</span><br><span class=\"line\">  [&apos;amdgpu&apos;, with_amd_vk or with_gallium_radeonsi],</span><br><span class=\"line\">  [&apos;radeon&apos;, (with_gallium_radeonsi or with_dri_r100 or with_dri_r200 or</span><br><span class=\"line\">              with_gallium_r300 or with_gallium_r600)],</span><br><span class=\"line\">  [&apos;nouveau&apos;, (with_gallium_nouveau or with_dri_nouveau)],</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>DRI and Gallium seem to be respectively different underlying implementation in Mesa. Moreover in term of swrast and i915, you have to choose either of both as you can read the following code snippet in meson.build. In fact DRI is more complicated and staler but Gallium is more smaller and simpler.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if with_dri_swrast and (with_gallium_softpipe or with_gallium_swr)</span><br><span class=\"line\">  error(&apos;Only one swrast provider can be built&apos;)</span><br><span class=\"line\">endif</span><br><span class=\"line\">if with_dri_i915 and with_gallium_i915</span><br><span class=\"line\">  error(&apos;Only one i915 provider can be built&apos;)</span><br><span class=\"line\">endif</span><br></pre></td></tr></table></figure>\n<h4 id=\"What-problems-are-encountered-when-you-build-mesa-on-the-WSL\"><a href=\"#What-problems-are-encountered-when-you-build-mesa-on-the-WSL\" class=\"headerlink\" title=\"What problems are encountered when you build mesa on the WSL?\"></a>What problems are encountered when you build mesa on the WSL?</h4><ul>\n<li>dri based GLX requires shared-glapi</li>\n<li>Gallium-xlib based GLX requires softpipe or llvmpipe<ul>\n<li>means that <code>gallium-xlib</code> is supposed to only support software rasterizers(llvmpipe, softpipe) and virtual GPU(virgl, swr).<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">option(</span><br><span class=\"line\">  &apos;glx&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;xlib&apos;,</span><br><span class=\"line\">  choices : [&apos;auto&apos;, &apos;disabled&apos;, &apos;dri&apos;, &apos;xlib&apos;, &apos;gallium-xlib&apos;],</span><br><span class=\"line\">  description : &apos;Build support for GLX platform&apos;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\nIn Mesa, glx is implemented in three ways:</li>\n</ul>\n</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>*-based</th>\n<th>backend</th>\n<th>window system</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dri-based</td>\n<td>non-sw-pipes</td>\n<td>*_drm_winsys</td>\n</tr>\n<tr>\n<td>xlib</td>\n<td>tnl</td>\n<td>sw_winsys</td>\n</tr>\n<tr>\n<td>gallium-based</td>\n<td>softpipe/llvmpipe</td>\n<td>sw_winsys</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li>OSMesa gallium requires gallium softpipe or llvmpipe<ul>\n<li>means if <code>osmesa</code> is configured as <code>gallium</code>, <code>gallium-drivers</code> must include <code>swrast</code> but the <code>classic</code> osmesa uses the fixed-functioned TNL by default.<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">option(</span><br><span class=\"line\">  &apos;osmesa&apos;,</span><br><span class=\"line\">  type : &apos;combo&apos;,</span><br><span class=\"line\">  value : &apos;gallium&apos;,</span><br><span class=\"line\">  choices : [&apos;none&apos;, &apos;classic&apos;, &apos;gallium&apos;],</span><br><span class=\"line\">  description : &apos;Build OSmesa.&apos;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>Cannot build GLX support without X11 platform support and at least one OpenGL API<ul>\n<li>GLX, As the name suggests, is dedicated to X11 winsys.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"When-glXInitialize-creates-the-Display-only-driswCreateDisplay-returns-successfully-Both-of-dri2CreateDisplay-and-driCreateDisplay-failed\"><a href=\"#When-glXInitialize-creates-the-Display-only-driswCreateDisplay-returns-successfully-Both-of-dri2CreateDisplay-and-driCreateDisplay-failed\" class=\"headerlink\" title=\"When __glXInitialize creates the Display, only driswCreateDisplay returns successfully. Both of dri2CreateDisplay and driCreateDisplay failed.\"></a>When <code>__glXInitialize</code> creates the <code>Display</code>, <strong>only</strong> <code>driswCreateDisplay</code> returns successfully. Both of <code>dri2CreateDisplay</code> and <code>driCreateDisplay</code> failed.</h4><ul>\n<li>env: WSL on Windows 10 and with vcXsrv installed on the host as X server</li>\n</ul>\n<p>The cause of failure is that vcXsrv has no extensions with DRI or DRI2. This lack of X server extension fails <code>DRI2QueryExtension</code> and <code>XF86DRIQueryExtension</code> so that the loading of gallium driver is not invoked.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * XextAddDisplay - add a display to this extension</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">XExtDisplayInfo *<span class=\"title\">XextAddDisplay</span> <span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    XExtensionInfo *extinfo,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    Display *dpy,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    _Xconst <span class=\"keyword\">char</span> *ext_name,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    XExtensionHooks *hooks,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    <span class=\"keyword\">int</span> nevents,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    XPointer data)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    XExtDisplayInfo *dpyinfo;</span><br><span class=\"line\"></span><br><span class=\"line\">    dpyinfo = (XExtDisplayInfo *) Xmalloc (<span class=\"keyword\">sizeof</span> (XExtDisplayInfo));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!dpyinfo) <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    dpyinfo-&gt;display = dpy;</span><br><span class=\"line\">    dpyinfo-&gt;data = data;</span><br><span class=\"line\">    dpyinfo-&gt;codes = XInitExtension (dpy, ext_name);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * if the server has the extension, then we can initialize the</span></span><br><span class=\"line\"><span class=\"comment\">     * appropriate function vectors</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dpyinfo-&gt;codes) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i, j;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>, j = dpyinfo-&gt;codes-&gt;first_event; i &lt; nevents; i++, j++) &#123;</span><br><span class=\"line\">\t    XESetWireToEvent (dpy, j, hooks-&gt;wire_to_event);</span><br><span class=\"line\">\t    XESetEventToWire (dpy, j, hooks-&gt;event_to_wire);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/* register extension for XGE */</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">strcmp</span>(ext_name, GE_NAME))</span><br><span class=\"line\">            xgeExtRegister(dpy, dpyinfo-&gt;codes-&gt;major_opcode, hooks);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;create_gc)</span><br><span class=\"line\">\t  XESetCreateGC (dpy, dpyinfo-&gt;codes-&gt;extension, hooks-&gt;create_gc);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;copy_gc)</span><br><span class=\"line\">\t  XESetCopyGC (dpy, dpyinfo-&gt;codes-&gt;extension, hooks-&gt;copy_gc);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;flush_gc)</span><br><span class=\"line\">\t  XESetFlushGC (dpy, dpyinfo-&gt;codes-&gt;extension, hooks-&gt;flush_gc);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;free_gc)</span><br><span class=\"line\">\t  XESetFreeGC (dpy, dpyinfo-&gt;codes-&gt;extension, hooks-&gt;free_gc);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;create_font)</span><br><span class=\"line\">\t  XESetCreateFont (dpy, dpyinfo-&gt;codes-&gt;extension, hooks-&gt;create_font);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;free_font)</span><br><span class=\"line\">\t  XESetFreeFont (dpy, dpyinfo-&gt;codes-&gt;extension, hooks-&gt;free_font);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;close_display)</span><br><span class=\"line\">\t  XESetCloseDisplay (dpy, dpyinfo-&gt;codes-&gt;extension,</span><br><span class=\"line\">\t\t\t     hooks-&gt;close_display);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;error)</span><br><span class=\"line\">\t  XESetError (dpy, dpyinfo-&gt;codes-&gt;extension, hooks-&gt;error);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hooks-&gt;error_string)</span><br><span class=\"line\">\t  XESetErrorString (dpy, dpyinfo-&gt;codes-&gt;extension,</span><br><span class=\"line\">\t\t\t    hooks-&gt;error_string);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (hooks-&gt;close_display) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/* The server doesn't have this extension.</span></span><br><span class=\"line\"><span class=\"comment\">\t * Use a private Xlib-internal extension to hang the close_display</span></span><br><span class=\"line\"><span class=\"comment\">\t * hook on so that the \"cache\" (extinfo-&gt;cur) is properly cleaned.</span></span><br><span class=\"line\"><span class=\"comment\">\t * (XBUG 7955)</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\tXExtCodes *codes = XAddExtension(dpy);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!codes) &#123;</span><br><span class=\"line\">\t    XFree(dpyinfo);</span><br><span class=\"line\">\t    <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tXESetCloseDisplay (dpy, codes-&gt;extension, hooks-&gt;close_display);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * now, chain it onto the list</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    _XLockMutex(_Xglobal_lock);</span><br><span class=\"line\">    dpyinfo-&gt;next = extinfo-&gt;head;</span><br><span class=\"line\">    extinfo-&gt;head = dpyinfo;</span><br><span class=\"line\">    extinfo-&gt;cur = dpyinfo;</span><br><span class=\"line\">    extinfo-&gt;ndisplays++;</span><br><span class=\"line\">    _XUnlockMutex(_Xglobal_lock);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dpyinfo;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[{"_id":"source/_posts/smart-pointer/shared_ptr.png","slug":"shared_ptr.png","post":"ckhb7pqif000ox1tsgkgee8ae","modified":0,"renderable":0},{"_id":"source/_posts/sparse-texture/SparseTextureExample.jpg","slug":"SparseTextureExample.jpg","post":"ckhb7pqig000qx1ts8o2q9is4","modified":0,"renderable":0},{"_id":"source/_posts/windows-insider-program/windows_update.png","slug":"windows_update.png","post":"ckhb7pqil0013x1tsb7su8nmg","modified":0,"renderable":0},{"_id":"source/_posts/mesa/OSMesaCreateContextExt.png","slug":"OSMesaCreateContextExt.png","post":"ckhb7pqj4001ux1tsb8jvhxyg","modified":0,"renderable":0},{"_id":"source/_posts/mesa/PopMatrix.png","slug":"PopMatrix.png","post":"ckhb7pqj4001ux1tsb8jvhxyg","modified":0,"renderable":0},{"_id":"source/_posts/mesa/gdb.svg","slug":"gdb.svg","post":"ckhb7pqj4001ux1tsb8jvhxyg","modified":0,"renderable":0},{"_id":"source/_posts/mesa/glXChooseVisual.png","slug":"glXChooseVisual.png","post":"ckhb7pqj4001ux1tsb8jvhxyg","modified":0,"renderable":0},{"_id":"source/_posts/mesa/glXCreateContext.png","slug":"glXCreateContext.png","post":"ckhb7pqj4001ux1tsb8jvhxyg","modified":0,"renderable":0},{"_id":"source/_posts/mesa/glxgears.png","slug":"glxgears.png","post":"ckhb7pqj4001ux1tsb8jvhxyg","modified":0,"renderable":0},{"_id":"source/_posts/mesa/osdemo.jpg","slug":"osdemo.jpg","post":"ckhb7pqj4001ux1tsb8jvhxyg","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckhb7pqid000jx1ts1tiv1dwi","category_id":"ckhb7pqic000fx1tsfxqndb3o","_id":"ckhb7pqig000rx1tsefl5e55e"},{"post_id":"ckhb7pqi7000bx1tsagar9ux6","category_id":"ckhb7pqic000fx1tsfxqndb3o","_id":"ckhb7pqii000vx1ts2309g524"},{"post_id":"ckhb7pqif000ox1tsgkgee8ae","category_id":"ckhb7pqic000fx1tsfxqndb3o","_id":"ckhb7pqij000yx1ts1l2n5p2z"},{"post_id":"ckhb7pqia000ex1ts0i8mh9dp","category_id":"ckhb7pqie000mx1ts5hdh2vb8","_id":"ckhb7pqik0010x1ts42ex1a6a"},{"post_id":"ckhb7pqig000qx1ts8o2q9is4","category_id":"ckhb7pqie000mx1ts5hdh2vb8","_id":"ckhb7pqil0014x1tsev1ocdth"},{"post_id":"ckhb7pqii000ux1tsgcm02jpl","category_id":"ckhb7pqie000mx1ts5hdh2vb8","_id":"ckhb7pqim0017x1ts4e44h55i"},{"post_id":"ckhb7pqie000lx1ts6e6oet6m","category_id":"ckhb7pqie000mx1ts5hdh2vb8","_id":"ckhb7pqin001ax1tsdm0w20l3"},{"post_id":"ckhb7pqij000xx1tsgi5r4aln","category_id":"ckhb7pqie000mx1ts5hdh2vb8","_id":"ckhb7pqin001cx1tsdme6g8xo"},{"post_id":"ckhb7pqik000zx1ts8ez4dnnv","category_id":"ckhb7pqie000mx1ts5hdh2vb8","_id":"ckhb7pqio001ex1tsea488uab"}],"PostTag":[{"post_id":"ckhb7pqhn0000x1ts6l8g4g72","tag_id":"ckhb7pqhx0004x1ts5h5314x9","_id":"ckhb7pqi60009x1ts9wn8bukc"},{"post_id":"ckhb7pqi6000ax1tshn2o7xue","tag_id":"ckhb7pqhx0004x1ts5h5314x9","_id":"ckhb7pqia000dx1tsfc01g9v0"},{"post_id":"ckhb7pqhs0002x1tsgb3l03lx","tag_id":"ckhb7pqhx0004x1ts5h5314x9","_id":"ckhb7pqic000gx1ts9f7mbq5g"},{"post_id":"ckhb7pqhy0005x1ts3n4x5o5k","tag_id":"ckhb7pqi8000cx1ts96hl5i0a","_id":"ckhb7pqie000kx1ts3ue0gztz"},{"post_id":"ckhb7pqi00006x1ts1j2y1l76","tag_id":"ckhb7pqid000ix1ts60qq9xu9","_id":"ckhb7pqig000px1ts931e7c0q"},{"post_id":"ckhb7pqi7000bx1tsagar9ux6","tag_id":"ckhb7pqif000nx1ts8keqdf33","_id":"ckhb7pqij000wx1tsad06evb8"},{"post_id":"ckhb7pqij000xx1tsgi5r4aln","tag_id":"ckhb7pqih000tx1ts7t6b3o90","_id":"ckhb7pqil0012x1ts02ho53ma"},{"post_id":"ckhb7pqia000ex1ts0i8mh9dp","tag_id":"ckhb7pqih000tx1ts7t6b3o90","_id":"ckhb7pqim0015x1tsg44458po"},{"post_id":"ckhb7pqik000zx1ts8ez4dnnv","tag_id":"ckhb7pqih000tx1ts7t6b3o90","_id":"ckhb7pqin0019x1tsh3aectxs"},{"post_id":"ckhb7pqim0016x1tsf6oc9l9u","tag_id":"ckhb7pqhx0004x1ts5h5314x9","_id":"ckhb7pqin001bx1ts76m782bj"},{"post_id":"ckhb7pqic000hx1tsgtq71a13","tag_id":"ckhb7pqil0011x1ts14u9hqly","_id":"ckhb7pqio001fx1tsa0su9mrf"},{"post_id":"ckhb7pqic000hx1tsgtq71a13","tag_id":"ckhb7pqin0018x1ts1lqz7nav","_id":"ckhb7pqio001gx1ts2xore6rz"},{"post_id":"ckhb7pqid000jx1ts1tiv1dwi","tag_id":"ckhb7pqin001dx1tsgqhm1n7q","_id":"ckhb7pqio001ix1tshquhar0p"},{"post_id":"ckhb7pqie000lx1ts6e6oet6m","tag_id":"ckhb7pqih000tx1ts7t6b3o90","_id":"ckhb7pqip001kx1ts0xuxg2bp"},{"post_id":"ckhb7pqif000ox1tsgkgee8ae","tag_id":"ckhb7pqin001dx1tsgqhm1n7q","_id":"ckhb7pqiq001mx1tshih157z9"},{"post_id":"ckhb7pqig000qx1ts8o2q9is4","tag_id":"ckhb7pqih000tx1ts7t6b3o90","_id":"ckhb7pqir001ox1tscb6c2ee7"},{"post_id":"ckhb7pqii000ux1tsgcm02jpl","tag_id":"ckhb7pqih000tx1ts7t6b3o90","_id":"ckhb7pqis001qx1tsczer1qi2"},{"post_id":"ckhb7pqil0013x1tsb7su8nmg","tag_id":"ckhb7pqis001px1ts7mmhb1wn","_id":"ckhb7pqis001rx1ts92xgd6b5"},{"post_id":"ckhb7pqil0013x1tsb7su8nmg","tag_id":"ckhb7pqi8000cx1ts96hl5i0a","_id":"ckhb7pqis001sx1tsanivg2mb"},{"post_id":"ckhb7pqj4001ux1tsb8jvhxyg","tag_id":"ckhb7pqi8000cx1ts96hl5i0a","_id":"ckhb7pqj5001vx1tsem6d0drp"}],"Tag":[{"name":"X","_id":"ckhb7pqhx0004x1ts5h5314x9"},{"name":"OpenGL","_id":"ckhb7pqi8000cx1ts96hl5i0a"},{"name":"gcc","_id":"ckhb7pqid000ix1ts60qq9xu9"},{"name":"multi-thread","_id":"ckhb7pqif000nx1ts8keqdf33"},{"name":"OGL Extension","_id":"ckhb7pqih000tx1ts7t6b3o90"},{"name":"re","_id":"ckhb7pqil0011x1ts14u9hqly"},{"name":"vi","_id":"ckhb7pqin0018x1ts1lqz7nav"},{"name":"cpp","_id":"ckhb7pqin001dx1tsgqhm1n7q"},{"name":"WSL","_id":"ckhb7pqis001px1ts7mmhb1wn"}]}}